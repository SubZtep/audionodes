{"version":3,"sources":["styled.tsx","components/graph/elems/styled.tsx","hooks/useAudioNodeDefs.ts","features/ux/uxSlice.ts","components/graph/elems/HandleOutputs.tsx","components/graph/elems/HandleInputs.tsx","components/graph/nodes/Analyser.tsx","features/activeSound/activeSoundSlice.ts","scripts/setupAudioMiddleware.ts","features/sounds/soundsSlice.ts","store.ts","components/graph/styled.tsx","scripts/audio.ts","scripts/helpers.ts","scripts/utils.ts","components/graph/elems/AudioParamDefaults.tsx","components/graph/elems/AudioParamsView.tsx","components/graph/elems/AudioParamForm.tsx","components/graph/elems/AudioParams.tsx","components/graph/nodes/BiquadFilter.tsx","components/graph/nodes/Oscillator.tsx","components/graph/GraphMenu.tsx","components/graph/AudioGraph.tsx","components/graph/nodes/Gain.tsx","components/side/Menu.tsx","components/side/MenuOpener.tsx","components/side/Analysers2D.tsx","components/side/Audio.tsx","components/side/Piano.tsx","components/side/Brand.tsx","components/side/Load.tsx","components/side/Save.tsx","App.tsx","index.tsx"],"names":["globalStyles","css","Main","styled","div","SideBar","MenuPopup","WidgetRows","IconButton","button","NodeBody","FormWrapper","H1","H2","Hr","hr","DataRow","DataKey","span","DataNote","type","useState","numberOfInputs","numberOfOutputs","frequency","automationRate","minValue","maxValue","defaultValue","detune","Q","gain","audioParams","uxSlice","createSlice","name","initialState","menu","editMode","loadElements","delSelected","sideLeft","reloadAudio","reducers","toggleMenu","state","toggleEditMode","toggleDelSelected","toggleSideLeft","toggleReloadAudio","setLoadElements","payload","selectMenu","ux","selectEditMode","selectDelSelected","selectSideLeft","selectLoadElements","selectReloadAudio","actions","memo","Array","fill","map","_value","index","key","position","Position","Bottom","style","left","Top","fftSizes","activeSoundSlice","playFrequency","analysers","gains","biquadFilters","oscillators","setName","setPlayFrequency","addConnect","flat","find","el","id","source","connectIds","push","target","delConnect","node","undefined","filter","setAnalysers","setAnalyser","findIndex","delAnalyser","setGains","setGain","delGain","setBiquadFilters","setBiquadFilter","delBiquadFilter","setOscillators","setOscillator","delOscillator","selectName","activeSound","selectPlayFrequency","selectAudioNodes","selectAnalyser","selectAnalysers","selectGain","selectGains","selectBiquadFilter","selectBiquadFilters","selectOscillator","selectOscillators","setupAudioMiddleware","dispatch","next","action","startsWith","endsWith","soundsSlice","addSound","description","store","configureStore","reducer","sounds","middleware","getDefaultMiddleware","globalGraph","globalGraphEditMode","globalGraphDraggableMode","GraphButtonBase","GraphButtons","GraphButtonMode","GraphButtonDel","GraphButton","icon","onClick","mode","children","className","fixedWidth","size","AudioContext","window","webkitAudioContext","audioContext","audioNodes","Map","restartAudioContext","a","close","clear","applyParams","params","time","currentTime","forEach","param","values","includes","call","checkSize","prev","validateSound","obj","Object","keys","some","randomBetween","min","max","Math","random","newNodePosition","canvasWidth","canvasHeight","bottom","halfHeight","x","y","formatNumber","num","parts","toString","split","replace","join","addParam","hideButton","entries","Number","MIN_SAFE_INTEGER","MAX_SAFE_INTEGER","showCoord","maxTime","setMaxTime","setMinValue","setMaxValue","coordParams","setCoordParams","useEffect","cps","reduce","total","value","length","viewBox","width","height","boxShadow","cp","JSON","stringify","cx","cy","r","fontSize","color","marginTop","audioParamCalls","nth","onChange","setNumber","event","currentTarget","getAttribute","val","valueAsNumber","isNaN","currValues","getNumber","step","data-nth","title","isArray","setParams","AudioParamForm","newParam","currParams","dcalls","paramChange","splice","delParam","types","addAudioNode","useDispatch","useSelector","audioNodeTypes","biquadfilter","basic","useMemo","defs","useAudioNodeDefs","biquadFilter","changeType","HandleInputs","AudioParamDefaults","columnCount","fontWeight","textTransform","typeVal","display","checked","AudioParams","AudioParamsView","HandleOutputs","oscillator","analyser","fftSize","lineWidth","htmlFor","flexGrow","fft","backgroundColor","defaultNode","data","label","connectable","selectable","isDelSelected","useStoreState","elements","setElements","selected","useRef","nextId","current","elems","isNode","sort","b","getNextId","removeElements","isEdge","styles","onConnect","connection","els","addEdge","nodeTypes","nodesDraggable","onSelectionChange","snapGrid","snapToGrid","onlyRenderVisibleNodes","connectionLineStyle","stroke","showInteractive","variant","BackgroundVariant","Dots","Lines","gap","GraphMenu","loadDefaultSounds","fetch","location","pathname","res","ok","json","sample","localStorage","setItem","toast","success","error","onMouseLeave","href","rel","MenuOpener","timer","onMouseEnter","setTimeout","clearTimeout","Menu","canvas","ctx","getContext","dimensions","getComputedStyle","getPropertyValue","slice","dpi","devicePixelRatio","setAttribute","dpiFix","console","draw","clearRect","get","drawWave","e","message","requestAnimationFrame","timeEnd","strokeStyle","bufferLength","frequencyBinCount","Float32Array","getFloatTimeDomainData","i","sliceWidth","beginPath","moveTo","lineTo","ref","snd","playDelay","restarting","latency","t","Date","now","audioNode","produced","Error","createOscillator","setValueAtTime","toId","connect","destination","set","start","play","stop","disconnect","delete","reloadAudioNodes","info","createGain","createAnalyser","createBiquadFilter","fromNode","top","right","clearWaitingQueue","textDecoration","PianoWrapper","Piano","lastFrequency","buttons","onMouseDown","onMouseMove","onMouseUp","onMouseOut","data-frequency","data-note","margin","fontFamily","lineHeight","marginLeft","process","retreiveNames","parse","names","setNames","select","as","getItem","input","onFocus","element","__rf","keyMap","TOGGLE_EDIT_MODE","DEL_SELECTED","App","handlers","AudioGraph","Brand","Load","Save","Audio","Analysers2D","POSITION","BOTTOM_LEFT","BOTTOM_RIGHT","transition","Slide","limit","autoClose","library","add","fab","fad","fal","far","fas","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.01dab341.chunk.js","sourcesContent":["import { css } from \"@emotion/core\"\nimport styled from \"@emotion/styled\"\n\nexport const globalStyles = css`\n  :root {\n    --graph-bg: #212d40;\n    --graph-bg-lines: #364156;\n    --side-bg: #11151c;\n    --side-default-width: 350px;\n    --widget-bg: #364156;\n    --input-border: #7d4e57;\n    --input-border-focus: #d66853;\n    --button-bg: #4f5f7d;\n    --node-bg: #11151c;\n    --node-selected-border: #d66853;\n  }\n\n  @import url(\"https://fonts.googleapis.com/css2?family=Roboto:wght@100;300;400&family=Tomorrow:wght@400;500&display=swap\");\n  * {\n    box-sizing: border-box;\n  }\n  html,\n  body {\n    padding: 0;\n    margin: 0;\n    width: 100vw;\n    height: 100vh;\n    font-family: Roboto, sans-serif;\n    font-style: normal;\n    font-weight: 400;\n    font-size: 16px;\n    overflow: hidden;\n  }\n`\n\nexport const Main = styled.div`\n  margin: 0;\n  padding: 0;\n  width: 100vw;\n  height: 100vh;\n  display: flex;\n\n  &.rev {\n    flex-direction: row-reverse;\n\n    > div:last-of-type {\n      border-left-width: 0;\n      border-right-width: 2px;\n    }\n\n    .menuOpener {\n      left: 6px;\n      right: auto;\n    }\n\n    .menu {\n      border-bottom-left-radius: 0;\n      border-bottom-right-radius: 0;\n      right: auto;\n      left: 0;\n    }\n  }\n`\n\nexport const SideBar = styled.div`\n  flex-grow: 1;\n  background-color: var(--side-bg);\n  color: #fff;\n  border: 0 solid #000;\n  border-left-width: 2px;\n\n  .menuOpener {\n    position: fixed;\n    top: 6px;\n    right: 6px;\n    &:hover {\n      transform: rotate(90deg);\n      transition: 500ms;\n    }\n  }\n\n  > *:not(.brand):not(.menuOpener):not(.menu) {\n    border-top: 2px solid #000;\n    background-color: var(--widget-bg);\n    color: #fff;\n\n    input,\n    select,\n    button {\n      font-size: 0.95rem;\n      flex-grow: 1;\n      border-radius: 3px;\n      background-color: transparent;\n      border: 1px solid var(--input-border);\n      font-family: Roboto;\n      padding: 6px;\n      color: #fff;\n      &:focus {\n        border-color: var(--input-border-focus);\n        border-width: 2px;\n        padding: 5px;\n      }\n    }\n\n    select option {\n      background-color: var(--widget-bg);\n    }\n\n    button {\n      width: 100%;\n      background-color: var(--button-bg);\n      border-width: 2px;\n      border-style: outset;\n      cursor: pointer;\n      &:focus {\n        padding: 6px;\n      }\n    }\n  }\n`\n\nexport const MenuPopup = styled.div`\n  top: 0;\n  right: 0;\n  width: 380px;\n  position: fixed;\n  z-index: 200;\n  background-color: #000;\n  padding: 25px;\n  border-bottom-left-radius: 4px;\n  box-shadow: 5px 5px 15px 5px #000000;\n\n  a {\n    color: #66f;\n  }\n\n  h2 {\n    text-align: center;\n  }\n\n  ul {\n    line-height: 28px;\n    font-size: 1.1rem;\n    padding-left: 25px;\n  }\n  li {\n    margin-top: 12px;\n  }\n`\n\nexport const WidgetRows = styled.div`\n  padding: 8px 6px;\n  display: flex;\n  flex-direction: column;\n  gap: 6px;\n\n  > div {\n    align-items: center;\n    display: flex;\n    gap: 8px;\n  }\n`\n\nexport const IconButton = styled.button`\n  background-color: transparent !important;\n  width: auto !important;\n  flex-shrink: 1 !important;\n  flex-grow: 0 !important;\n  border-width: 1px !important;\n\n  svg {\n    transition: 50ms;\n    &:hover {\n      transition: 50ms;\n      transform: scale(1.25);\n    }\n  }\n`\n","import styled from \"@emotion/styled\"\n\nexport const NodeBody = styled.div`\n  padding: 4px 6px;\n  border-radius: 3px 3px 2px 2px;\n  background-color: #364156;\n  // font-weight: 300;\n\n  input,\n  select,\n  button {\n    font-size: 0.95rem;\n    flex-grow: 1;\n    border-radius: 3px;\n    background-color: transparent;\n    border: 1px solid var(--input-border);\n    font-family: Roboto;\n    padding: 6px;\n    color: #fff;\n    &:focus {\n      border-color: var(--input-border-focus);\n      border-width: 2px;\n      padding: 5px;\n    }\n  }\n\n  select option {\n    background-color: var(--widget-bg);\n  }\n\n  button {\n    width: 100%;\n    background-color: var(--button-bg);\n    border-width: 2px;\n    border-style: outset;\n    cursor: pointer;\n    &:focus {\n      padding: 6px;\n    }\n  }\n`\n\nexport const FormWrapper = styled.div`\n  table {\n    select, input {\n      padding: 2px;\n      width: 60px;\n      &:focus {\n        padding: 1px;\n      }\n    }\n  }\n}\n`\n\nexport const FormWrapperGrid = styled(FormWrapper)`\n  display: grid;\n  gap: 2px;\n  grid-template-columns: 0.8fr 1fr;\n  align-items: center;\n}\n`\n\nexport const H1 = styled.div`\n  font-family: Tomorrow, sans-serif;\n  font-style: normal;\n  font-weight: 400;\n  text-align: center;\n  font-size: 1.2rem;\n  margin: 2px 0 5px;\n`\n\nexport const H2 = styled.div`\n  font-family: Tomorrow, sans-serif;\n  font-style: normal;\n  font-weight: 500;\n  font-size: 1.1rem;\n  margin: 12px 0;\n  &:first-of-type {\n    margin-top: 0;\n  }\n`\n\nexport const Hr = styled.hr`\n  margin: 15px 0 10px 0;\n  border: 0;\n  border-bottom: 1px dashed var(--node-bg);\n`\n\nexport const DelButton = styled.button`\n  border: 0;\n  background: transparent;\n  color: #f33;\n  font-size: 0.7rem;\n  padding: 0;\n`\n\nexport const DataRow = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  gap: 6px;\n  font-size: 0.95rem;\n  line-height: 1.35rem;\n`\n\nexport const DataKey = styled.span`\n  font-weight: 100;\n`\n\nexport const DataNote = styled.div`\n  font-size: 0.8rem;\n  color: #999;\n  word-spacing: -1px;\n\n  button {\n    margin-left: 6px;\n  }\n`\n","import { useState } from \"react\"\n\nexport type AudioParams = {\n  [key: string]: {\n    automationRate: \"a-rate\"\n    minValue: number\n    maxValue: number\n    defaultValue: number\n  }\n}\n\nexport default (type: \"AnalyserNode\" | \"BiquadFilterNode\" | \"GainNode\" | \"OscillatorNode\") => {\n  const [numberOfInputs] = useState(type === \"OscillatorNode\" ? 0 : 1)\n  const [numberOfOutputs] = useState(1)\n  const [audioParams] = useState<AudioParams>(\n    (): AudioParams => {\n      switch (type) {\n        case \"BiquadFilterNode\":\n          return {\n            frequency: {\n              automationRate: \"a-rate\",\n              minValue: 10,\n              /** half of the sample rate */\n              maxValue: 24000,\n              defaultValue: 350,\n            },\n            detune: {\n              automationRate: \"a-rate\",\n              defaultValue: 0,\n              minValue: -153600,\n              maxValue: 153600,\n            },\n            Q: {\n              automationRate: \"a-rate\",\n              defaultValue: 1,\n              minValue: 0.0001,\n              maxValue: 1000,\n            },\n            gain: {\n              automationRate: \"a-rate\",\n              /** dB value */\n              defaultValue: 0,\n              minValue: -40,\n              maxValue: 40,\n            },\n          }\n        case \"GainNode\":\n          return {\n            gain: {\n              automationRate: \"a-rate\",\n              minValue: 0,\n              /** half of the sample rate */\n              maxValue: 1,\n              defaultValue: 1,\n            },\n          }\n        case \"OscillatorNode\":\n          return {\n            frequency: {\n              automationRate: \"a-rate\",\n              minValue: -24000,\n              maxValue: 24000,\n              defaultValue: 440,\n            },\n            detune: {\n              automationRate: \"a-rate\",\n              defaultValue: 0,\n              minValue: -153600,\n              maxValue: 153600,\n            },\n          }\n      }\n      return {}\n    }\n  )\n\n  return {\n    numberOfInputs,\n    numberOfOutputs,\n    audioParams,\n  }\n}\n","import { createSlice, PayloadAction } from \"@reduxjs/toolkit\"\nimport { Elements } from \"react-flow-renderer\"\nimport { RootState } from \"../../store\"\n\ntype UX = {\n  /**\n   * Tells if popup menu visible\n   */\n  menu: boolean\n\n  /**\n   * All audio node on graph become editable\n   */\n  editMode: boolean\n\n  /**\n   * Load _**React-Flow** Elements_ from local storage,\n   * `const setElements = useStoreActions(actions => actions.setElements)`\n   * in Load component somehow doesn't work.\n   */\n  loadElements: Elements | null\n\n  /**\n   * Set to true to del selected in AudioGraph component\n   * */\n  delSelected: boolean\n\n  /**\n   * Sidebar on the left\n   */\n  sideLeft: boolean\n\n  /**\n   * Set to true to reload audio nodes in `Audio` component\n   */\n  reloadAudio: boolean\n}\n\nconst initialState: UX = {\n  menu: false,\n  editMode: true,\n  loadElements: null,\n  delSelected: false,\n  sideLeft: false,\n  reloadAudio: false,\n}\n\nconst uxSlice = createSlice({\n  name: \"ux\",\n  initialState,\n  reducers: {\n    toggleMenu: state => {\n      state.menu = !state.menu\n    },\n    toggleEditMode: state => {\n      state.editMode = !state.editMode\n    },\n    toggleDelSelected: state => {\n      state.delSelected = !state.delSelected\n    },\n    toggleSideLeft: state => {\n      state.sideLeft = !state.sideLeft\n    },\n    toggleReloadAudio: state => {\n      state.reloadAudio = !state.reloadAudio\n    },\n    setLoadElements: (state: UX, { payload }: PayloadAction<Elements | null>) => {\n      state.loadElements = payload\n    },\n  },\n})\n\nexport const selectMenu = ({ ux }: RootState) => ux.menu\nexport const selectEditMode = ({ ux }: RootState) => ux.editMode\nexport const selectDelSelected = ({ ux }: RootState) => ux.delSelected\nexport const selectSideLeft = ({ ux }: RootState) => ux.sideLeft\nexport const selectLoadElements = ({ ux }: RootState) => ux.loadElements\nexport const selectReloadAudio = ({ ux }: RootState) => ux.reloadAudio\nexport const {\n  toggleMenu,\n  toggleEditMode,\n  toggleDelSelected,\n  toggleSideLeft,\n  toggleReloadAudio,\n  setLoadElements,\n} = uxSlice.actions\nexport default uxSlice.reducer\n","import React, { memo, Fragment } from \"react\"\nimport { Handle, Position } from \"react-flow-renderer\"\n\ntype Props = {\n  numberOfOutputs: number\n}\n\nexport default memo(({ numberOfOutputs }: Props) => (\n  <Fragment>\n    {new Array(numberOfOutputs).fill(0).map((_value, index) => (\n      <Handle\n        key={`output${index}`}\n        type=\"source\"\n        position={Position.Bottom}\n        style={{ left: `${(100 / (numberOfOutputs + 1)) * (index + 1)}%` }}\n      />\n    ))}\n  </Fragment>\n))\n","import React, { Fragment, memo } from \"react\"\nimport { Handle, Position } from \"react-flow-renderer\"\n\ntype Props = {\n  numberOfInputs: number\n}\n\nexport default memo(({ numberOfInputs }: Props) => (\n  <Fragment>\n    {new Array(numberOfInputs).fill(0).map((_value, index) => (\n      <Handle\n        key={`input${index}`}\n        type=\"target\"\n        position={Position.Top}\n        style={{ left: `${(100 / (numberOfInputs + 1)) * (index + 1)}%` }}\n      />\n    ))}\n  </Fragment>\n))\n","/** @jsx jsx */\nimport { jsx } from \"@emotion/core\"\nimport { useDispatch, useSelector } from \"react-redux\"\nimport { NodeComponentProps } from \"react-flow-renderer\"\nimport { useMemo, useEffect, Fragment, ChangeEvent } from \"react\"\nimport { H1, DataRow, DataKey, NodeBody } from \"../elems/styled\"\nimport useAudioNodeDefs from \"../../../hooks/useAudioNodeDefs\"\nimport { selectEditMode } from \"../../../features/ux/uxSlice\"\nimport {\n  setAnalyser,\n  delAnalyser,\n  selectAnalyser,\n  Analyser,\n} from \"../../../features/activeSound/activeSoundSlice\"\nimport HandleOutputs from \"../elems/HandleOutputs\"\nimport HandleInputs from \"../elems/HandleInputs\"\nimport { WidgetRows } from \"../../../styled\"\n\nconst fftSizes = [32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768] as const\nexport type FFTSize = typeof fftSizes[number]\n\nexport default ({ id }: NodeComponentProps) => {\n  const basic: Analyser = useMemo(\n    () => ({\n      id,\n      connectIds: [],\n      fftSize: fftSizes[6],\n      color: \"#d66853\",\n      lineWidth: 2,\n    }),\n    [id]\n  )\n  const editMode = useSelector(selectEditMode)\n  const defs = useAudioNodeDefs(\"AnalyserNode\")\n  const dispatch = useDispatch()\n  const analyser: Analyser = useSelector(selectAnalyser)(id) || basic\n\n  useEffect(() => {\n    dispatch(setAnalyser(analyser))\n    return () => void dispatch(delAnalyser(id))\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [])\n\n  const setFFTSize = (event: ChangeEvent<HTMLSelectElement>) => {\n    dispatch(setAnalyser({ ...analyser, fftSize: +event.currentTarget.value as FFTSize }))\n  }\n\n  const setColor = (event: ChangeEvent<HTMLInputElement>) => {\n    dispatch(setAnalyser({ ...analyser, color: event.currentTarget.value }))\n  }\n\n  const setLineWidth = (event: ChangeEvent<HTMLInputElement>) => {\n    dispatch(setAnalyser({ ...analyser, lineWidth: event.currentTarget.valueAsNumber }))\n  }\n\n  return (\n    <Fragment>\n      <HandleInputs numberOfInputs={defs.numberOfInputs} />\n      <H1>Analyser #{id}</H1>\n\n      <NodeBody>\n        {editMode ? (\n          <WidgetRows>\n            <div>\n              <label htmlFor={`a1${id}`} css={{ flexGrow: 1 }}>\n                FFT Size\n              </label>\n              <select id={`a1${id}`} value={analyser.fftSize} onChange={setFFTSize}>\n                {fftSizes.map(fft => (\n                  <option key={fft} value={fft}>\n                    {fft}\n                  </option>\n                ))}\n              </select>\n            </div>\n            <div>\n              <label htmlFor={`a2{id}`} css={{ flexGrow: 1 }}>\n                Colour\n              </label>\n              <input id={`a2${id}`} type=\"color\" value={analyser.color} onChange={setColor} />\n            </div>\n            <div>\n              <label htmlFor={`a3${id}`} css={{ flexGrow: 1 }}>\n                Line Width\n              </label>\n              <input\n                id={`a3${id}`}\n                type=\"range\"\n                min={1}\n                max={50}\n                value={analyser.lineWidth}\n                onChange={setLineWidth}\n              />\n            </div>\n          </WidgetRows>\n        ) : (\n          <Fragment>\n            <DataRow>\n              <DataKey>FFT Size:</DataKey> {analyser.fftSize}\n            </DataRow>\n            <DataRow>\n              <DataKey>Line:</DataKey>\n              <div\n                css={{ height: analyser.lineWidth, backgroundColor: analyser.color, width: \"100%\" }}\n              ></div>\n            </DataRow>\n          </Fragment>\n        )}\n      </NodeBody>\n\n      <HandleOutputs numberOfOutputs={defs.numberOfOutputs} />\n    </Fragment>\n  )\n}\n","import { createSlice, PayloadAction } from \"@reduxjs/toolkit\"\nimport { AudioParamSetting } from \"../../components/graph/elems/AudioParamForm\"\nimport Analyser, { FFTSize } from \"../../components/graph/nodes/Analyser\"\nimport { RootState } from \"../../store\"\n\ntype Connect = {\n  source: string\n  target: string\n}\n\nexport type Analyser = {\n  id: string\n  connectIds: string[]\n  fftSize: FFTSize\n  color: string\n  lineWidth: number\n}\n\nexport type Gain = {\n  id: string\n  connectIds: string[]\n  params: AudioParamSetting[]\n}\n\nexport type BiquadFilter = {\n  id: string\n  connectIds: string[]\n  type: BiquadFilterType\n  params: AudioParamSetting[]\n}\n\nexport type Oscillator = {\n  id: string\n  connectIds: string[]\n  type: OscillatorType\n  params: AudioParamSetting[]\n}\n\ntype ActiveSound = {\n  name: string\n  playFrequency: number | null\n  analysers: Analyser[]\n  gains: Gain[]\n  biquadFilters: BiquadFilter[]\n  oscillators: Oscillator[]\n}\n\nconst initialState: ActiveSound = {\n  name: \"No Name\",\n  playFrequency: null,\n  analysers: [],\n  gains: [],\n  biquadFilters: [],\n  oscillators: [],\n}\n\nconst activeSoundSlice = createSlice({\n  name: \"activeSound\",\n  initialState,\n  reducers: {\n    setName: (state: ActiveSound, { payload }: PayloadAction<string>) => {\n      state.name = payload\n    },\n    setPlayFrequency: (state: ActiveSound, { payload }: PayloadAction<number | null>) => {\n      state.playFrequency = payload\n    },\n    addConnect: (state: ActiveSound, { payload }: PayloadAction<Connect>) => {\n      ;[state.analysers, state.gains, state.biquadFilters, state.oscillators]\n        .flat()\n        .find(el => el.id === payload.source)\n        ?.connectIds.push(payload.target)\n    },\n    delConnect: (state: ActiveSound, { payload }: PayloadAction<Connect>) => {\n      const node = [state.analysers, state.gains, state.biquadFilters, state.oscillators]\n        .flat()\n        .find(el => el.id === payload.source)\n      if (node !== undefined) {\n        node.connectIds = node.connectIds.filter(id => id !== payload.target)\n      }\n    },\n\n    setAnalysers: (state: ActiveSound, { payload }: PayloadAction<Analyser[]>) => {\n      state.analysers = payload\n    },\n    setAnalyser: (state: ActiveSound, { payload }: PayloadAction<Analyser>) => {\n      const index = state.analysers.findIndex(node => node.id === payload.id)\n      if (index === -1) {\n        state.analysers.push(payload)\n      } else {\n        state.analysers[index] = payload\n      }\n    },\n    delAnalyser: (state: ActiveSound, { payload }: PayloadAction<string>) => {\n      state.analysers = state.analysers.filter(node => node.id !== payload)\n    },\n\n    setGains: (state: ActiveSound, { payload }: PayloadAction<Gain[]>) => {\n      state.gains = payload\n    },\n    setGain: (state: ActiveSound, { payload }: PayloadAction<Gain>) => {\n      const index = state.gains.findIndex(node => node.id === payload.id)\n      if (index === -1) {\n        state.gains.push(payload)\n      } else {\n        state.gains[index] = payload\n      }\n    },\n    delGain: (state: ActiveSound, { payload }: PayloadAction<string>) => {\n      state.gains = state.gains.filter(node => node.id !== payload)\n    },\n\n    setBiquadFilters: (state: ActiveSound, { payload }: PayloadAction<BiquadFilter[]>) => {\n      state.biquadFilters = payload\n    },\n    setBiquadFilter: (state: ActiveSound, { payload }: PayloadAction<BiquadFilter>) => {\n      const index = state.biquadFilters.findIndex(node => node.id === payload.id)\n      if (index === -1) {\n        state.biquadFilters.push(payload)\n      } else {\n        state.biquadFilters[index] = payload\n      }\n    },\n    delBiquadFilter: (state: ActiveSound, { payload }: PayloadAction<string>) => {\n      state.biquadFilters = state.biquadFilters.filter(node => node.id !== payload)\n    },\n\n    setOscillators: (state: ActiveSound, { payload }: PayloadAction<Oscillator[]>) => {\n      state.oscillators = payload\n    },\n    setOscillator: (state: ActiveSound, { payload }: PayloadAction<Oscillator>) => {\n      const index = state.oscillators.findIndex(node => node.id === payload.id)\n      if (index === -1) {\n        state.oscillators.push(payload)\n      } else {\n        state.oscillators[index] = payload\n      }\n    },\n    delOscillator: (state: ActiveSound, { payload }: PayloadAction<string>) => {\n      state.oscillators = state.oscillators.filter(node => node.id !== payload)\n    },\n  },\n})\n\nexport const selectName = ({ activeSound }: RootState) => activeSound.name\nexport const selectPlayFrequency = ({ activeSound }: RootState) => activeSound.playFrequency\nexport const selectAudioNodes = ({ activeSound }: RootState) => ({\n  analysers: activeSound.analysers,\n  gains: activeSound.gains,\n  biquadFilters: activeSound.biquadFilters,\n  oscillators: activeSound.oscillators,\n})\n\nexport const selectAnalyser = ({ activeSound }: RootState) => (id: string) =>\n  activeSound.analysers.find(node => node.id === id)\nexport const selectAnalysers = ({ activeSound }: RootState) => activeSound.analysers\n\nexport const selectGain = ({ activeSound }: RootState) => (id: string) =>\n  activeSound.gains.find(node => node.id === id)\nexport const selectGains = ({ activeSound }: RootState) => activeSound.gains\n\nexport const selectBiquadFilter = ({ activeSound }: RootState) => (id: string) =>\n  activeSound.biquadFilters.find(node => node.id === id)\nexport const selectBiquadFilters = ({ activeSound }: RootState) => activeSound.biquadFilters\n\nexport const selectOscillator = ({ activeSound }: RootState) => (id: string) =>\n  activeSound.oscillators.find(node => node.id === id)\nexport const selectOscillators = ({ activeSound }: RootState) => activeSound.oscillators\n\nexport const {\n  setName,\n  setPlayFrequency,\n  addConnect,\n  delConnect,\n  setAnalysers,\n  setAnalyser,\n  delAnalyser,\n  setGains,\n  setGain,\n  delGain,\n  setBiquadFilters,\n  setBiquadFilter,\n  delBiquadFilter,\n  setOscillators,\n  setOscillator,\n  delOscillator,\n} = activeSoundSlice.actions\nexport default activeSoundSlice.reducer\n","import { Middleware, PayloadAction, Dispatch, AnyAction } from \"@reduxjs/toolkit\"\nimport { toggleReloadAudio } from \"../features/ux/uxSlice\"\n\nconst setupAudioMiddleware: Middleware = ({ dispatch }) => (next: Dispatch<AnyAction>) => (\n  action: PayloadAction\n) => {\n  if (\n    action.type.startsWith(\"activeSound/\") &&\n    !action.type.endsWith(\"setName\") &&\n    !action.type.endsWith(\"setPlayFrequency\")\n  ) {\n    dispatch(toggleReloadAudio())\n  }\n  next(action)\n}\n\nexport default setupAudioMiddleware\n","import { createSlice, PayloadAction } from \"@reduxjs/toolkit\"\n\ntype Sound = {\n  name: string\n  description: string\n}\n\nconst soundsSlice = createSlice({\n  name: \"sounds\",\n  initialState: [],\n  reducers: {\n    addSound(state: Sound[], action: PayloadAction<Sound>) {\n      const { name, description } = action.payload\n      state.push({ name, description })\n    },\n  },\n})\n\nexport const { addSound } = soundsSlice.actions\n\nexport default soundsSlice.reducer\n","import { configureStore, getDefaultMiddleware } from \"@reduxjs/toolkit\"\nimport activeSoundSlice from \"./features/activeSound/activeSoundSlice\"\nimport setupAudioMiddleware from \"./scripts/setupAudioMiddleware\"\nimport soundsSlice from \"./features/sounds/soundsSlice\"\nimport uxSlice from \"./features/ux/uxSlice\"\n\nconst store = configureStore({\n  reducer: {\n    activeSound: activeSoundSlice,\n    sounds: soundsSlice,\n    ux: uxSlice,\n  },\n  middleware: [...getDefaultMiddleware(), setupAudioMiddleware],\n})\n\nexport default store\nexport type RootState = ReturnType<typeof store.getState>\n","/** @jsx jsx */\nimport { jsx, css } from \"@emotion/core\"\nimport styled from \"@emotion/styled\"\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\"\nimport { IconProp } from \"@fortawesome/fontawesome-svg-core\"\nimport { audioNodeTypes } from \"./AudioGraph\"\nimport { PropsWithChildren } from \"react\"\n\nexport const globalGraph = css`\n  .react-flow {\n    background-color: var(--graph-bg);\n    resize: horizontal;\n    min-width: 80px;\n    width: calc(100% - var(--side-default-width));\n  }\n\n  .react-flow__node.audioNode {\n    min-width: 165px;\n    border-radius: 4px;\n    background-color: var(--node-bg);\n    color: #fff;\n    padding: 3px;\n\n    &.selected {\n      border: 2px solid var(--node-selected-border);\n      padding: 1px;\n    }\n\n    &.output {\n      font-family: Tomorrow;\n      font-size: 1rem;\n      padding: 8px;\n    }\n  }\n\n  .react-flow__handle {\n    width: 0.92rem;\n    height: 0.92rem;\n    &.react-flow__handle-top {\n      top: -0.64rem;\n      background-color: #e62020;\n    }\n    &.react-flow__handle-bottom {\n      bottom: -0.64rem;\n      background-color: #74c365;\n    }\n  }\n  .react-flow__edge {\n    .react-flow__edge-path {\n      stroke-width: 2;\n      stroke: #7d4e57;\n    }\n    &.selected .react-flow__edge-path {\n      stroke-width: 3;\n      stroke: #d66853;\n    }\n  }\n  .react-flow__controls-button {\n    width: 25px;\n    height: 25px;\n    opacity: 0.5;\n  }\n`\n\nexport const globalGraphEditMode = css`\n  .react-flow__node.audioNode {\n    cursor: default;\n  }\n`\n\nexport const globalGraphDraggableMode = css`\n  .react-flow__node.audioNode {\n    box-shadow: 1px 1px 4px 1px #333;\n  }\n`\n\nconst GraphButtonBase = styled.button`\n  background-color: #364156;\n  border-color: #7d4e57;\n  color: #fff;\n  font-family: Tomorrow;\n  font-size: 0.85rem;\n  border-radius: 3px;\n  padding: 4px;\n  cursor: pointer;\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  svg {\n    transition: 50ms;\n  }\n  &:hover svg {\n    transition: 50ms;\n    transform: scale(1.25);\n  }\n`\n\nexport const GraphButtons = styled.div`\n  position: absolute;\n  gap: 2px;\n  top: 8px;\n  right: 10px;\n  z-index: 4;\n  display: flex;\n  flex-direction: column;\n  .text {\n    overflow: hidden;\n    white-space: nowrap;\n    width: 0;\n    transition: 60ms;\n  }\n  &:hover .text {\n    width: 165px;\n    transition: 120ms;\n  }\n`\n\nconst GraphButtonMode = styled(GraphButtonBase)`\n  background-color: #455e87;\n`\n\nconst GraphButtonDel = styled(GraphButtonBase)`\n  background-color: #742a1b;\n`\n\ntype GraphBtnProps = {\n  icon: IconProp\n  onClick: (type: keyof typeof audioNodeTypes) => void\n  mode?: \"default\" | \"mode\" | \"del\"\n}\n\nexport const GraphButton = ({\n  icon,\n  onClick,\n  mode = \"default\",\n  children,\n}: PropsWithChildren<GraphBtnProps>) => {\n  switch (mode) {\n    case \"mode\":\n      return (\n        // @ts-ignore\n        <GraphButtonMode onClick={onClick}>\n          <div className=\"text\">{children}</div>\n          <FontAwesomeIcon fixedWidth icon={icon} size=\"lg\" />\n        </GraphButtonMode>\n      )\n    case \"del\":\n      return (\n        // @ts-ignore\n        <GraphButtonDel onClick={onClick}>\n          <div className=\"text\">{children}</div>\n          <FontAwesomeIcon fixedWidth icon={icon} size=\"lg\" />\n        </GraphButtonDel>\n      )\n    default:\n      return (\n        // @ts-ignore\n        <GraphButtonBase onClick={onClick}>\n          <div className=\"text\">{children}</div>\n          <FontAwesomeIcon fixedWidth icon={icon} size=\"lg\" />\n        </GraphButtonBase>\n      )\n  }\n}\n","import { AudioParamSetting } from \"../components/graph/elems/AudioParamForm\"\nexport const AUDIO_CONTEXT_DESTINATION = \"destination\"\n\n// @ts-ignore\n// eslint-disable-next-line no-native-reassign\nAudioContext = window.AudioContext || window.webkitAudioContext\nexport let audioContext = new AudioContext()\n\n/**\n * AudioNodes holder\n */\nexport const audioNodes = new Map<string, AudioNode>()\n\nexport const destroyAudioNodes = () => {\n  audioNodes.forEach(node => {\n    try {\n      node.disconnect()\n    } catch (e) {\n      console.error(\"Disconnect before reload failed\", [node, e])\n    }\n  })\n  audioNodes.clear()\n}\n\nexport const restartAudioContext = async () => {\n  await audioContext.close()\n  audioNodes.clear()\n  audioContext = new AudioContext()\n  return audioContext\n}\n\nexport const applyParams = (node: AudioNode, params: AudioParamSetting[], time?: number) => {\n  if (time === undefined) {\n    time = audioContext.currentTime\n  }\n  params.forEach(param => {\n    const values = [...param.values]\n    if (\n      [\n        \"setValueAtTime\",\n        \"linearRampToValueAtTime\",\n        \"exponentialRampToValueAtTime\",\n        \"setTargetAtTime\",\n        \"setValueCurveAtTime\",\n      ].includes(param.call)\n    ) {\n      // @ts-ignore\n      values[1] += time\n    }\n    if ([\"cancelScheduledValues\", \"cancelAndHoldAtTime\"].includes(param.call)) {\n      // @ts-ignore\n      values[0] += time\n    }\n\n    // @ts-ignore\n    node[param.name][param.call](...values)\n  })\n}\n","import { Elements, isNode } from \"react-flow-renderer\"\nimport { AUDIO_CONTEXT_DESTINATION } from \"./audio\"\n\nexport const checkSize = (prev: number, next: number) => prev === next\n\nexport const getNextId = (elems: Elements) =>\n  +elems\n    .filter(el => isNode(el))\n    .filter(el => el.id !== AUDIO_CONTEXT_DESTINATION)\n    .sort((a, b) => +b.id - +a.id)[0]?.id + 1 || 1\n\nexport const validateSound = (obj: any) => Object.keys(obj).some(key => key === \"elements\")\n","import { XYPosition } from \"react-flow-renderer\"\n\n/**\n * Random number between:\n * @param min (included)\n * @param max (not included)\n */\nexport const randomBetween = (min: number, max: number) => Math.random() * (max - min) + min\n\n/**\n * Find appropriate position for the coming node.\n * @param canvasWidth Audio graph canvas width\n * @param canvasHeight Audio graph canvas height\n * @param bottom Place should be on the top or on the bottom\n */\nexport const newNodePosition = (\n  canvasWidth: number,\n  canvasHeight: number,\n  bottom = false\n): XYPosition => {\n  const halfHeight = canvasHeight / 2\n  return {\n    x: randomBetween(0, canvasWidth - 200),\n    y: bottom ? randomBetween(halfHeight, canvasHeight) : randomBetween(0, halfHeight),\n  }\n}\n\n/**\n * Fix canvas blur problem\n * @param canvas Canvas DOM element\n * @returns Dimensions array\n */\nexport const dpiFix = (canvas: HTMLCanvasElement) => {\n  const width = +getComputedStyle(canvas).getPropertyValue(\"width\").slice(0, -2)\n  const height = +getComputedStyle(canvas).getPropertyValue(\"height\").slice(0, -2)\n  const dpi = window.devicePixelRatio\n  canvas.setAttribute(\"width\", (width * dpi).toString())\n  canvas.setAttribute(\"height\", (height * dpi).toString())\n  return { width, height }\n}\n\n/**\n * Format large number with spaces\n * @param num Float or integer number\n * @return Formatted number\n */\nexport const formatNumber = (num: number) => {\n  var parts = num.toString().split(\".\")\n  parts[0] = parts[0].replace(/\\B(?=(\\d{3})+(?!\\d))/g, \" \")\n  return parts.join(\".\")\n}\n","/** @jsx jsx */\nimport { Fragment } from \"react\"\nimport { jsx } from \"@emotion/core\"\nimport { AudioParams } from \"../../../hooks/useAudioNodeDefs\"\nimport { formatNumber } from \"../../../scripts/utils\"\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\"\nimport { DataRow, DataKey, DataNote, H2 } from \"./styled\"\nimport { IconButton } from \"../../../styled\"\n\ntype Props = {\n  audioParams: AudioParams\n  addParam: (name?: string, defaultValue?: number) => void\n  hideButton?: boolean\n}\n\nexport default ({ audioParams, addParam, hideButton }: Props) => {\n  return (\n    <Fragment>\n      <H2>Defaults</H2>\n      {Object.entries(audioParams).map(([key, params]) => {\n        return (\n          <DataRow key={key}>\n            <div>\n              <DataKey>{key}:</DataKey> {params.defaultValue}\n            </div>\n            <DataNote>\n              {params.minValue <= Number.MIN_SAFE_INTEGER ? \"∞\" : formatNumber(params.minValue)} —{\" \"}\n              {params.maxValue >= Number.MAX_SAFE_INTEGER ? \"∞\" : formatNumber(params.maxValue)}\n              {!hideButton && (\n                <IconButton onClick={() => addParam(key, params.defaultValue)}>\n                  <FontAwesomeIcon icon={[\"fad\", \"layer-plus\"]} size=\"lg\" />\n                </IconButton>\n              )}\n            </DataNote>\n          </DataRow>\n        )\n      })}\n    </Fragment>\n  )\n}\n","/** @jsx jsx */\nimport { jsx } from \"@emotion/core\"\nimport { useEffect, useState, Fragment } from \"react\"\nimport { AudioParamSetting } from \"./AudioParamForm\"\nimport { DataRow, DataKey, DataNote, H2 } from \"../elems/styled\"\n\n/** Processed AudioParamSetting for display on coordinate system */\ntype CoordParam = {\n  time: number\n  value: number\n  //TODO: add curve data\n}\n\ntype Props = {\n  params: AudioParamSetting[]\n  showCoord?: boolean\n}\n\nexport default ({ params, showCoord }: Props) => {\n  const [maxTime, setMaxTime] = useState(0)\n  const [minValue, setMinValue] = useState(0)\n  const [maxValue, setMaxValue] = useState(0)\n  const [coordParams, setCoordParams] = useState<CoordParam[]>([])\n\n  useEffect(() => {\n    if (!showCoord) return\n\n    const values = params.map(param => param.values).flat(2)\n    setMinValue(Math.min(...values))\n    setMaxValue(Math.max(...values))\n\n    const cps: CoordParam[] = []\n\n    setMaxTime(\n      params.reduce((total, param) => {\n        let time = total\n        let value\n        switch (param.call) {\n          case \"setValueAtTime\":\n          case \"linearRampToValueAtTime\":\n          case \"exponentialRampToValueAtTime\":\n            value = param.values[0] as number\n            time += param.values[1] as number\n            break\n          case \"setTargetAtTime\":\n            value = param.values[0] as number\n            time += param.values[2] as number\n            break\n          case \"setValueCurveAtTime\":\n            value = Math.max(...(param.values[0] as number[]))\n            time += param.values[2] as number\n            break\n        }\n\n        cps.push({ time, value })\n\n        return time\n      }, 0)\n    )\n\n    setCoordParams(cps)\n  }, [params, showCoord])\n\n  if (params.length === 0) {\n    return <Fragment />\n  }\n\n  return (\n    <Fragment>\n      <H2>Adjusted Params</H2>\n\n      {showCoord && maxTime > 0 && (\n        <div>\n          <svg\n            viewBox={`0 0 ${maxTime} ${minValue + maxValue}`}\n            css={{ width: \"100%\", height: 50, boxShadow: \"inset 0 0 25px red\" }}\n          >\n            {coordParams.map(cp => (\n              <circle\n                key={JSON.stringify(cp)}\n                cx={cp.time}\n                cy={cp.value}\n                r={(minValue + maxValue) / 10}\n                fill=\"#11151c\"\n              />\n            ))}\n          </svg>\n          <div css={{ fontSize: \"0.8rem\", color: \"#D66853\", marginTop: -18 }}>\n            maxTime: {maxTime}, minValue: {minValue}, maxValue: {maxValue}\n          </div>\n        </div>\n      )}\n\n      {params.map((param, index) => (\n        <DataRow key={JSON.stringify(param) + index.toString()}>\n          <div>\n            <DataKey>{param.name}:</DataKey> {param.values.join(\", \")}\n          </div>\n          <DataNote>{param.call}</DataNote>\n        </DataRow>\n      ))}\n    </Fragment>\n  )\n}\n","/** @jsx jsx */\nimport { jsx } from \"@emotion/core\"\nimport { Fragment, ChangeEvent } from \"react\"\nimport { AudioParams } from \"../../../hooks/useAudioNodeDefs\"\n\nconst audioParamCalls = [\n  \"setValueAtTime\",\n  \"linearRampToValueAtTime\",\n  \"exponentialRampToValueAtTime\",\n  \"setTargetAtTime\",\n  \"setValueCurveAtTime\",\n] as const\n\ntype Call = typeof audioParamCalls[number]\ntype CallParams = (number | number[])[]\n\nexport type AudioParamSetting = {\n  name: string\n  call: Call\n  /** `call` values in order */\n  values: CallParams\n}\n\nexport type AudioParamUpdate = {\n  name?: string\n  call?: Call\n  /** `call` values in order */\n  values?: CallParams\n}\n\ntype Props = {\n  audioParams: AudioParams\n  name: string\n  call: Call\n  values: CallParams\n  onChange: (param: AudioParamUpdate) => void\n}\n\nexport default ({ audioParams, name, call, values, onChange }: Props) => {\n  const setNumber = (event: ChangeEvent<HTMLInputElement>) => {\n    const nth = +event.currentTarget.getAttribute(\"data-nth\")!\n    const val = event.currentTarget.valueAsNumber\n    if (!Number.isNaN(val)) {\n      const currValues = [...values]\n      currValues[nth] = val\n      onChange({ values: currValues })\n    }\n  }\n\n  const setNumbers = (event: ChangeEvent<HTMLInputElement>) => {\n    const nth = +event.currentTarget.getAttribute(\"data-nth\")!\n    const val = event.currentTarget.value.split(\",\").map(value => +value)\n    const currValues = [...values]\n    currValues[nth] = val\n    onChange({ values: currValues })\n  }\n\n  const getNumber = (nth: number) => values[nth] as number\n  const getNumbers = (nth: number) => {\n    if (Array.isArray(values[nth])) {\n      return (values[nth] as number[]).join(\",\")\n    }\n    return values[nth].toString()\n  }\n\n  return (\n    <Fragment>\n      <td>\n        <select value={name} onChange={event => onChange({ name: event.currentTarget.value })}>\n          {Object.keys(audioParams).map(key => (\n            <option key={key} value={key}>\n              {key}\n            </option>\n          ))}\n        </select>\n      </td>\n      <td>\n        <select\n          value={call}\n          onChange={event => onChange({ call: event.currentTarget.value as Call })}\n        >\n          {audioParamCalls.map(call => (\n            <option key={call} value={call}>\n              {call}\n            </option>\n          ))}\n        </select>\n      </td>\n\n      {[\"setValueAtTime\", \"linearRampToValueAtTime\", \"exponentialRampToValueAtTime\"].includes(\n        call\n      ) && (\n        <Fragment>\n          <td>\n            <input\n              type=\"number\"\n              value={getNumber(0)}\n              step={0.1}\n              data-nth={0}\n              onChange={setNumber}\n            />\n          </td>\n          <td>\n            <input\n              type=\"number\"\n              value={getNumber(1)}\n              step={0.1}\n              min={0}\n              data-nth={1}\n              onChange={setNumber}\n            />\n          </td>\n        </Fragment>\n      )}\n\n      {[\"setTargetAtTime\"].includes(call) && (\n        <Fragment>\n          <td>\n            <input type=\"number\" value={getNumber(0)} data-nth={0} onChange={setNumber} />\n          </td>\n          <td>\n            <label></label>\n            <input\n              type=\"number\"\n              value={getNumber(1)}\n              data-nth={1}\n              onChange={setNumber}\n              title=\"startTime (t+)\"\n            />\n            <input\n              type=\"number\"\n              value={getNumber(2)}\n              data-nth={2}\n              onChange={setNumber}\n              title=\"timeConstant\"\n            />\n          </td>\n        </Fragment>\n      )}\n\n      {[\"setValueCurveAtTime\"].includes(call) && (\n        <Fragment>\n          <td>\n            <input\n              type=\"text\"\n              value={getNumbers(0)}\n              data-nth={0}\n              onChange={setNumbers}\n              title=\"values (comma separated)\"\n            />\n          </td>\n          <td>\n            <input\n              type=\"number\"\n              value={getNumber(1)}\n              data-nth={1}\n              onChange={setNumber}\n              title=\"startTime (t+)\"\n            />\n            <input\n              type=\"number\"\n              value={getNumber(2)}\n              data-nth={2}\n              onChange={setNumber}\n              title=\"duration\"\n            />\n          </td>\n        </Fragment>\n      )}\n    </Fragment>\n  )\n}\n","/** @jsx jsx */\nimport { jsx } from \"@emotion/core\"\nimport { Fragment } from \"react\"\nimport AudioParamForm, { AudioParamSetting, AudioParamUpdate } from \"./AudioParamForm\"\nimport { AudioParams } from \"../../../hooks/useAudioNodeDefs\"\nimport { IconButton } from \"../../../styled\"\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\"\n\ntype Props = {\n  audioParams: AudioParams\n  params: AudioParamSetting[]\n  setParams: (params: AudioParamSetting[]) => void\n}\n\nexport default ({ audioParams, params, setParams }: Props) => {\n  const paramChange = (index: number, newParam: AudioParamUpdate) => {\n    const currParams = [...params]\n    if (newParam.call !== undefined) {\n      const dcalls = [\"setValueAtTime\", \"linearRampToValueAtTime\", \"exponentialRampToValueAtTime\"]\n      if (dcalls.includes(newParam.call)) {\n        if (!dcalls.includes(currParams[index].call)) {\n          newParam.values = [0, 0]\n        }\n      }\n      if ([\"setTargetAtTime\"].includes(newParam.call)) {\n        newParam.values = [0, 0, 0]\n      }\n      if ([\"setValueCurveAtTime\"].includes(newParam.call)) {\n        newParam.values = [[0], 0, 0]\n      }\n    }\n    currParams[index] = { ...currParams[index], ...newParam }\n    setParams(currParams)\n  }\n\n  const delParam = (index: number) => {\n    const currParams = [...params]\n    currParams.splice(index, 1)\n    setParams(currParams)\n  }\n\n  return (\n    <Fragment>\n      <table>\n        <thead>\n          <tr>\n            <th>\n              <FontAwesomeIcon icon={[\"fad\", \"piano-keyboard\"]} title=\"Param Name\" />\n            </th>\n            <th>\n              <FontAwesomeIcon icon={[\"fad\", \"waveform-path\"]} title=\"Call Type\" />\n            </th>\n            <th>\n              <FontAwesomeIcon icon={[\"fad\", \"sliders-h\"]} title=\"Value\" />\n            </th>\n            <th>\n              <FontAwesomeIcon icon={[\"fad\", \"hourglass-start\"]} title=\"Start (time+)\" />\n            </th>\n            <th></th>\n          </tr>\n        </thead>\n        <tbody>\n          {params.map((param, index) => (\n            <tr key={param.name + param.call + index}>\n              <AudioParamForm\n                audioParams={audioParams}\n                {...param}\n                onChange={newParam => paramChange(index, newParam)}\n              />\n              <td>\n                <IconButton onClick={() => delParam(index)}>\n                  <FontAwesomeIcon icon={[\"fad\", \"trash\"]} />\n                </IconButton>\n              </td>\n            </tr>\n          ))}\n        </tbody>\n      </table>\n    </Fragment>\n  )\n}\n","/** @jsx jsx */\nimport { jsx } from \"@emotion/core\"\nimport { useSelector, useDispatch } from \"react-redux\"\nimport { NodeComponentProps } from \"react-flow-renderer\"\nimport { useMemo, useEffect, Fragment, ChangeEvent } from \"react\"\nimport { FormWrapper, H1, H2, NodeBody, DataRow, DataKey, Hr } from \"../elems/styled\"\nimport useAudioNodeDefs from \"../../../hooks/useAudioNodeDefs\"\nimport { selectEditMode } from \"../../../features/ux/uxSlice\"\nimport {\n  setBiquadFilter,\n  delBiquadFilter,\n  selectBiquadFilter,\n  BiquadFilter,\n} from \"../../../features/activeSound/activeSoundSlice\"\nimport AudioParamDefaults from \"../elems/AudioParamDefaults\"\nimport { AudioParamSetting } from \"../elems/AudioParamForm\"\nimport AudioParamsView from \"../elems/AudioParamsView\"\nimport HandleOutputs from \"../elems/HandleOutputs\"\nimport HandleInputs from \"../elems/HandleInputs\"\nimport AudioParams from \"../elems/AudioParams\"\n\nconst types: BiquadFilterType[] = [\n  \"allpass\",\n  \"bandpass\",\n  \"highpass\",\n  \"highshelf\",\n  \"lowpass\",\n  \"lowshelf\",\n  \"notch\",\n  \"peaking\",\n]\n\nexport default ({ id }: NodeComponentProps) => {\n  const basic: BiquadFilter = useMemo(\n    () => ({\n      id,\n      connectIds: [],\n      type: \"lowpass\",\n      params: [],\n    }),\n    [id]\n  )\n  const editMode = useSelector(selectEditMode)\n  const defs = useAudioNodeDefs(\"BiquadFilterNode\")\n  const dispatch = useDispatch()\n  const biquadFilter: BiquadFilter = useSelector(selectBiquadFilter)(id) || basic\n\n  useEffect(() => {\n    dispatch(setBiquadFilter(biquadFilter))\n    return () => void dispatch(delBiquadFilter(id))\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [])\n\n  const changeType = (event: ChangeEvent<HTMLInputElement>) => {\n    dispatch(\n      setBiquadFilter({ ...biquadFilter, type: event.currentTarget.value as BiquadFilterType })\n    )\n  }\n\n  const setParams = (params: AudioParamSetting[]) => {\n    dispatch(setBiquadFilter({ ...biquadFilter, params }))\n  }\n\n  const addParam = (name?: string, defaultValue = 1) => {\n    const params = [...biquadFilter.params]\n    params.push({\n      name: name || Object.keys(defs.audioParams)[0],\n      call: \"setValueAtTime\",\n      values: [defaultValue, 0],\n    })\n    setParams(params)\n  }\n\n  return (\n    <Fragment>\n      <HandleInputs numberOfInputs={defs.numberOfInputs} />\n      <H1>Biquad Filter #{id}</H1>\n\n      <NodeBody>\n        {editMode ? (\n          <Fragment>\n            <AudioParamDefaults audioParams={defs.audioParams} addParam={addParam} />\n            <H2>Type</H2>\n            <FormWrapper>\n              <div css={{ columnCount: 2, fontWeight: 300, textTransform: \"capitalize\" }}>\n                {types.map(typeVal => (\n                  <label key={typeVal} css={{ display: \"block\" }}>\n                    <input\n                      type=\"radio\"\n                      defaultValue={typeVal}\n                      checked={biquadFilter.type === typeVal}\n                      onChange={changeType}\n                    />\n                    {typeVal}\n                  </label>\n                ))}\n              </div>\n              {biquadFilter.params.length > 0 && (\n                <Fragment>\n                  <Hr />\n                  <AudioParams\n                    audioParams={defs.audioParams}\n                    params={biquadFilter.params}\n                    setParams={setParams}\n                  />\n                </Fragment>\n              )}\n            </FormWrapper>\n          </Fragment>\n        ) : (\n          <div>\n            <DataRow css={{ textTransform: \"capitalize\" }}>\n              <DataKey>Type:</DataKey> {biquadFilter.type}\n            </DataRow>\n            <AudioParamsView params={biquadFilter.params} />\n          </div>\n        )}\n      </NodeBody>\n      <HandleOutputs numberOfOutputs={defs.numberOfOutputs} />\n    </Fragment>\n  )\n}\n","/* eslint-disable react-hooks/exhaustive-deps */\n/** @jsx jsx */\nimport { jsx } from \"@emotion/core\"\nimport { useMemo, useEffect, Fragment, ChangeEvent } from \"react\"\nimport { useSelector, useDispatch } from \"react-redux\"\nimport { NodeComponentProps } from \"react-flow-renderer\"\nimport { H1, FormWrapper, Hr, NodeBody, H2, DataRow, DataKey } from \"../elems/styled\"\nimport useAudioNodeDefs from \"../../../hooks/useAudioNodeDefs\"\nimport { selectEditMode } from \"../../../features/ux/uxSlice\"\nimport AudioParamDefaults from \"../elems/AudioParamDefaults\"\nimport { AudioParamSetting } from \"../elems/AudioParamForm\"\nimport {\n  setOscillator,\n  delOscillator,\n  selectOscillator,\n  Oscillator,\n} from \"../../../features/activeSound/activeSoundSlice\"\nimport AudioParamsView from \"../elems/AudioParamsView\"\nimport HandleOutputs from \"../elems/HandleOutputs\"\nimport HandleInputs from \"../elems/HandleInputs\"\nimport AudioParams from \"../elems/AudioParams\"\n\nconst types: OscillatorType[] = [\"sine\", \"square\", \"sawtooth\", \"triangle\"]\n\nexport default ({ id }: NodeComponentProps) => {\n  const basic: Oscillator = useMemo(\n    () => ({\n      id,\n      connectIds: [],\n      type: types[0],\n      params: [],\n    }),\n    [id]\n  )\n  const editMode = useSelector(selectEditMode)\n  const defs = useAudioNodeDefs(\"OscillatorNode\")\n  const dispatch = useDispatch()\n  const oscillator: Oscillator = useSelector(selectOscillator)(id) || basic\n\n  useEffect(() => {\n    dispatch(setOscillator(oscillator))\n    return () => void dispatch(delOscillator(id))\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [])\n\n  const changeType = (event: ChangeEvent<HTMLInputElement>) => {\n    dispatch(setOscillator({ ...oscillator, type: event.currentTarget.value as OscillatorType }))\n  }\n\n  const setParams = (params: AudioParamSetting[]) => {\n    dispatch(setOscillator({ ...oscillator, params }))\n  }\n\n  const addParam = (name?: string, defaultValue = 1) => {\n    const params = [...oscillator.params]\n    params.push({\n      name: name || Object.keys(defs.audioParams)[0],\n      call: \"setValueAtTime\",\n      values: [defaultValue, 0],\n    })\n    setParams(params)\n  }\n\n  return (\n    <Fragment>\n      {defs.numberOfInputs > 0 && <HandleInputs numberOfInputs={defs.numberOfInputs} />}\n      <H1>Oscillator #{id}</H1>\n\n      <NodeBody>\n        {editMode ? (\n          <Fragment>\n            <AudioParamDefaults audioParams={defs.audioParams} addParam={addParam} />\n            <H2>Type</H2>\n            <FormWrapper css={{ marginTop: 4 }}>\n              <div css={{ columnCount: 2, fontWeight: 300 }}>\n                {types.map(typeVal => (\n                  <label key={typeVal} css={{ display: \"block\" }}>\n                    <input\n                      type=\"radio\"\n                      defaultValue={typeVal}\n                      checked={oscillator.type === typeVal}\n                      onChange={changeType}\n                    />\n                    {typeVal}\n                  </label>\n                ))}\n              </div>\n              {oscillator.params.length > 0 && (\n                <Fragment>\n                  <Hr />\n                  <AudioParams\n                    audioParams={defs.audioParams}\n                    params={oscillator.params}\n                    setParams={setParams}\n                  />\n                </Fragment>\n              )}\n            </FormWrapper>\n          </Fragment>\n        ) : (\n          <div>\n            <DataRow css={{ textTransform: \"capitalize\" }}>\n              <DataKey>Type:</DataKey> {oscillator.type}\n            </DataRow>\n            <AudioParamsView params={oscillator.params} />\n          </div>\n        )}\n      </NodeBody>\n\n      <HandleOutputs numberOfOutputs={defs.numberOfOutputs} />\n    </Fragment>\n  )\n}\n","/** @jsx jsx */\nimport { useSelector, useDispatch } from \"react-redux\"\nimport { selectEditMode, toggleEditMode } from \"../../features/ux/uxSlice\"\nimport { GraphButtons, GraphButton } from \"./styled\"\nimport { Fragment } from \"react\"\nimport { jsx } from \"@emotion/core\"\nimport { audioNodeTypes } from \"./AudioGraph\"\n\ntype Props = {\n  addAudioNode: (type: keyof typeof audioNodeTypes) => () => void\n  delSelected: () => void\n}\n\nexport default ({ addAudioNode, delSelected }: Props) => {\n  const dispatch = useDispatch()\n  const editMode = useSelector(selectEditMode)\n\n  return (\n    <GraphButtons>\n      <GraphButton\n        mode=\"mode\"\n        onClick={() => dispatch(toggleEditMode())}\n        icon={[\"fas\", editMode ? \"edit\" : \"project-diagram\"]}\n      >\n        {editMode ? (\n          <Fragment>\n            To View <u>m</u>ode\n          </Fragment>\n        ) : (\n          <Fragment>\n            To Edit <u>m</u>ode\n          </Fragment>\n        )}\n      </GraphButton>\n      <GraphButton onClick={addAudioNode(\"oscillator\")} icon={[\"fad\", \"wave-sine\"]}>\n        Add Oscillator\n      </GraphButton>\n      <GraphButton onClick={addAudioNode(\"gain\")} icon={[\"fad\", \"volume\"]}>\n        Add Gain\n      </GraphButton>\n      <GraphButton onClick={addAudioNode(\"biquadfilter\")} icon={[\"fad\", \"filter\"]}>\n        Add Biquad Filter\n      </GraphButton>\n      <GraphButton onClick={addAudioNode(\"analyser\")} icon={[\"fad\", \"analytics\"]}>\n        Add Analyser\n      </GraphButton>\n      <GraphButton mode=\"del\" onClick={delSelected} icon={[\"fad\", \"trash-alt\"]}>\n        Remove Selected\n      </GraphButton>\n    </GraphButtons>\n  )\n}\n","/* eslint-disable react-hooks/exhaustive-deps */\n/** @jsx jsx */\nimport ReactFlow, {\n  Edge,\n  Node,\n  isEdge,\n  addEdge,\n  Elements,\n  Controls,\n  Connection,\n  Background,\n  useStoreState,\n  removeElements,\n  BackgroundVariant,\n} from \"react-flow-renderer\"\nimport { jsx, Global } from \"@emotion/core\"\nimport { useSelector, useDispatch } from \"react-redux\"\nimport { useState, useRef, useEffect, Fragment } from \"react\"\nimport { addConnect, delConnect } from \"../../features/activeSound/activeSoundSlice\"\nimport {\n  selectEditMode,\n  selectLoadElements,\n  selectDelSelected,\n  toggleDelSelected,\n  setLoadElements,\n} from \"../../features/ux/uxSlice\"\nimport { globalGraph, globalGraphEditMode, globalGraphDraggableMode } from \"./styled\"\nimport { AUDIO_CONTEXT_DESTINATION } from \"../../scripts/audio\"\nimport { getNextId, checkSize } from \"../../scripts/helpers\"\nimport { newNodePosition } from \"../../scripts/utils\"\nimport BiquadFilter from \"./nodes/BiquadFilter\"\nimport Oscillator from \"./nodes/Oscillator\"\nimport Analyser from \"./nodes/Analyser\"\nimport GraphMenu from \"./GraphMenu\"\nimport Gain from \"./nodes/Gain\"\n\nexport const audioNodeTypes = {\n  biquadfilter: BiquadFilter,\n  oscillator: Oscillator,\n  analyser: Analyser,\n  gain: Gain,\n}\n\nconst defaultNode: Node = {\n  id: AUDIO_CONTEXT_DESTINATION,\n  data: { label: \"Audio Output\" },\n  type: \"output\",\n  connectable: true,\n  selectable: false,\n  position: { x: 0, y: 0 },\n  className: \"audioNode output\",\n}\n\nexport default () => {\n  const dispatch = useDispatch()\n  const loadElements = useSelector(selectLoadElements)\n  const editMode = useSelector(selectEditMode)\n  const isDelSelected = useSelector(selectDelSelected)\n  const width = useStoreState(store => store.width, checkSize)\n  const height = useStoreState(store => store.height, checkSize)\n  const [elements, setElements] = useState<Elements>([])\n  const selected = useRef<Elements | null>(null)\n  const nextId = useRef<number>(1)\n\n  const onConnect = (connection: Edge | Connection) => {\n    if (connection.source !== null && connection.target !== null) {\n      setElements(els => addEdge(connection, els))\n      dispatch(addConnect({ source: connection.source, target: connection.target }))\n    }\n  }\n\n  useEffect(() => {\n    if (loadElements) {\n      setElements(loadElements)\n      nextId.current = getNextId(loadElements)\n      dispatch(setLoadElements(null))\n    }\n  }, [loadElements, dispatch])\n\n  useEffect(() => {\n    if (width > 0 && height > 0 && elements.length === 0) {\n      defaultNode.position = { x: width / 2, y: height / 2 }\n      setElements([defaultNode])\n    }\n  }, [width, height, elements])\n\n  useEffect(() => {\n    if (isDelSelected) {\n      delSelected()\n      dispatch(toggleDelSelected())\n    }\n  }, [isDelSelected])\n\n  const delSelected = () => {\n    if (selected.current !== null) {\n      setElements(removeElements(selected.current, elements))\n      selected.current\n        .filter(el => isEdge(el))\n        .forEach(\n          el =>\n            void dispatch(delConnect({ source: (el as Edge).source, target: (el as Edge).target }))\n        )\n      selected.current = null\n    }\n  }\n\n  const addAudioNode = (type: keyof typeof audioNodeTypes) => () =>\n    setElements([\n      ...elements,\n      {\n        id: (nextId.current++).toString(),\n        type,\n        className: \"audioNode\",\n        position: newNodePosition(width, height),\n      },\n    ])\n\n  return (\n    <Fragment>\n      <Global styles={globalGraph} />\n      {editMode ? (\n        <Global styles={globalGraphEditMode} />\n      ) : (\n        <Global styles={globalGraphDraggableMode} />\n      )}\n      <ReactFlow\n        elements={elements}\n        onConnect={onConnect}\n        nodeTypes={audioNodeTypes}\n        nodesDraggable={!editMode}\n        onSelectionChange={els => (selected.current = els)}\n        snapGrid={[16, 16]}\n        snapToGrid={true}\n        onlyRenderVisibleNodes={false}\n        connectionLineStyle={{ stroke: \"#71474e\" }}\n      >\n        <Controls showInteractive={false} />\n        <Background\n          variant={editMode ? BackgroundVariant.Dots : BackgroundVariant.Lines}\n          color=\"#364156\"\n          gap={32}\n          size={1}\n        />\n        <GraphMenu addAudioNode={addAudioNode} delSelected={delSelected} />\n      </ReactFlow>\n    </Fragment>\n  )\n}\n","/** @jsx jsx */\nimport { jsx } from \"@emotion/core\"\nimport { useMemo, useEffect, Fragment } from \"react\"\nimport { useSelector, useDispatch } from \"react-redux\"\nimport { NodeComponentProps } from \"react-flow-renderer\"\nimport { setGain, delGain, selectGain, Gain } from \"../../../features/activeSound/activeSoundSlice\"\nimport useAudioNodeDefs from \"../../../hooks/useAudioNodeDefs\"\nimport { selectEditMode } from \"../../../features/ux/uxSlice\"\nimport AudioParamDefaults from \"../elems/AudioParamDefaults\"\nimport { AudioParamSetting } from \"../elems/AudioParamForm\"\nimport { H1, FormWrapper, NodeBody, Hr } from \"../elems/styled\"\nimport AudioParamsView from \"../elems/AudioParamsView\"\nimport HandleOutputs from \"../elems/HandleOutputs\"\nimport HandleInputs from \"../elems/HandleInputs\"\nimport AudioParams from \"../elems/AudioParams\"\n\nexport default ({ id }: NodeComponentProps) => {\n  const basic: Gain = useMemo(\n    () => ({\n      id,\n      connectIds: [],\n      params: [],\n    }),\n    [id]\n  )\n  const editMode = useSelector(selectEditMode)\n  const defs = useAudioNodeDefs(\"GainNode\")\n  const dispatch = useDispatch()\n  const gain: Gain = useSelector(selectGain)(id) || basic\n\n  useEffect(() => {\n    dispatch(setGain(gain))\n    return () => void dispatch(delGain(id))\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [])\n\n  const setParams = (params: AudioParamSetting[]) => {\n    dispatch(setGain({ ...gain, params }))\n  }\n\n  const addParam = (name?: string, defaultValue = 1) => {\n    const params = [...gain.params]\n    params.push({\n      name: name || Object.keys(defs.audioParams)[0],\n      call: \"setValueAtTime\",\n      values: [defaultValue, 0],\n    })\n    setParams(params)\n  }\n\n  return (\n    <Fragment>\n      <HandleInputs numberOfInputs={defs.numberOfInputs} />\n      <H1>Gain #{id}</H1>\n\n      <NodeBody>\n        {(editMode || gain.params.length === 0) && (\n          <AudioParamDefaults\n            audioParams={defs.audioParams}\n            addParam={addParam}\n            hideButton={!editMode}\n          />\n        )}\n\n        <AudioParamsView params={gain.params} showCoord={true} />\n\n        {editMode && (\n          <Fragment>\n            {gain.params.length > 0 && (\n              <FormWrapper>\n                <Hr />\n                <AudioParams\n                  audioParams={defs.audioParams}\n                  params={gain.params}\n                  setParams={setParams}\n                />\n              </FormWrapper>\n            )}\n          </Fragment>\n        )}\n      </NodeBody>\n\n      <HandleOutputs numberOfOutputs={defs.numberOfOutputs} />\n    </Fragment>\n  )\n}\n","/* eslint-disable jsx-a11y/accessible-emoji */\n/** @jsx jsx */\nimport { jsx } from \"@emotion/core\"\nimport { toast } from \"react-toastify\"\nimport { useDispatch } from \"react-redux\"\nimport { toggleMenu, toggleSideLeft } from \"../../features/ux/uxSlice\"\nimport { validateSound } from \"../../scripts/helpers\"\nimport { MenuPopup } from \"../../styled\"\n\nexport default () => {\n  const dispatch = useDispatch()\n\n  const loadDefaultSounds = async (name: string) => {\n    try {\n      const res = await fetch(`${window.location.pathname}/samples/${name}.json`)\n      if (res.ok) {\n        const sample = await res.json()\n        if (validateSound(sample)) {\n          localStorage.setItem(name, JSON.stringify(sample))\n          toast.success(`${name} Loaded`)\n        }\n      }\n    } catch (e) {\n      toast.error(`${name} failed to load. ${e}`)\n    }\n  }\n\n  return (\n    <MenuPopup className=\"menu\" onMouseLeave={() => dispatch(toggleMenu())}>\n      <h2>MENU</h2>\n      <ul>\n        <li>\n          Refresh often because something is not right yet. Load samples below with the buttons and\n          select from the dropdown to have a look. Crash and Refresh. =] (This version only deployed\n          for testing purposes.)\n        </li>\n        <li>\n          Open poorly managed{\" \"}\n          <a href=\"https://github.com/SubZtep/synth/wiki\" target=\"_blank\" rel=\"noopener noreferrer\">\n            Wiki page\n          </a>\n          .\n        </li>\n        <li>\n          Preload <button onClick={() => loadDefaultSounds(\"Kick\")}>Kick</button> and{\" \"}\n          <button onClick={() => loadDefaultSounds(\"HiHat\")}>HiHat 🐛</button> sounds to its name in\n          local storage.\n        </li>\n        <li>\n          <button onClick={() => dispatch(toggleSideLeft())}>Switch</button> sidebar position\n          between left and right.\n        </li>\n      </ul>\n    </MenuPopup>\n  )\n}\n","/** @jsx jsx */\nimport { jsx } from \"@emotion/core\"\nimport { Fragment, useRef } from \"react\"\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\"\nimport { selectMenu, toggleMenu } from \"../../features/ux/uxSlice\"\nimport { useSelector, useDispatch } from \"react-redux\"\nimport Menu from \"./Menu\"\n\nconst MenuOpener = () => {\n  const menu = useSelector(selectMenu)\n  const dispatch = useDispatch()\n  const timer = useRef<NodeJS.Timeout | null>(null)\n\n  return (\n    <Fragment>\n      <FontAwesomeIcon\n        className=\"menuOpener\"\n        fixedWidth\n        icon={[\"fad\", \"bars\"]}\n        size=\"2x\"\n        onMouseEnter={() => {\n          if (timer.current === null) {\n            timer.current = setTimeout(() => {\n              dispatch(toggleMenu())\n              timer.current = null\n            }, 500)\n          }\n        }}\n        onMouseLeave={() => {\n          if (timer.current !== null) {\n            clearTimeout(timer.current)\n            timer.current = null\n          }\n        }}\n      />\n      {menu && <Menu />}\n    </Fragment>\n  )\n}\n\nexport default MenuOpener\n","/** @jsx jsx */\n/* eslint-disable react-hooks/exhaustive-deps */\nimport { jsx } from \"@emotion/core\"\nimport { toast } from \"react-toastify\"\nimport { useRef, useEffect } from \"react\"\nimport { useSelector } from \"react-redux\"\nimport { audioNodes } from \"../../scripts/audio\"\nimport { selectAnalysers } from \"../../features/activeSound/activeSoundSlice\"\nimport { dpiFix } from \"../../scripts/utils\"\n\nexport default () => {\n  const analysers = useSelector(selectAnalysers)\n  const canvas = useRef<HTMLCanvasElement>(null)\n  const ctx = useRef<CanvasRenderingContext2D>()\n  const width = useRef(0)\n  const height = useRef(0)\n  const halfHeight = useRef(0)\n  const timer = useRef<NodeJS.Timeout | null>(null)\n\n  useEffect(() => {\n    ctx.current = canvas.current!.getContext(\"2d\") as CanvasRenderingContext2D\n    //TODO: `dpiFix()` uneffective with css width and height, remove them\n    const dimensions = dpiFix(canvas.current!)\n    width.current = dimensions.width\n    height.current = dimensions.height\n    halfHeight.current = height.current / 2\n\n    return () => {\n      if (timer.current !== null) {\n        clearTimeout(timer.current)\n      }\n    }\n  }, [])\n\n  const draw = () => {\n    timer.current = null\n    ctx.current!.clearRect(0, 0, width.current, height.current)\n    analysers.forEach(analyser => {\n      const node = audioNodes.get(analyser.id) as AnalyserNode\n      if (node) {\n        ctx.current!.lineWidth = analyser.lineWidth\n        try {\n          drawWave(node, analyser.color)\n        } catch (e) {\n          toast.error(e.message)\n        }\n      }\n    })\n\n    requestAnimationFrame(draw)\n    // timer.current = setTimeout(draw, 100)\n  }\n\n  useEffect(() => {\n    if (timer.current !== null) {\n      clearTimeout(timer.current)\n    }\n    if (analysers.length > 0) {\n      console.time(\"draw\")\n      draw()\n      console.timeEnd(\"draw\")\n    } else {\n      ctx.current!.clearRect(0, 0, width.current, height.current)\n    }\n  }, [analysers])\n\n  const drawWave = (analyser: AnalyserNode, color: string) => {\n    ctx.current!.strokeStyle = color\n    const bufferLength = analyser.frequencyBinCount\n    const data = new Float32Array(bufferLength)\n    analyser.getFloatTimeDomainData(data)\n    let sliceWidth = width.current / bufferLength\n    let x = 0\n    let y\n    let i\n    ctx.current!.beginPath()\n    ctx.current!.moveTo(0, halfHeight.current)\n    for (i = 0; i < bufferLength; i++) {\n      y = halfHeight.current + data[i] * halfHeight.current\n      ctx.current!.lineTo(x, y)\n      x += sliceWidth\n    }\n    ctx.current!.lineTo(width.current, halfHeight.current)\n    ctx.current!.stroke()\n  }\n\n  return (\n    <div css={{ height: 120, boxShadow: \"inset 0 0 25px #101319\" }}>\n      <canvas ref={canvas} css={{ width: \"100%\", height: \"100%\" }} />\n    </div>\n  )\n}\n","/* eslint-disable react-hooks/exhaustive-deps */\n/** @jsx jsx */\nimport { jsx } from \"@emotion/core\"\nimport { toast } from \"react-toastify\"\nimport { useEffect, useRef } from \"react\"\nimport { useSelector, useDispatch } from \"react-redux\"\nimport { selectReloadAudio, toggleReloadAudio } from \"../../features/ux/uxSlice\"\nimport * as snd from \"../../features/activeSound/activeSoundSlice\"\nimport {\n  restartAudioContext,\n  audioNodes,\n  AUDIO_CONTEXT_DESTINATION,\n  applyParams,\n  audioContext,\n  destroyAudioNodes,\n} from \"../../scripts/audio\"\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\"\nimport { WidgetRows } from \"../../styled\"\n\ntype AudioSource = {\n  sourceId: string\n  audioNode?: AudioScheduledSourceNode\n  targetAudioNode: AudioNode\n}\n\nexport default () => {\n  const dispatch = useDispatch()\n  const reloadAudio = useSelector(selectReloadAudio)\n  const playFrequency = useSelector(snd.selectPlayFrequency)\n  const biquadFilter = useSelector(snd.selectBiquadFilter)\n  const oscillator = useSelector(snd.selectOscillator)\n  const analyser = useSelector(snd.selectAnalyser)\n  const gain = useSelector(snd.selectGain)\n  const biquadFilters = useSelector(snd.selectBiquadFilters)\n  const oscillators = useSelector(snd.selectOscillators)\n  const analysers = useSelector(snd.selectAnalysers)\n  const gains = useSelector(snd.selectGains)\n  const playDelay = useRef(0.1)\n  const restarting = useRef(false)\n  const latency = useRef(0)\n\n  const play = (frequency: number) => {\n    const t = audioContext.currentTime + playDelay.current\n    let audioNode\n    let produced\n\n    gains.forEach(node => {\n      audioNode = audioNodes.get(node.id)\n      if (audioNode === undefined) throw new Error(\"No Gain (for apply params)\")\n      produced = gain(node.id) as snd.Gain\n      if (produced === undefined) throw new Error(\"No produced Gain (for apply params)\")\n      applyParams(audioNode, produced.params, t)\n    })\n\n    biquadFilters.forEach(node => {\n      audioNode = audioNodes.get(node.id)\n      if (audioNode === undefined) throw new Error(\"No BiquadFilter (for apply params)\")\n      produced = biquadFilter(node.id) as snd.BiquadFilter\n      if (produced === undefined) throw new Error(\"No produced BiquadFilter (for apply params)\")\n      applyParams(audioNode, produced.params, t)\n    })\n\n    oscillators.forEach(node => {\n      const produced = oscillator(node.id) as snd.Oscillator\n      if (produced === undefined) throw new Error(\"No Oscillator (play error!)\")\n      const audioNode = audioContext.createOscillator() as OscillatorNode\n      audioNode.type = produced.type\n      audioNode.frequency.setValueAtTime(frequency, 0)\n      applyParams(audioNode, produced.params, t)\n      node.connectIds.forEach(\n        toId =>\n          void audioNode.connect(\n            toId === AUDIO_CONTEXT_DESTINATION ? audioContext.destination : audioNodes.get(toId)!\n          )\n      )\n      audioNodes.set(node.id, audioNode)\n      audioNode.start(t)\n    })\n  }\n\n  const stop = () => {\n    oscillators.forEach(node => {\n      const audioNode = audioNodes.get(node.id) as AudioScheduledSourceNode\n      if (audioNode === undefined) {\n        toast.error(`${node.id} source node is missing for stop`)\n        return\n      }\n      audioNode.stop()\n      audioNode.disconnect()\n      audioNodes.delete(node.id)\n    })\n  }\n\n  useEffect(() => {\n    if (playFrequency !== null) {\n      console.time(\"play\")\n      const t = Date.now()\n      try {\n        play(playFrequency)\n      } catch (e) {\n        toast.error(e.message)\n      }\n      console.timeEnd(\"play\")\n      latency.current = Date.now() - t\n\n      return () => stop()\n    }\n  }, [playFrequency])\n\n  const reloadAudioNodes = async () => {\n    toast.info(\"Restart Audio Context\")\n    destroyAudioNodes()\n    await restartAudioContext()\n    let produced\n    let audioNode\n\n    // Create AudioNodes\n    gains.forEach(node => {\n      produced = gain(node.id) as snd.Gain\n      if (produced === undefined) throw new Error(\"No Gain (waiting for audio graph)\")\n      audioNode = audioContext.createGain()\n      audioNodes.set(node.id, audioNode)\n    })\n    analysers.forEach(node => {\n      produced = analyser(node.id) as snd.Analyser\n      if (produced === undefined) throw new Error(\"No Analyser (waiting for audio graph)\")\n      audioNode = audioContext.createAnalyser()\n      audioNode.fftSize = produced.fftSize\n      audioNodes.set(node.id, audioNode)\n    })\n    biquadFilters.forEach(node => {\n      produced = biquadFilter(node.id) as snd.BiquadFilter\n      if (produced === undefined) throw new Error(\"No BiquadFilter (waiting for audio graph)\")\n      audioNode = audioContext.createBiquadFilter()\n      audioNode.type = produced.type\n      audioNodes.set(node.id, audioNode)\n    })\n\n    // Connect AudioNodes\n    ;[...gains, ...analysers, ...biquadFilters].forEach(({ id, connectIds }) => {\n      connectIds.forEach(toId => {\n        const fromNode = audioNodes.get(id)\n        if (!fromNode) {\n          toast.error(`${id} audio node not found for from connect`)\n          return\n        }\n        const toNode =\n          toId === AUDIO_CONTEXT_DESTINATION ? audioContext.destination : audioNodes.get(toId)\n        if (!toNode) {\n          toast.error(`${toId} audio node not found for to connect`)\n          return\n        }\n        fromNode.connect(\n          toId === AUDIO_CONTEXT_DESTINATION ? audioContext.destination : audioNodes.get(toId)!\n        )\n      })\n    })\n  }\n\n  useEffect(() => {\n    if (reloadAudio) {\n      dispatch(toggleReloadAudio())\n      if (!restarting.current) {\n        restarting.current = true\n        ;(async () => {\n          try {\n            await reloadAudioNodes()\n            restarting.current = false\n          } catch (e) {\n            toast.error(e.message)\n          }\n        })()\n      }\n    }\n  }, [reloadAudio])\n\n  return (\n    <WidgetRows>\n      <button onClick={() => reloadAudioNodes()} css={{ position: \"relative\" }}>\n        <FontAwesomeIcon\n          fixedWidth\n          icon={[\"fad\", \"sync\"]}\n          size=\"lg\"\n          css={{ position: \"absolute\", top: 4, right: 6 }}\n        />\n        Force Reload Audio Context\n      </button>\n      <button onClick={() => toast.clearWaitingQueue()} css={{ position: \"relative\" }}>\n        <FontAwesomeIcon\n          fixedWidth\n          icon={[\"fad\", \"comment-alt-slash\"]}\n          size=\"lg\"\n          css={{ position: \"absolute\", top: 4, right: 6 }}\n        />\n        Clear Notification Queue\n      </button>\n\n      <div css={{ display: \"flex\" }}>\n        <div css={{ width: \"50%\" }}>\n          <label htmlFor=\"playDelayInput\">Play delay:</label>{\" \"}\n          <input\n            id=\"playDelayInput\"\n            type=\"number\"\n            min={0}\n            max={1}\n            step={0.01}\n            defaultValue={playDelay.current}\n            onChange={event => {\n              playDelay.current = event.currentTarget.valueAsNumber\n            }}\n          />\n        </div>\n        <div css={{ width: \"50%\" }}>\n          Setup time: <strong>{latency.current}ms</strong>.\n        </div>\n      </div>\n\n      <div css={{ fontSize: \"0.58rem\", color: \"limegreen\", textDecoration: \"underline\" }}>\n        Save works but kill the app, probably for the good coz memory leak suspected!\n      </div>\n    </WidgetRows>\n  )\n}\n","import styled from \"@emotion/styled\"\nimport React, { useRef } from \"react\"\nimport { useDispatch } from \"react-redux\"\nimport { setPlayFrequency } from \"../../features/activeSound/activeSoundSlice\"\n\nconst PianoWrapper = styled.div`\n  display: flex;\n  align-items: center;\n  font-size: 3rem;\n  justify-content: center;\n  user-select: none;\n  padding-bottom: 0.5rem;\n\n  > div {\n    flex: 1;\n    position: relative;\n    height: 150px;\n    margin: 0 1px;\n    border: 1px solid #999;\n    border-radius: 1px 1px 5px 5px;\n    box-shadow: 2px 2px 5px #0006;\n    cursor: pointer;\n    background-color: #aaa;\n    &:hover {\n      background-color: #999;\n    }\n    &:active {\n      background-color: #888;\n    }\n    &::after {\n      position: absolute;\n      bottom: 0.3rem;\n      width: 100%;\n      text-align: center;\n      content: attr(data-note);\n      font: 500 1.6rem Candara;\n      color: #121212;\n    }\n  }\n\n  > div > div {\n    position: absolute;\n    top: -1px;\n    left: 70%;\n    height: 105px;\n    width: calc(60% + 2px);\n    border-radius: 1px 1px 5px 5px;\n    box-shadow: 2px 2px 5px #0006;\n    cursor: pointer;\n    z-index: 10;\n    background-color: #000;\n    &:hover {\n      background-color: #111;\n    }\n    &:active {\n      background-color: #222;\n    }\n  }\n`\n\nconst Piano = () => {\n  const dispatch = useDispatch()\n  const lastFrequency = useRef<number | null>(null)\n\n  const play = (event: React.MouseEvent<HTMLDivElement, MouseEvent>) => {\n    if (event.buttons === 1) {\n      const data = (event.target as HTMLElement).getAttribute(\"data-frequency\")\n      const frequency = data !== null ? +data : null\n      if (lastFrequency.current !== frequency) {\n        dispatch(setPlayFrequency(data !== null ? +data : null))\n        lastFrequency.current = frequency\n      }\n    }\n  }\n\n  const stop = () => {\n    if (lastFrequency.current !== null) {\n      dispatch(setPlayFrequency(null))\n      lastFrequency.current = null\n    }\n  }\n\n  return (\n    <PianoWrapper onMouseDown={play} onMouseMove={play} onMouseUp={stop} onMouseOut={stop}>\n      <div data-frequency=\"261.626\" data-note=\"C\">\n        <div data-frequency=\"277.18\" data-note=\"C#\"></div>\n      </div>\n      <div data-frequency=\"293.665\" data-note=\"D\">\n        <div data-frequency=\"311.127\"></div>\n      </div>\n      <div data-frequency=\"329.628\" data-note=\"E\"></div>\n      <div data-frequency=\"349.228\" data-note=\"F\">\n        <div data-frequency=\"369.994\"></div>\n      </div>\n      <div data-frequency=\"391.995\" data-note=\"G\">\n        <div data-frequency=\"415.305\"></div>\n      </div>\n      <div data-frequency=\"440.000\" data-note=\"A\">\n        <div data-frequency=\"466.164\"></div>\n      </div>\n      <div data-frequency=\"493.883\" data-note=\"B\"></div>\n      <div data-frequency=\"523.251\" data-note=\"C\">\n        <div data-frequency=\"554.365\"></div>\n      </div>\n      <div data-frequency=\"587.330\" data-note=\"D\">\n        <div data-frequency=\"622.254\"></div>\n      </div>\n      <div data-frequency=\"659.255\" data-note=\"E\"></div>\n      <div data-frequency=\"698.457\" data-note=\"F\">\n        <div data-frequency=\"739.989\"></div>\n      </div>\n      <div data-frequency=\"783.991\" data-note=\"G\">\n        <div data-frequency=\"830.609\"></div>\n      </div>\n      <div data-frequency=\"880.000\" data-note=\"A\">\n        <div data-frequency=\"932.328\"></div>\n      </div>\n      <div data-frequency=\"987.767\" data-note=\"B\"></div>\n      <div data-frequency=\"1046.50\" data-note=\"C\"></div>\n    </PianoWrapper>\n  )\n}\n\nexport default Piano\n","/** @jsx jsx */\nimport { jsx, css } from \"@emotion/core\"\n\nexport default () => {\n  return (\n    <div\n      className=\"brand\"\n      css={css`\n        text-align: center;\n        font-family: Tomorrow;\n        padding: 2px;\n        opacity: 0.25;\n        transition: 100ms;\n        &:hover {\n          opacity: 1;\n          transition: 3s;\n          transition-timing-function: steps(6, end);\n        }\n      `}\n    >\n      <h1 css={{ fontSize: \"2rem\", margin: 0, color: \"#f2f4f7\" }}>\n        WAA\n        <span\n          css={{\n            fontFamily: \"Roboto\",\n            fontSize: \"2.6rem\",\n            fontWeight: 600,\n            position: \"relative\",\n            lineHeight: 0,\n          }}\n        >\n          π\n        </span>\n        Synth\n        <span css={{ marginLeft: 4, fontSize: \"0.8rem\", color: \"#d9dbde\" }}>\n          v{process.env.REACT_APP_VERSION}\n        </span>\n      </h1>\n    </div>\n  )\n}\n","/** @jsx jsx */\nimport { jsx } from \"@emotion/core\"\nimport { toast } from \"react-toastify\"\nimport { useDispatch } from \"react-redux\"\nimport { useRef, useEffect, useState, ChangeEvent } from \"react\"\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\"\nimport { setLoadElements } from \"../../features/ux/uxSlice\"\nimport {\n  setName,\n  setGains,\n  setAnalysers,\n  setOscillators,\n  setBiquadFilters,\n} from \"../../features/activeSound/activeSoundSlice\"\nimport { validateSound } from \"../../scripts/helpers\"\nimport { IconButton } from \"../../styled\"\n\nconst retreiveNames = () =>\n  Object.keys(localStorage).filter(name => {\n    let obj\n    try {\n      obj = JSON.parse(localStorage[name])\n    } catch {\n      return false\n    }\n    return validateSound(obj)\n  })\n\nexport default () => {\n  const dispatch = useDispatch()\n  const [names, setNames] = useState<string[]>([])\n  const select = useRef<HTMLSelectElement>(null)\n\n  useEffect(() => {\n    setNames(retreiveNames())\n  }, [])\n\n  const load = (event: ChangeEvent<HTMLSelectElement>) => {\n    const name = event.currentTarget.value\n    select.current!.value = \"\"\n    const data = localStorage.getItem(name)\n    if (data) {\n      const obj = JSON.parse(data)\n      if (validateSound(obj)) {\n        dispatch(setAnalysers(obj.analysers))\n        dispatch(setGains(obj.gains))\n        dispatch(setBiquadFilters(obj.biquadFilters))\n        dispatch(setOscillators(obj.oscillators))\n        dispatch(setLoadElements(obj.elements))\n        dispatch(setName(name))\n        toast.success(`Sound \"${name}\" loaded`)\n        return\n      }\n    }\n    toast.error(`Error loading \"${name}\" sound`)\n  }\n\n  return (\n    <div>\n      {/* @ts-ignore */}\n      <select as=\"select\" ref={select} onChange={load}>\n        <option value=\"\">--- Please, Select ---</option>\n        {names.map(name => (\n          <option key={name} value={name}>\n            {name}\n          </option>\n        ))}\n      </select>\n      <IconButton onClick={() => setNames(retreiveNames())}>\n        <FontAwesomeIcon icon={[\"fad\", \"folder-open\"]} fixedWidth size=\"lg\" />\n      </IconButton>\n    </div>\n  )\n}\n","/** @jsx jsx */\nimport { jsx } from \"@emotion/core\"\nimport { toast } from \"react-toastify\"\nimport { useSelector, useDispatch } from \"react-redux\"\nimport { useStoreState, Elements } from \"react-flow-renderer\"\nimport { useRef, useEffect } from \"react\"\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\"\nimport { setName, selectName, selectAudioNodes } from \"../../features/activeSound/activeSoundSlice\"\nimport { IconButton } from \"../../styled\"\n\nexport default () => {\n  const dispatch = useDispatch()\n  const name = useSelector(selectName)\n  const input = useRef<HTMLInputElement>(null)\n  const audioNodes = useSelector(selectAudioNodes)\n  const elements = useStoreState(store => store.elements)\n\n  useEffect(() => {\n    input.current!.value = name\n  }, [name])\n\n  const save = () => {\n    //FIXME: after succesful save it kills the app\n    const elems = elements.map((element: any) => {\n      if (element.__rf !== undefined) {\n        if (element.__rf.position !== undefined) {\n          element.position = element.__rf.position\n        }\n        delete element.__rf\n      }\n      return element\n    }) as Elements\n\n    try {\n      localStorage.setItem(name, JSON.stringify({ elements: elems, ...audioNodes }))\n      toast.success(`Sound \"${name}\" saved`)\n    } catch (e) {\n      toast.error(e.message)\n    }\n  }\n\n  return (\n    <div>\n      <input\n        ref={input}\n        type=\"text\"\n        defaultValue={name}\n        onChange={event => dispatch(setName(event.target.value))}\n        onFocus={event => event.target.select()}\n      />\n      <IconButton onClick={save}>\n        <FontAwesomeIcon icon={[\"fad\", \"save\"]} fixedWidth size=\"lg\" />\n      </IconButton>\n    </div>\n  )\n}\n","/** @jsx jsx */\nimport { jsx } from \"@emotion/core\"\nimport { HotKeys } from \"react-hotkeys\"\nimport { useDispatch, useSelector } from \"react-redux\"\nimport { ToastContainer, toast, Slide } from \"react-toastify\"\nimport { ReactFlowProvider } from \"react-flow-renderer\"\nimport { toggleEditMode, toggleDelSelected, selectSideLeft } from \"./features/ux/uxSlice\"\nimport AudioGraph from \"./components/graph/AudioGraph\"\nimport MenuOpener from \"./components/side/MenuOpener\"\nimport Analysers2D from \"./components/side/Analysers2D\"\nimport { Main, SideBar, WidgetRows } from \"./styled\"\nimport Audio from \"./components/side/Audio\"\nimport Piano from \"./components/side/Piano\"\nimport Brand from \"./components/side/Brand\"\nimport Load from \"./components/side/Load\"\nimport Save from \"./components/side/Save\"\n\nconst keyMap = {\n  TOGGLE_EDIT_MODE: \"m\",\n  DEL_SELECTED: \"del\",\n}\n\nexport default function App() {\n  const dispatch = useDispatch()\n  const sideLeft = useSelector(selectSideLeft)\n  const handlers = {\n    TOGGLE_EDIT_MODE: (event?: KeyboardEvent) => dispatch(toggleEditMode()),\n    DEL_SELECTED: (event?: KeyboardEvent) => dispatch(toggleDelSelected()),\n  }\n\n  return (\n    <ReactFlowProvider>\n      <HotKeys keyMap={keyMap} handlers={handlers}>\n        <Main className={sideLeft ? \"rev\" : \"\"}>\n          <AudioGraph />\n          <SideBar>\n            <Brand />\n            <MenuOpener />\n            <WidgetRows>\n              <Load />\n              <Save />\n            </WidgetRows>\n            <Audio />\n            <Analysers2D />\n            <Piano />\n          </SideBar>\n        </Main>\n        <ToastContainer\n          position={sideLeft ? toast.POSITION.BOTTOM_LEFT : toast.POSITION.BOTTOM_RIGHT}\n          transition={Slide}\n          limit={2}\n          autoClose={2200}\n        />\n      </HotKeys>\n    </ReactFlowProvider>\n  )\n}\n","import ReactDOM from \"react-dom\"\nimport { Provider } from \"react-redux\"\nimport React, { Fragment } from \"react\"\nimport { Global } from \"@emotion/core\"\n// import * as serviceWorker from \"./serviceWorker\"\nimport { fal } from \"@fortawesome/pro-light-svg-icons\"\nimport { fas } from \"@fortawesome/pro-solid-svg-icons\"\nimport { fab } from \"@fortawesome/free-brands-svg-icons\"\nimport { fad } from \"@fortawesome/pro-duotone-svg-icons\"\nimport { far } from \"@fortawesome/pro-regular-svg-icons\"\nimport { library } from \"@fortawesome/fontawesome-svg-core\"\nimport \"react-toastify/dist/ReactToastify.css\"\nimport { globalStyles } from \"./styled\"\nimport store from \"./store\"\nimport App from \"./App\"\n\n//TODO: collect icons and check sizes https://fontawesome.com/how-to-use/on-the-web/using-with/react#using\nlibrary.add(fab, fad, fal, far, fas)\n\nReactDOM.render(\n  // <React.StrictMode>\n  <Fragment>\n    <Global styles={globalStyles} />\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </Fragment>,\n  // </React.StrictMode>,\n  document.getElementById(\"root\")\n)\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n// serviceWorker.unregister()\n"],"sourceRoot":""}