{"version":3,"sources":["styled.tsx","components/graph/elems/styled.tsx","hooks/useAudioNodeDefs.ts","features/ux/uxSlice.ts","components/graph/elems/HandleOutputs.tsx","components/graph/elems/HandleInputs.tsx","components/graph/nodes/Analyser.tsx","features/activeSound/activeSoundSlice.ts","features/sounds/soundsSlice.ts","store.ts","components/graph/styled.tsx","scripts/audio.ts","scripts/helpers.ts","scripts/utils.ts","components/graph/elems/AudioParamDefaults.tsx","components/graph/elems/AudioParamsView.tsx","components/graph/elems/AudioParamForm.tsx","components/graph/elems/AudioParams.tsx","components/graph/nodes/BiquadFilter.tsx","components/graph/nodes/Oscillator.tsx","components/graph/GraphMenu.tsx","components/graph/AudioGraph.tsx","components/graph/nodes/Gain.tsx","components/side/Menu.tsx","components/side/MenuOpener.tsx","components/side/Analysers2D.tsx","components/side/Audio.tsx","components/side/Piano.tsx","components/side/Brand.tsx","components/side/Load.tsx","components/side/Save.tsx","App.tsx","index.tsx"],"names":["globalStyles","css","Main","styled","div","SideBar","MenuPopup","WidgetRows","IconButton","button","NodeBody","FormWrapper","H1","H2","Hr","hr","DataRow","DataKey","span","DataNote","type","useState","numberOfInputs","numberOfOutputs","frequency","automationRate","minValue","maxValue","defaultValue","detune","Q","gain","audioParams","uxSlice","createSlice","name","initialState","menu","editMode","loadElements","delSelected","sideLeft","reducers","toggleMenu","state","toggleEditMode","toggleDelSelected","togglesideLeft","setLoadElements","payload","selectMenu","ux","selectEditMode","selectDelSelected","selectSideLeft","selectLoadElements","actions","memo","Array","fill","map","_value","index","key","position","Position","Bottom","style","left","Top","fftSizes","activeSoundSlice","playFrequency","analysers","gains","biquadFilters","oscillators","setName","setPlayFrequency","addConnect","flat","find","el","id","source","connectIds","push","target","delConnect","node","undefined","filter","setAnalysers","setAnalyser","findIndex","delAnalyser","setGains","setGain","delGain","setBiquadFilters","setBiquadFilter","delBiquadFilter","setOscillators","setOscillator","delOscillator","selectName","activeSound","selectPlayFrequency","selectAudioNodes","selectAnalyser","selectAnalysers","selectGain","selectGains","selectBiquadFilter","selectBiquadFilters","selectOscillator","selectOscillators","soundsSlice","addSound","action","description","store","configureStore","reducer","sounds","middleware","getDefaultMiddleware","globalGraph","globalGraphEditMode","globalGraphDraggableMode","GraphButtonBase","GraphButtons","GraphButtonMode","GraphButtonDel","GraphButton","icon","onClick","mode","children","className","fixedWidth","size","AudioContext","window","webkitAudioContext","audioContext","audioNodes","Map","restartAudioContext","a","close","clear","applyParams","params","time","currentTime","forEach","param","values","includes","call","checkSize","prev","next","validateSound","obj","Object","keys","some","randomBetween","min","max","Math","random","newNodePosition","canvasWidth","canvasHeight","bottom","halfHeight","x","y","formatNumber","num","parts","toString","split","replace","join","addParam","hideButton","entries","Number","MIN_SAFE_INTEGER","MAX_SAFE_INTEGER","JSON","stringify","audioParamCalls","nth","onChange","setNumber","event","currentTarget","getAttribute","val","valueAsNumber","isNaN","currValues","getNumber","value","step","data-nth","title","isArray","setParams","AudioParamForm","newParam","currParams","paramChange","splice","delParam","types","addAudioNode","dispatch","useDispatch","useSelector","audioNodeTypes","biquadfilter","basic","useMemo","defs","useAudioNodeDefs","biquadFilter","useEffect","changeType","HandleInputs","AudioParamDefaults","columnCount","fontWeight","textTransform","typeVal","display","checked","length","AudioParams","AudioParamsView","HandleOutputs","oscillator","marginTop","analyser","fftSize","color","lineWidth","htmlFor","flexGrow","fft","height","backgroundColor","width","defaultNode","data","label","connectable","selectable","isDelSelected","useStoreState","elements","setElements","selected","useRef","nextId","current","elems","isNode","sort","b","getNextId","removeElements","isEdge","styles","onConnect","connection","els","addEdge","nodeTypes","nodesDraggable","onSelectionChange","snapGrid","snapToGrid","onlyRenderVisibleNodes","connectionLineStyle","stroke","showInteractive","variant","BackgroundVariant","Dots","Lines","gap","GraphMenu","loadDefaultSounds","fetch","location","pathname","res","ok","json","sample","localStorage","setItem","toast","success","error","onMouseLeave","href","rel","MenuOpener","timer","onMouseEnter","setTimeout","clearTimeout","Menu","canvas","ctx","getContext","dimensions","getComputedStyle","getPropertyValue","slice","dpi","devicePixelRatio","setAttribute","dpiFix","draw","clearRect","get","drawWave","e","message","strokeStyle","bufferLength","frequencyBinCount","Float32Array","getFloatTimeDomainData","sliceWidth","beginPath","moveTo","i","lineTo","boxShadow","ref","snd","playDelay","restarting","latency","console","t","Date","now","audioNode","produced","Error","createOscillator","setValueAtTime","toId","connect","destination","set","start","play","timeEnd","stop","disconnect","delete","reloadAudio","info","createGain","createAnalyser","createBiquadFilter","fromNode","top","right","PianoWrapper","Piano","lastFrequency","buttons","onMouseDown","onMouseMove","onMouseUp","onMouseOut","data-frequency","data-note","fontSize","margin","fontFamily","lineHeight","marginLeft","process","retreiveNames","parse","names","setNames","select","as","getItem","log","input","onFocus","element","__rf","keyMap","TOGGLE_EDIT_MODE","DEL_SELECTED","App","handlers","AudioGraph","Brand","Load","Save","Audio","Analysers2D","POSITION","TOP_RIGHT","TOP_LEFT","autoClose","library","add","fab","fad","fal","far","fas","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.5547f102.chunk.js","sourcesContent":["import { css } from \"@emotion/core\"\nimport styled from \"@emotion/styled\"\n\nexport const globalStyles = css`\n  :root {\n    --graph-bg: #212d40;\n    --graph-bg-lines: #364156;\n    --side-bg: #11151c;\n    --side-default-width: 350px;\n    --widget-bg: #364156;\n    --input-border: #7d4e57;\n    --input-border-focus: #d66853;\n    --button-bg: #4f5f7d;\n    --node-bg: #11151c;\n    --node-selected-border: #d66853;\n  }\n\n  @import url(\"https://fonts.googleapis.com/css2?family=Roboto:wght@100;300;400&family=Tomorrow:wght@400;500&display=swap\");\n  * {\n    box-sizing: border-box;\n  }\n  html,\n  body {\n    padding: 0;\n    margin: 0;\n    width: 100vw;\n    height: 100vh;\n    font-family: Roboto, sans-serif;\n    font-style: normal;\n    font-weight: 400;\n    font-size: 16px;\n    overflow: hidden;\n  }\n`\n\nexport const Main = styled.div`\n  margin: 0;\n  padding: 0;\n  width: 100vw;\n  height: 100vh;\n  display: flex;\n\n  &.rev {\n    flex-direction: row-reverse;\n\n    > div:last-of-type {\n      border-left-width: 0;\n      border-right-width: 2px;\n    }\n\n    .menuOpener {\n      left: 6px;\n      right: auto;\n    }\n\n    .menu {\n      border-bottom-left-radius: 0;\n      border-bottom-right-radius: 0;\n      right: auto;\n      left: 0;\n    }\n  }\n`\n\nexport const SideBar = styled.div`\n  flex-grow: 1;\n  background-color: var(--side-bg);\n  color: #fff;\n  border: 0 solid #000;\n  border-left-width: 2px;\n\n  .menuOpener {\n    position: fixed;\n    top: 6px;\n    right: 6px;\n    &:hover {\n      transform: rotate(90deg);\n      transition: 500ms;\n    }\n  }\n\n  > *:not(.brand):not(.menuOpener):not(.menu) {\n    border-top: 2px solid #000;\n    background-color: var(--widget-bg);\n    color: #fff;\n\n    input,\n    select,\n    button {\n      font-size: 0.95rem;\n      flex-grow: 1;\n      border-radius: 3px;\n      background-color: transparent;\n      border: 1px solid var(--input-border);\n      font-family: Roboto;\n      padding: 6px;\n      color: #fff;\n      &:focus {\n        border-color: var(--input-border-focus);\n        border-width: 2px;\n        padding: 5px;\n      }\n    }\n\n    select option {\n      background-color: var(--widget-bg);\n    }\n\n    button {\n      width: 100%;\n      background-color: var(--button-bg);\n      border-width: 2px;\n      border-style: outset;\n      cursor: pointer;\n      &:focus {\n        padding: 6px;\n      }\n    }\n  }\n`\n\nexport const MenuPopup = styled.div`\n  top: 0;\n  right: 0;\n  width: 280px;\n  position: fixed;\n  z-index: 200;\n  background-color: #000;\n  padding: 25px;\n  border-bottom-left-radius: 4px;\n  box-shadow: 5px 5px 15px 5px #000000;\n\n  a {\n    color: #66f;\n  }\n\n  h2 {\n    text-align: center;\n  }\n\n  ul {\n    line-height: 28px;\n    font-size: 1.1rem;\n    padding-left: 25px;\n  }\n`\n\nexport const WidgetRows = styled.div`\n  padding: 8px 6px;\n  display: flex;\n  flex-direction: column;\n  gap: 6px;\n\n  > div {\n    align-items: center;\n    display: flex;\n    gap: 8px;\n  }\n`\n\nexport const IconButton = styled.button`\n  background-color: transparent !important;\n  width: auto !important;\n  flex-shrink: 1 !important;\n  flex-grow: 0 !important;\n  border-width: 1px !important;\n\n  svg {\n    transition: 50ms;\n    &:hover {\n      transition: 50ms;\n      transform: scale(1.25);\n    }\n  }\n`\n","import styled from \"@emotion/styled\"\n\nexport const NodeBody = styled.div`\n  padding: 4px 6px;\n  border-radius: 3px 3px 2px 2px;\n  background-color: #364156;\n  // font-weight: 300;\n\n  input,\n  select,\n  button {\n    font-size: 0.95rem;\n    flex-grow: 1;\n    border-radius: 3px;\n    background-color: transparent;\n    border: 1px solid var(--input-border);\n    font-family: Roboto;\n    padding: 6px;\n    color: #fff;\n    &:focus {\n      border-color: var(--input-border-focus);\n      border-width: 2px;\n      padding: 5px;\n    }\n  }\n\n  select option {\n    background-color: var(--widget-bg);\n  }\n\n  button {\n    width: 100%;\n    background-color: var(--button-bg);\n    border-width: 2px;\n    border-style: outset;\n    cursor: pointer;\n    &:focus {\n      padding: 6px;\n    }\n  }\n`\n\nexport const FormWrapper = styled.div`\n  table {\n    select, input {\n      padding: 2px;\n      width: 60px;\n      &:focus {\n        padding: 1px;\n      }\n    }\n  }\n}\n`\n\nexport const FormWrapperGrid = styled(FormWrapper)`\n  display: grid;\n  gap: 2px;\n  grid-template-columns: 0.8fr 1fr;\n  align-items: center;\n}\n`\n\nexport const H1 = styled.div`\n  font-family: Tomorrow, sans-serif;\n  font-style: normal;\n  font-weight: 400;\n  text-align: center;\n  font-size: 1.2rem;\n  margin: 2px 0 5px;\n`\n\nexport const H2 = styled.div`\n  font-family: Tomorrow, sans-serif;\n  font-style: normal;\n  font-weight: 500;\n  font-size: 1.1rem;\n  margin: 12px 0;\n  &:first-of-type {\n    margin-top: 0;\n  }\n`\n\nexport const Hr = styled.hr`\n  margin: 15px 0 10px 0;\n  border: 0;\n  border-bottom: 1px dashed var(--node-bg);\n`\n\nexport const DelButton = styled.button`\n  border: 0;\n  background: transparent;\n  color: #f33;\n  font-size: 0.7rem;\n  padding: 0;\n`\n\nexport const DataRow = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  gap: 6px;\n  font-size: 0.95rem;\n  line-height: 1.35rem;\n`\n\nexport const DataKey = styled.span`\n  font-weight: 100;\n`\n\nexport const DataNote = styled.div`\n  font-size: 0.8rem;\n  color: #999;\n  word-spacing: -1px;\n\n  button {\n    margin-left: 6px;\n  }\n`\n","import { useState } from \"react\"\n\nexport type AudioParams = {\n  [key: string]: {\n    automationRate: \"a-rate\"\n    minValue: number\n    maxValue: number\n    defaultValue: number\n  }\n}\n\nexport default (type: \"AnalyserNode\" | \"BiquadFilterNode\" | \"GainNode\" | \"OscillatorNode\") => {\n  const [numberOfInputs] = useState(type === \"OscillatorNode\" ? 0 : 1)\n  const [numberOfOutputs] = useState(1)\n  const [audioParams] = useState<AudioParams>(\n    (): AudioParams => {\n      switch (type) {\n        case \"BiquadFilterNode\":\n          return {\n            frequency: {\n              automationRate: \"a-rate\",\n              minValue: 10,\n              /** half of the sample rate */\n              maxValue: 24000,\n              defaultValue: 350,\n            },\n            detune: {\n              automationRate: \"a-rate\",\n              defaultValue: 0,\n              minValue: -153600,\n              maxValue: 153600,\n            },\n            Q: {\n              automationRate: \"a-rate\",\n              defaultValue: 1,\n              minValue: 0.0001,\n              maxValue: 1000,\n            },\n            gain: {\n              automationRate: \"a-rate\",\n              /** dB value */\n              defaultValue: 0,\n              minValue: -40,\n              maxValue: 40,\n            },\n          }\n        case \"GainNode\":\n          return {\n            gain: {\n              automationRate: \"a-rate\",\n              minValue: 0,\n              /** half of the sample rate */\n              maxValue: 1,\n              defaultValue: 1,\n            },\n          }\n        case \"OscillatorNode\":\n          return {\n            frequency: {\n              automationRate: \"a-rate\",\n              minValue: -24000,\n              maxValue: 24000,\n              defaultValue: 440,\n            },\n            detune: {\n              automationRate: \"a-rate\",\n              defaultValue: 0,\n              minValue: -153600,\n              maxValue: 153600,\n            },\n          }\n      }\n      return {}\n    }\n  )\n\n  return {\n    numberOfInputs,\n    numberOfOutputs,\n    audioParams,\n  }\n}\n","import { createSlice, PayloadAction } from \"@reduxjs/toolkit\"\nimport { Elements } from \"react-flow-renderer\"\nimport { RootState } from \"../../store\"\n\ntype UX = {\n  menu: boolean\n  editMode: boolean\n  /**\n   * Load _**React-Flow** Elements_ from local storage,\n   * `const setElements = useStoreActions(actions => actions.setElements)`\n   * in Load component somehow doesn't work.\n   */\n  loadElements: Elements | null\n  /** Set to true to del selected in AudioGraph component */\n  delSelected: boolean\n  /** Sidebar on the left */\n  sideLeft: boolean\n}\n\nconst initialState: UX = {\n  menu: false,\n  editMode: true,\n  loadElements: null,\n  delSelected: false,\n  sideLeft: false,\n}\n\nconst uxSlice = createSlice({\n  name: \"ux\",\n  initialState,\n  reducers: {\n    toggleMenu: state => {\n      state.menu = !state.menu\n    },\n    toggleEditMode: state => {\n      state.editMode = !state.editMode\n    },\n    toggleDelSelected: state => {\n      state.delSelected = !state.delSelected\n    },\n    togglesideLeft: state => {\n      state.sideLeft = !state.sideLeft\n    },\n    setLoadElements: (state: UX, { payload }: PayloadAction<Elements | null>) => {\n      state.loadElements = payload\n    },\n  },\n})\n\nexport const selectMenu = ({ ux }: RootState) => ux.menu\nexport const selectEditMode = ({ ux }: RootState) => ux.editMode\nexport const selectDelSelected = ({ ux }: RootState) => ux.delSelected\nexport const selectSideLeft = ({ ux }: RootState) => ux.sideLeft\nexport const selectLoadElements = ({ ux }: RootState) => ux.loadElements\nexport const {\n  toggleMenu,\n  toggleEditMode,\n  toggleDelSelected,\n  togglesideLeft,\n  setLoadElements,\n} = uxSlice.actions\nexport default uxSlice.reducer\n","import React, { memo, Fragment } from \"react\"\nimport { Handle, Position } from \"react-flow-renderer\"\n\ntype Props = {\n  numberOfOutputs: number\n}\n\nexport default memo(({ numberOfOutputs }: Props) => (\n  <Fragment>\n    {new Array(numberOfOutputs).fill(0).map((_value, index) => (\n      <Handle\n        key={`output${index}`}\n        type=\"source\"\n        position={Position.Bottom}\n        style={{ left: `${(100 / (numberOfOutputs + 1)) * (index + 1)}%` }}\n      />\n    ))}\n  </Fragment>\n))\n","import React, { Fragment, memo } from \"react\"\nimport { Handle, Position } from \"react-flow-renderer\"\n\ntype Props = {\n  numberOfInputs: number\n}\n\nexport default memo(({ numberOfInputs }: Props) => (\n  <Fragment>\n    {new Array(numberOfInputs).fill(0).map((_value, index) => (\n      <Handle\n        key={`input${index}`}\n        type=\"target\"\n        position={Position.Top}\n        style={{ left: `${(100 / (numberOfInputs + 1)) * (index + 1)}%` }}\n      />\n    ))}\n  </Fragment>\n))\n","/** @jsx jsx */\nimport { jsx } from \"@emotion/core\"\nimport { useDispatch, useSelector } from \"react-redux\"\nimport { NodeComponentProps } from \"react-flow-renderer\"\nimport { useMemo, useEffect, Fragment, ChangeEvent } from \"react\"\nimport { H1, DataRow, DataKey, NodeBody } from \"../elems/styled\"\nimport useAudioNodeDefs from \"../../../hooks/useAudioNodeDefs\"\nimport { selectEditMode } from \"../../../features/ux/uxSlice\"\nimport {\n  setAnalyser,\n  delAnalyser,\n  selectAnalyser,\n  Analyser,\n} from \"../../../features/activeSound/activeSoundSlice\"\nimport HandleOutputs from \"../elems/HandleOutputs\"\nimport HandleInputs from \"../elems/HandleInputs\"\nimport { WidgetRows } from \"../../../styled\"\n\nconst fftSizes = [32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768] as const\nexport type FFTSize = typeof fftSizes[number]\n\nexport default ({ id }: NodeComponentProps) => {\n  const basic: Analyser = useMemo(\n    () => ({\n      id,\n      connectIds: [],\n      fftSize: fftSizes[6],\n      color: \"#d66853\",\n      lineWidth: 2,\n    }),\n    [id]\n  )\n  const editMode = useSelector(selectEditMode)\n  const defs = useAudioNodeDefs(\"AnalyserNode\")\n  const dispatch = useDispatch()\n  const analyser: Analyser = useSelector(selectAnalyser)(id) || basic\n\n  useEffect(() => {\n    dispatch(setAnalyser(analyser))\n    return () => void dispatch(delAnalyser(id))\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [])\n\n  const setFFTSize = (event: ChangeEvent<HTMLSelectElement>) => {\n    dispatch(setAnalyser({ ...analyser, fftSize: +event.currentTarget.value as FFTSize }))\n  }\n\n  const setColor = (event: ChangeEvent<HTMLInputElement>) => {\n    dispatch(setAnalyser({ ...analyser, color: event.currentTarget.value }))\n  }\n\n  const setLineWidth = (event: ChangeEvent<HTMLInputElement>) => {\n    dispatch(setAnalyser({ ...analyser, lineWidth: event.currentTarget.valueAsNumber }))\n  }\n\n  return (\n    <Fragment>\n      <HandleInputs numberOfInputs={defs.numberOfInputs} />\n      <H1>Analyser #{id}</H1>\n\n      <NodeBody>\n        {editMode ? (\n          <WidgetRows>\n            <div>\n              <label htmlFor={`a1${id}`} css={{ flexGrow: 1 }}>\n                FFT Size\n              </label>\n              <select id={`a1${id}`} value={analyser.fftSize} onChange={setFFTSize}>\n                {fftSizes.map(fft => (\n                  <option key={fft} value={fft}>\n                    {fft}\n                  </option>\n                ))}\n              </select>\n            </div>\n            <div>\n              <label htmlFor={`a2{id}`} css={{ flexGrow: 1 }}>\n                Colour\n              </label>\n              <input id={`a2${id}`} type=\"color\" value={analyser.color} onChange={setColor} />\n            </div>\n            <div>\n              <label htmlFor={`a3${id}`} css={{ flexGrow: 1 }}>\n                Line Width\n              </label>\n              <input\n                id={`a3${id}`}\n                type=\"range\"\n                min={1}\n                max={50}\n                value={analyser.lineWidth}\n                onChange={setLineWidth}\n              />\n            </div>\n          </WidgetRows>\n        ) : (\n          <Fragment>\n            <DataRow>\n              <DataKey>FFT Size:</DataKey> {analyser.fftSize}\n            </DataRow>\n            <DataRow>\n              <DataKey>Line:</DataKey>\n              <div\n                css={{ height: analyser.lineWidth, backgroundColor: analyser.color, width: \"100%\" }}\n              ></div>\n            </DataRow>\n          </Fragment>\n        )}\n      </NodeBody>\n\n      <HandleOutputs numberOfOutputs={defs.numberOfOutputs} />\n    </Fragment>\n  )\n}\n","import { createSlice, PayloadAction } from \"@reduxjs/toolkit\"\nimport { AudioParamSetting } from \"../../components/graph/elems/AudioParamForm\"\nimport Analyser, { FFTSize } from \"../../components/graph/nodes/Analyser\"\nimport { RootState } from \"../../store\"\n\ntype Connect = {\n  source: string\n  target: string\n}\n\nexport type Analyser = {\n  id: string\n  connectIds: string[]\n  fftSize: FFTSize\n  color: string\n  lineWidth: number\n}\n\nexport type Gain = {\n  id: string\n  connectIds: string[]\n  params: AudioParamSetting[]\n}\n\nexport type BiquadFilter = {\n  id: string\n  connectIds: string[]\n  type: BiquadFilterType\n  params: AudioParamSetting[]\n}\n\nexport type Oscillator = {\n  id: string\n  connectIds: string[]\n  type: OscillatorType\n  params: AudioParamSetting[]\n}\n\ntype ActiveSound = {\n  name: string\n  playFrequency: number | null\n  analysers: Analyser[]\n  gains: Gain[]\n  biquadFilters: BiquadFilter[]\n  oscillators: Oscillator[]\n}\n\nconst initialState: ActiveSound = {\n  name: \"No Name\",\n  playFrequency: null,\n  analysers: [],\n  gains: [],\n  biquadFilters: [],\n  oscillators: [],\n}\n\nconst activeSoundSlice = createSlice({\n  name: \"activeSound\",\n  initialState,\n  reducers: {\n    setName: (state: ActiveSound, { payload }: PayloadAction<string>) => {\n      state.name = payload\n    },\n    setPlayFrequency: (state: ActiveSound, { payload }: PayloadAction<number | null>) => {\n      state.playFrequency = payload\n    },\n    addConnect: (state: ActiveSound, { payload }: PayloadAction<Connect>) => {\n      ;[state.analysers, state.gains, state.biquadFilters, state.oscillators]\n        .flat()\n        .find(el => el.id === payload.source)\n        ?.connectIds.push(payload.target)\n    },\n    delConnect: (state: ActiveSound, { payload }: PayloadAction<Connect>) => {\n      const node = [state.analysers, state.gains, state.biquadFilters, state.oscillators]\n        .flat()\n        .find(el => el.id === payload.source)\n      if (node !== undefined) {\n        node.connectIds = node.connectIds.filter(id => id !== payload.target)\n      }\n    },\n\n    setAnalysers: (state: ActiveSound, { payload }: PayloadAction<Analyser[]>) => {\n      state.analysers = payload\n    },\n    setAnalyser: (state: ActiveSound, { payload }: PayloadAction<Analyser>) => {\n      const index = state.analysers.findIndex(node => node.id === payload.id)\n      if (index === -1) {\n        state.analysers.push(payload)\n      } else {\n        state.analysers[index] = payload\n      }\n    },\n    delAnalyser: (state: ActiveSound, { payload }: PayloadAction<string>) => {\n      state.analysers = state.analysers.filter(node => node.id !== payload)\n    },\n\n    setGains: (state: ActiveSound, { payload }: PayloadAction<Gain[]>) => {\n      state.gains = payload\n    },\n    setGain: (state: ActiveSound, { payload }: PayloadAction<Gain>) => {\n      const index = state.gains.findIndex(node => node.id === payload.id)\n      if (index === -1) {\n        state.gains.push(payload)\n      } else {\n        state.gains[index] = payload\n      }\n    },\n    delGain: (state: ActiveSound, { payload }: PayloadAction<string>) => {\n      state.gains = state.gains.filter(node => node.id !== payload)\n    },\n\n    setBiquadFilters: (state: ActiveSound, { payload }: PayloadAction<BiquadFilter[]>) => {\n      state.biquadFilters = payload\n    },\n    setBiquadFilter: (state: ActiveSound, { payload }: PayloadAction<BiquadFilter>) => {\n      const index = state.biquadFilters.findIndex(node => node.id === payload.id)\n      if (index === -1) {\n        state.biquadFilters.push(payload)\n      } else {\n        state.biquadFilters[index] = payload\n      }\n    },\n    delBiquadFilter: (state: ActiveSound, { payload }: PayloadAction<string>) => {\n      state.biquadFilters = state.biquadFilters.filter(node => node.id !== payload)\n    },\n\n    setOscillators: (state: ActiveSound, { payload }: PayloadAction<Oscillator[]>) => {\n      state.oscillators = payload\n    },\n    setOscillator: (state: ActiveSound, { payload }: PayloadAction<Oscillator>) => {\n      const index = state.oscillators.findIndex(node => node.id === payload.id)\n      if (index === -1) {\n        state.oscillators.push(payload)\n      } else {\n        state.oscillators[index] = payload\n      }\n    },\n    delOscillator: (state: ActiveSound, { payload }: PayloadAction<string>) => {\n      state.oscillators = state.oscillators.filter(node => node.id !== payload)\n    },\n  },\n})\n\nexport const selectName = ({ activeSound }: RootState) => activeSound.name\nexport const selectPlayFrequency = ({ activeSound }: RootState) => activeSound.playFrequency\nexport const selectAudioNodes = ({ activeSound }: RootState) => ({\n  analysers: activeSound.analysers,\n  gains: activeSound.gains,\n  biquadFilters: activeSound.biquadFilters,\n  oscillators: activeSound.oscillators,\n})\n\nexport const selectAnalyser = ({ activeSound }: RootState) => (id: string) =>\n  activeSound.analysers.find(node => node.id === id)\nexport const selectAnalysers = ({ activeSound }: RootState) => activeSound.analysers\n\nexport const selectGain = ({ activeSound }: RootState) => (id: string) =>\n  activeSound.gains.find(node => node.id === id)\nexport const selectGains = ({ activeSound }: RootState) => activeSound.gains\n\nexport const selectBiquadFilter = ({ activeSound }: RootState) => (id: string) =>\n  activeSound.biquadFilters.find(node => node.id === id)\nexport const selectBiquadFilters = ({ activeSound }: RootState) => activeSound.biquadFilters\n\nexport const selectOscillator = ({ activeSound }: RootState) => (id: string) =>\n  activeSound.oscillators.find(node => node.id === id)\nexport const selectOscillators = ({ activeSound }: RootState) => activeSound.oscillators\n\nexport const {\n  setName,\n  setPlayFrequency,\n  addConnect,\n  delConnect,\n  setAnalysers,\n  setAnalyser,\n  delAnalyser,\n  setGains,\n  setGain,\n  delGain,\n  setBiquadFilters,\n  setBiquadFilter,\n  delBiquadFilter,\n  setOscillators,\n  setOscillator,\n  delOscillator,\n} = activeSoundSlice.actions\nexport default activeSoundSlice.reducer\n","import { createSlice, PayloadAction } from \"@reduxjs/toolkit\"\n\ntype Sound = {\n  name: string\n  description: string\n}\n\nconst soundsSlice = createSlice({\n  name: \"sounds\",\n  initialState: [],\n  reducers: {\n    addSound(state: Sound[], action: PayloadAction<Sound>) {\n      const { name, description } = action.payload\n      state.push({ name, description })\n    },\n  },\n})\n\nexport const { addSound } = soundsSlice.actions\n\nexport default soundsSlice.reducer\n","import { configureStore, getDefaultMiddleware } from \"@reduxjs/toolkit\"\nimport activeSoundSlice from \"./features/activeSound/activeSoundSlice\"\nimport soundsSlice from \"./features/sounds/soundsSlice\"\nimport uxSlice from \"./features/ux/uxSlice\"\n\nconst store = configureStore({\n  reducer: {\n    activeSound: activeSoundSlice,\n    sounds: soundsSlice,\n    ux: uxSlice,\n  },\n  middleware: [...getDefaultMiddleware()],\n})\n\nexport default store\nexport type RootState = ReturnType<typeof store.getState>\n","/** @jsx jsx */\nimport { jsx, css } from \"@emotion/core\"\nimport styled from \"@emotion/styled\"\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\"\nimport { IconProp } from \"@fortawesome/fontawesome-svg-core\"\nimport { audioNodeTypes } from \"./AudioGraph\"\nimport { PropsWithChildren } from \"react\"\n\nexport const globalGraph = css`\n  .react-flow {\n    background-color: var(--graph-bg);\n    resize: horizontal;\n    min-width: 80px;\n    width: calc(100% - var(--side-default-width));\n  }\n\n  .react-flow__node.audioNode {\n    min-width: 165px;\n    border-radius: 4px;\n    background-color: var(--node-bg);\n    color: #fff;\n    padding: 3px;\n\n    &.selected {\n      border: 2px solid var(--node-selected-border);\n      padding: 1px;\n    }\n\n    &.output {\n      font-family: Tomorrow;\n      font-size: 1rem;\n      padding: 8px;\n    }\n  }\n\n  .react-flow__handle {\n    width: 0.92rem;\n    height: 0.92rem;\n    &.react-flow__handle-top {\n      top: -0.64rem;\n      background-color: #e62020;\n    }\n    &.react-flow__handle-bottom {\n      bottom: -0.64rem;\n      background-color: #74c365;\n    }\n  }\n  .react-flow__edge {\n    .react-flow__edge-path {\n      stroke-width: 2;\n      stroke: #7d4e57;\n    }\n    &.selected .react-flow__edge-path {\n      stroke-width: 3;\n      stroke: #d66853;\n    }\n  }\n  .react-flow__controls-button {\n    width: 25px;\n    height: 25px;\n    opacity: 0.5;\n  }\n`\n\nexport const globalGraphEditMode = css`\n  .react-flow__node.audioNode {\n    cursor: default;\n  }\n`\n\nexport const globalGraphDraggableMode = css`\n  .react-flow__node.audioNode {\n    box-shadow: 1px 1px 4px 1px #333;\n  }\n`\n\nconst GraphButtonBase = styled.button`\n  background-color: #364156;\n  border-color: #7d4e57;\n  color: #fff;\n  font-family: Tomorrow;\n  font-size: 0.85rem;\n  border-radius: 3px;\n  padding: 4px;\n  cursor: pointer;\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  svg {\n    transition: 50ms;\n  }\n  &:hover svg {\n    transition: 50ms;\n    transform: scale(1.25);\n  }\n`\n\nexport const GraphButtons = styled.div`\n  position: absolute;\n  gap: 2px;\n  top: 8px;\n  right: 10px;\n  z-index: 4;\n  display: flex;\n  flex-direction: column;\n  .text {\n    overflow: hidden;\n    white-space: nowrap;\n    width: 0;\n    transition: 60ms;\n  }\n  &:hover .text {\n    width: 165px;\n    transition: 120ms;\n  }\n`\n\nconst GraphButtonMode = styled(GraphButtonBase)`\n  background-color: #455e87;\n`\n\nconst GraphButtonDel = styled(GraphButtonBase)`\n  background-color: #742a1b;\n`\n\ntype GraphBtnProps = {\n  icon: IconProp\n  onClick: (type: keyof typeof audioNodeTypes) => void\n  mode?: \"default\" | \"mode\" | \"del\"\n}\n\nexport const GraphButton = ({\n  icon,\n  onClick,\n  mode = \"default\",\n  children,\n}: PropsWithChildren<GraphBtnProps>) => {\n  switch (mode) {\n    case \"mode\":\n      return (\n        // @ts-ignore\n        <GraphButtonMode onClick={onClick}>\n          <div className=\"text\">{children}</div>\n          <FontAwesomeIcon fixedWidth icon={icon} size=\"lg\" />\n        </GraphButtonMode>\n      )\n    case \"del\":\n      return (\n        // @ts-ignore\n        <GraphButtonDel onClick={onClick}>\n          <div className=\"text\">{children}</div>\n          <FontAwesomeIcon fixedWidth icon={icon} size=\"lg\" />\n        </GraphButtonDel>\n      )\n    default:\n      return (\n        // @ts-ignore\n        <GraphButtonBase onClick={onClick}>\n          <div className=\"text\">{children}</div>\n          <FontAwesomeIcon fixedWidth icon={icon} size=\"lg\" />\n        </GraphButtonBase>\n      )\n  }\n}\n","import { ElementId } from \"react-flow-renderer\"\nimport { AudioParamSetting } from \"../components/graph/elems/AudioParamForm\"\n\nexport const AUDIO_CONTEXT_DESTINATION = \"destination\"\n\n// @ts-ignore\n// eslint-disable-next-line no-native-reassign\nAudioContext = window.AudioContext || window.webkitAudioContext\nexport let audioContext = new AudioContext()\n\n/**\n * AudioNodes holder\n */\nexport const audioNodes = new Map<string, AudioNode>()\n\nexport const restartAudioContext = async () => {\n  await audioContext.close()\n  audioNodes.clear()\n  audioContext = new AudioContext()\n  return audioContext\n}\n\nexport const connectNodes = (source: ElementId, target: ElementId) => {\n  if (target === AUDIO_CONTEXT_DESTINATION) {\n    audioNodes.get(source)?.connect(audioContext.destination)\n  } else {\n    const destination = audioNodes.get(target)\n    if (destination) audioNodes.get(source)?.connect(destination)\n  }\n}\n\nexport const applyParams = (node: AudioNode, params: AudioParamSetting[], time?: number) => {\n  if (time === undefined) {\n    time = audioContext.currentTime\n  }\n  params.forEach(param => {\n    const values = [...param.values]\n    if (\n      [\n        \"setValueAtTime\",\n        \"linearRampToValueAtTime\",\n        \"exponentialRampToValueAtTime\",\n        \"setTargetAtTime\",\n        \"setValueCurveAtTime\",\n      ].includes(param.call)\n    ) {\n      // @ts-ignore\n      values[1] += time\n    }\n    if ([\"cancelScheduledValues\", \"cancelAndHoldAtTime\"].includes(param.call)) {\n      // @ts-ignore\n      values[0] += time\n    }\n\n    // @ts-ignore\n    node[param.name][param.call](...values)\n  })\n}\n","import { Elements, isNode } from \"react-flow-renderer\"\nimport { AUDIO_CONTEXT_DESTINATION } from \"./audio\"\n\nexport const checkSize = (prev: number, next: number) => prev === next\n\nexport const getNextId = (elems: Elements) =>\n  +elems\n    .filter(el => isNode(el))\n    .filter(el => el.id !== AUDIO_CONTEXT_DESTINATION)\n    .sort((a, b) => +b.id - +a.id)[0]?.id + 1 || 1\n\nexport const validateSound = (obj: any) => Object.keys(obj).some(key => key === \"elements\")\n","import { XYPosition } from \"react-flow-renderer\"\n\n/**\n * Random number between:\n * @param min (included)\n * @param max (not included)\n */\nexport const randomBetween = (min: number, max: number) => Math.random() * (max - min) + min\n\n/**\n * Find appropriate position for the coming node.\n * @param canvasWidth Audio graph canvas width\n * @param canvasHeight Audio graph canvas height\n * @param bottom Place should be on the top or on the bottom\n */\nexport const newNodePosition = (\n  canvasWidth: number,\n  canvasHeight: number,\n  bottom = false\n): XYPosition => {\n  const halfHeight = canvasHeight / 2\n  return {\n    x: randomBetween(0, canvasWidth - 200),\n    y: bottom ? randomBetween(halfHeight, canvasHeight) : randomBetween(0, halfHeight),\n  }\n}\n\n/**\n * Fix canvas blur problem\n * @param canvas Canvas DOM element\n * @returns Dimensions array\n */\nexport const dpiFix = (canvas: HTMLCanvasElement) => {\n  const width = +getComputedStyle(canvas).getPropertyValue(\"width\").slice(0, -2)\n  const height = +getComputedStyle(canvas).getPropertyValue(\"height\").slice(0, -2)\n  const dpi = window.devicePixelRatio\n  canvas.setAttribute(\"width\", (width * dpi).toString())\n  canvas.setAttribute(\"height\", (height * dpi).toString())\n  return { width, height }\n}\n\n/**\n * Format large number with spaces\n * @param num Float or integer number\n * @return Formatted number\n */\nexport const formatNumber = (num: number) => {\n  var parts = num.toString().split(\".\")\n  parts[0] = parts[0].replace(/\\B(?=(\\d{3})+(?!\\d))/g, \" \")\n  return parts.join(\".\")\n}\n","/** @jsx jsx */\nimport { Fragment } from \"react\"\nimport { jsx } from \"@emotion/core\"\nimport { AudioParams } from \"../../../hooks/useAudioNodeDefs\"\nimport { formatNumber } from \"../../../scripts/utils\"\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\"\nimport { DataRow, DataKey, DataNote, H2 } from \"./styled\"\nimport { IconButton } from \"../../../styled\"\n\ntype Props = {\n  audioParams: AudioParams\n  addParam: (name?: string, defaultValue?: number) => void\n  hideButton?: boolean\n}\n\nexport default ({ audioParams, addParam, hideButton }: Props) => {\n  return (\n    <Fragment>\n      <H2>Defaults</H2>\n      {Object.entries(audioParams).map(([key, params]) => {\n        return (\n          <DataRow key={key}>\n            <div>\n              <DataKey>{key}:</DataKey> {params.defaultValue}\n            </div>\n            <DataNote>\n              {params.minValue <= Number.MIN_SAFE_INTEGER ? \"∞\" : formatNumber(params.minValue)} —{\" \"}\n              {params.maxValue >= Number.MAX_SAFE_INTEGER ? \"∞\" : formatNumber(params.maxValue)}\n              {!hideButton && (\n                <IconButton onClick={() => addParam(key, params.defaultValue)}>\n                  <FontAwesomeIcon icon={[\"fad\", \"layer-plus\"]} size=\"lg\" />\n                </IconButton>\n              )}\n            </DataNote>\n          </DataRow>\n        )\n      })}\n    </Fragment>\n  )\n}\n","import React, { Fragment } from \"react\"\nimport { AudioParamSetting } from \"./AudioParamForm\"\nimport { DataRow, DataKey, DataNote } from \"../elems/styled\"\n\ntype Props = {\n  params: AudioParamSetting[]\n}\n\nexport default ({ params }: Props) => (\n  <Fragment>\n    {params.map((param, index) => (\n      <DataRow key={JSON.stringify(param) + index.toString()}>\n        <div>\n          <DataKey>{param.name}:</DataKey> {param.values.join(\", \")}\n        </div>\n        <DataNote>{param.call}</DataNote>\n      </DataRow>\n    ))}\n  </Fragment>\n)\n","/** @jsx jsx */\nimport { jsx } from \"@emotion/core\"\nimport { Fragment, ChangeEvent } from \"react\"\nimport { AudioParams } from \"../../../hooks/useAudioNodeDefs\"\n\nconst audioParamCalls = [\n  \"setValueAtTime\",\n  \"linearRampToValueAtTime\",\n  \"exponentialRampToValueAtTime\",\n  \"setTargetAtTime\",\n  \"setValueCurveAtTime\",\n  \"cancelScheduledValues\",\n  \"cancelAndHoldAtTime\",\n] as const\n\ntype Call = typeof audioParamCalls[number]\ntype CallParams = (number | number[])[]\n\nexport type AudioParamSetting = {\n  name: string\n  call: Call\n  /** `call` values in order */\n  values: CallParams\n}\n\nexport type AudioParamUpdate = {\n  name?: string\n  call?: Call\n  /** `call` values in order */\n  values?: CallParams\n}\n\ntype Props = {\n  audioParams: AudioParams\n  name: string\n  call: Call\n  values: CallParams\n  onChange: (param: AudioParamUpdate) => void\n}\n\nexport default ({ audioParams, name, call, values, onChange }: Props) => {\n  const setNumber = (event: ChangeEvent<HTMLInputElement>) => {\n    const nth = +event.currentTarget.getAttribute(\"data-nth\")!\n    const val = event.currentTarget.valueAsNumber\n    if (!Number.isNaN(val)) {\n      const currValues = [...values]\n      currValues[nth] = val\n      onChange({ values: currValues })\n    }\n  }\n\n  const setNumbers = (event: ChangeEvent<HTMLInputElement>) => {\n    const nth = +event.currentTarget.getAttribute(\"data-nth\")!\n    const val = event.currentTarget.value.split(\",\").map(value => +value)\n    const currValues = [...values]\n    currValues[nth] = val\n    onChange({ values: currValues })\n  }\n\n  const getNumber = (nth: number) => values[nth] as number\n  const getNumbers = (nth: number) => {\n    if (Array.isArray(values[nth])) {\n      return (values[nth] as number[]).join(\",\")\n    }\n    return values[nth].toString()\n  }\n\n  return (\n    <Fragment>\n      <td>\n        <select value={name} onChange={event => onChange({ name: event.currentTarget.value })}>\n          {Object.keys(audioParams).map(key => (\n            <option key={key} value={key}>\n              {key}\n            </option>\n          ))}\n        </select>\n      </td>\n\n      <td>\n        <select\n          value={call}\n          onChange={event => onChange({ call: event.currentTarget.value as Call })}\n        >\n          {audioParamCalls.map(call => (\n            <option key={call} value={call}>\n              {call}\n            </option>\n          ))}\n        </select>\n      </td>\n\n      {[\"setValueAtTime\"].includes(call) && (\n        <Fragment>\n          <td>\n            <input\n              type=\"number\"\n              value={getNumber(0)}\n              step={0.1}\n              data-nth={0}\n              onChange={setNumber}\n            />\n          </td>\n\n          <td>\n            <input\n              type=\"number\"\n              value={getNumber(1)}\n              step={0.1}\n              data-nth={1}\n              onChange={setNumber}\n            />\n          </td>\n        </Fragment>\n      )}\n\n      {[\"linearRampToValueAtTime\", \"exponentialRampToValueAtTime\"].includes(call) && (\n        <Fragment>\n          <td>\n            <input type=\"number\" value={getNumber(0)} data-nth={0} onChange={setNumber} />\n          </td>\n          <td>\n            <input type=\"number\" value={getNumber(1)} data-nth={1} onChange={setNumber} />\n          </td>\n        </Fragment>\n      )}\n\n      {[\"setTargetAtTime\"].includes(call) && (\n        <Fragment>\n          <td>\n            <input type=\"number\" value={getNumber(0)} data-nth={0} onChange={setNumber} />\n          </td>\n          <td>\n            <label></label>\n            <input\n              type=\"number\"\n              value={getNumber(1)}\n              data-nth={1}\n              onChange={setNumber}\n              title=\"startTime (t+)\"\n            />\n            <input\n              type=\"number\"\n              value={getNumber(2)}\n              data-nth={2}\n              onChange={setNumber}\n              title=\"timeConstant\"\n            />\n          </td>\n        </Fragment>\n      )}\n\n      {[\"setValueCurveAtTime\"].includes(call) && (\n        <Fragment>\n          <td>\n            <input\n              type=\"text\"\n              value={getNumbers(0)}\n              data-nth={0}\n              onChange={setNumbers}\n              title=\"values (comma separated)\"\n            />\n          </td>\n          <td>\n            <input\n              type=\"number\"\n              value={getNumber(1)}\n              data-nth={1}\n              onChange={setNumber}\n              title=\"startTime (t+)\"\n            />\n            <input\n              type=\"number\"\n              value={getNumber(2)}\n              data-nth={2}\n              onChange={setNumber}\n              title=\"duration\"\n            />\n          </td>\n        </Fragment>\n      )}\n\n      {[\"cancelScheduledValues\"].includes(call) && (\n        <Fragment>\n          <td>-</td>\n          <td>\n            <input\n              type=\"number\"\n              value={getNumber(0)}\n              data-nth={0}\n              onChange={setNumber}\n              title=\"startTime (t+)\"\n            />\n          </td>\n        </Fragment>\n      )}\n\n      {[\"cancelAndHoldAtTime\"].includes(call) && (\n        <Fragment>\n          <td>-</td>\n          <td>\n            <input\n              type=\"number\"\n              value={getNumber(0)}\n              data-nth={0}\n              onChange={setNumber}\n              title=\"cancelTime (t+)\"\n            />\n          </td>\n        </Fragment>\n      )}\n    </Fragment>\n  )\n}\n","/** @jsx jsx */\nimport { jsx } from \"@emotion/core\"\nimport { Fragment } from \"react\"\nimport AudioParamForm, { AudioParamSetting, AudioParamUpdate } from \"./AudioParamForm\"\nimport { AudioParams } from \"../../../hooks/useAudioNodeDefs\"\nimport { IconButton } from \"../../../styled\"\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\"\n\ntype Props = {\n  audioParams: AudioParams\n  params: AudioParamSetting[]\n  setParams: (params: AudioParamSetting[]) => void\n}\n\nexport default ({ audioParams, params, setParams }: Props) => {\n  const paramChange = (index: number, newParam: AudioParamUpdate) => {\n    const currParams = [...params]\n    if (newParam.call !== undefined) {\n      if (\n        [\"setValueAtTime\", \"linearRampToValueAtTime\", \"exponentialRampToValueAtTime\"].includes(\n          newParam.call\n        )\n      ) {\n        newParam.values = [0, 0]\n      }\n      if ([\"setTargetAtTime\"].includes(newParam.call)) {\n        newParam.values = [0, 0, 0]\n      }\n      if ([\"setValueCurveAtTime\"].includes(newParam.call)) {\n        newParam.values = [[0], 0, 0]\n      }\n      if ([\"cancelScheduledValues\", \"cancelAndHoldAtTime\"].includes(newParam.call)) {\n        newParam.values = [0]\n      }\n    }\n    currParams[index] = { ...currParams[index], ...newParam }\n    setParams(currParams)\n  }\n\n  const delParam = (index: number) => {\n    const currParams = [...params]\n    currParams.splice(index, 1)\n    setParams(currParams)\n  }\n\n  return (\n    <Fragment>\n      <table>\n        <tr>\n          <th>\n            <FontAwesomeIcon icon={[\"fad\", \"piano-keyboard\"]} title=\"Param Name\" />\n          </th>\n          <th>\n            <FontAwesomeIcon icon={[\"fad\", \"waveform-path\"]} title=\"Call Type\" />\n          </th>\n          <th>\n            <FontAwesomeIcon icon={[\"fad\", \"sliders-h\"]} title=\"Value\" />\n          </th>\n          <th>\n            <FontAwesomeIcon icon={[\"fad\", \"hourglass-start\"]} title=\"Start (time+)\" />\n          </th>\n          <th></th>\n        </tr>\n        {params.map((param, index) => (\n          <tr key={param.name + param.call + index}>\n            <AudioParamForm\n              audioParams={audioParams}\n              {...param}\n              onChange={newParam => paramChange(index, newParam)}\n            />\n            <td>\n              <IconButton onClick={() => delParam(index)}>\n                <FontAwesomeIcon icon={[\"fad\", \"trash\"]} />\n              </IconButton>\n            </td>\n          </tr>\n        ))}\n      </table>\n    </Fragment>\n  )\n}\n","/** @jsx jsx */\nimport { jsx } from \"@emotion/core\"\nimport { useSelector, useDispatch } from \"react-redux\"\nimport { NodeComponentProps } from \"react-flow-renderer\"\nimport { useMemo, useEffect, Fragment, ChangeEvent } from \"react\"\nimport { FormWrapper, H1, H2, NodeBody, DataRow, DataKey, Hr } from \"../elems/styled\"\nimport useAudioNodeDefs from \"../../../hooks/useAudioNodeDefs\"\nimport { selectEditMode } from \"../../../features/ux/uxSlice\"\nimport {\n  setBiquadFilter,\n  delBiquadFilter,\n  selectBiquadFilter,\n  BiquadFilter,\n} from \"../../../features/activeSound/activeSoundSlice\"\nimport AudioParamDefaults from \"../elems/AudioParamDefaults\"\nimport { AudioParamSetting } from \"../elems/AudioParamForm\"\nimport AudioParamsView from \"../elems/AudioParamsView\"\nimport HandleOutputs from \"../elems/HandleOutputs\"\nimport HandleInputs from \"../elems/HandleInputs\"\nimport AudioParams from \"../elems/AudioParams\"\n\nconst types: BiquadFilterType[] = [\n  \"allpass\",\n  \"bandpass\",\n  \"highpass\",\n  \"highshelf\",\n  \"lowpass\",\n  \"lowshelf\",\n  \"notch\",\n  \"peaking\",\n]\n\nexport default ({ id }: NodeComponentProps) => {\n  const basic: BiquadFilter = useMemo(\n    () => ({\n      id,\n      connectIds: [],\n      type: \"lowpass\",\n      params: [],\n    }),\n    [id]\n  )\n  const editMode = useSelector(selectEditMode)\n  const defs = useAudioNodeDefs(\"BiquadFilterNode\")\n  const dispatch = useDispatch()\n  const biquadFilter: BiquadFilter = useSelector(selectBiquadFilter)(id) || basic\n\n  useEffect(() => {\n    dispatch(setBiquadFilter(biquadFilter))\n    return () => void dispatch(delBiquadFilter(id))\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [])\n\n  const changeType = (event: ChangeEvent<HTMLInputElement>) => {\n    dispatch(\n      setBiquadFilter({ ...biquadFilter, type: event.currentTarget.value as BiquadFilterType })\n    )\n  }\n\n  const setParams = (params: AudioParamSetting[]) => {\n    dispatch(setBiquadFilter({ ...biquadFilter, params }))\n  }\n\n  const addParam = (name?: string, defaultValue = 1) => {\n    const params = [...biquadFilter.params]\n    params.push({\n      name: name || Object.keys(defs.audioParams)[0],\n      call: \"setValueAtTime\",\n      values: [defaultValue, 0],\n    })\n    setParams(params)\n  }\n\n  return (\n    <Fragment>\n      <HandleInputs numberOfInputs={defs.numberOfInputs} />\n      <H1>Biquad Filter #{id}</H1>\n\n      <NodeBody>\n        {editMode ? (\n          <Fragment>\n            <AudioParamDefaults audioParams={defs.audioParams} addParam={addParam} />\n            <H2>Type</H2>\n            <FormWrapper>\n              <div css={{ columnCount: 2, fontWeight: 300, textTransform: \"capitalize\" }}>\n                {types.map(typeVal => (\n                  <label key={typeVal} css={{ display: \"block\" }}>\n                    <input\n                      type=\"radio\"\n                      defaultValue={typeVal}\n                      checked={biquadFilter.type === typeVal}\n                      onChange={changeType}\n                    />\n                    {typeVal}\n                  </label>\n                ))}\n              </div>\n              {biquadFilter.params.length > 0 && (\n                <Fragment>\n                  <Hr />\n                  <AudioParams\n                    audioParams={defs.audioParams}\n                    params={biquadFilter.params}\n                    setParams={setParams}\n                  />\n                </Fragment>\n              )}\n            </FormWrapper>\n          </Fragment>\n        ) : (\n          <div>\n            <DataRow css={{ textTransform: \"capitalize\" }}>\n              <DataKey>Type:</DataKey> {biquadFilter.type}\n            </DataRow>\n            <AudioParamsView params={biquadFilter.params} />\n          </div>\n        )}\n      </NodeBody>\n      <HandleOutputs numberOfOutputs={defs.numberOfOutputs} />\n    </Fragment>\n  )\n}\n","/* eslint-disable react-hooks/exhaustive-deps */\n/** @jsx jsx */\nimport { jsx } from \"@emotion/core\"\nimport { useMemo, useEffect, Fragment, ChangeEvent } from \"react\"\nimport { useSelector, useDispatch } from \"react-redux\"\nimport { NodeComponentProps } from \"react-flow-renderer\"\nimport { H1, FormWrapper, Hr, NodeBody, H2, DataRow, DataKey } from \"../elems/styled\"\nimport useAudioNodeDefs from \"../../../hooks/useAudioNodeDefs\"\nimport { selectEditMode } from \"../../../features/ux/uxSlice\"\nimport AudioParamDefaults from \"../elems/AudioParamDefaults\"\nimport { AudioParamSetting } from \"../elems/AudioParamForm\"\nimport {\n  setOscillator,\n  delOscillator,\n  selectOscillator,\n  Oscillator,\n} from \"../../../features/activeSound/activeSoundSlice\"\nimport AudioParamsView from \"../elems/AudioParamsView\"\nimport HandleOutputs from \"../elems/HandleOutputs\"\nimport HandleInputs from \"../elems/HandleInputs\"\nimport AudioParams from \"../elems/AudioParams\"\n\nconst types: OscillatorType[] = [\"sine\", \"square\", \"sawtooth\", \"triangle\"]\n\nexport default ({ id }: NodeComponentProps) => {\n  const basic: Oscillator = useMemo(\n    () => ({\n      id,\n      connectIds: [],\n      type: types[0],\n      params: [],\n    }),\n    [id]\n  )\n  const editMode = useSelector(selectEditMode)\n  const defs = useAudioNodeDefs(\"OscillatorNode\")\n  const dispatch = useDispatch()\n  const oscillator: Oscillator = useSelector(selectOscillator)(id) || basic\n\n  useEffect(() => {\n    dispatch(setOscillator(oscillator))\n    return () => void dispatch(delOscillator(id))\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [])\n\n  const changeType = (event: ChangeEvent<HTMLInputElement>) => {\n    dispatch(setOscillator({ ...oscillator, type: event.currentTarget.value as OscillatorType }))\n  }\n\n  const setParams = (params: AudioParamSetting[]) => {\n    dispatch(setOscillator({ ...oscillator, params }))\n  }\n\n  const addParam = (name?: string, defaultValue = 1) => {\n    const params = [...oscillator.params]\n    params.push({\n      name: name || Object.keys(defs.audioParams)[0],\n      call: \"setValueAtTime\",\n      values: [defaultValue, 0],\n    })\n    setParams(params)\n  }\n\n  return (\n    <Fragment>\n      {defs.numberOfInputs > 0 && <HandleInputs numberOfInputs={defs.numberOfInputs} />}\n      <H1>Oscillator #{id}</H1>\n\n      <NodeBody>\n        {editMode ? (\n          <Fragment>\n            <AudioParamDefaults audioParams={defs.audioParams} addParam={addParam} />\n            <H2>Type</H2>\n            <FormWrapper css={{ marginTop: 4 }}>\n              <div css={{ columnCount: 2, fontWeight: 300 }}>\n                {types.map(typeVal => (\n                  <label key={typeVal} css={{ display: \"block\" }}>\n                    <input\n                      type=\"radio\"\n                      defaultValue={typeVal}\n                      checked={oscillator.type === typeVal}\n                      onChange={changeType}\n                    />\n                    {typeVal}\n                  </label>\n                ))}\n              </div>\n              {oscillator.params.length > 0 && (\n                <Fragment>\n                  <Hr />\n                  <AudioParams\n                    audioParams={defs.audioParams}\n                    params={oscillator.params}\n                    setParams={setParams}\n                  />\n                </Fragment>\n              )}\n            </FormWrapper>\n          </Fragment>\n        ) : (\n          <div>\n            <DataRow css={{ textTransform: \"capitalize\" }}>\n              <DataKey>Type:</DataKey> {oscillator.type}\n            </DataRow>\n            <AudioParamsView params={oscillator.params} />\n          </div>\n        )}\n      </NodeBody>\n\n      <HandleOutputs numberOfOutputs={defs.numberOfOutputs} />\n    </Fragment>\n  )\n}\n","/** @jsx jsx */\nimport { useSelector, useDispatch } from \"react-redux\"\nimport { selectEditMode, toggleEditMode } from \"../../features/ux/uxSlice\"\nimport { GraphButtons, GraphButton } from \"./styled\"\nimport { Fragment } from \"react\"\nimport { jsx } from \"@emotion/core\"\nimport { audioNodeTypes } from \"./AudioGraph\"\n\ntype Props = {\n  addAudioNode: (type: keyof typeof audioNodeTypes) => () => void\n  delSelected: () => void\n}\n\nexport default ({ addAudioNode, delSelected }: Props) => {\n  const dispatch = useDispatch()\n  const editMode = useSelector(selectEditMode)\n\n  return (\n    <GraphButtons>\n      <GraphButton\n        mode=\"mode\"\n        onClick={() => dispatch(toggleEditMode())}\n        icon={[\"fas\", editMode ? \"edit\" : \"project-diagram\"]}\n      >\n        {editMode ? (\n          <Fragment>\n            To View <u>m</u>ode\n          </Fragment>\n        ) : (\n          <Fragment>\n            To Edit <u>m</u>ode\n          </Fragment>\n        )}\n      </GraphButton>\n      <GraphButton onClick={addAudioNode(\"oscillator\")} icon={[\"fad\", \"wave-sine\"]}>\n        Add Oscillator\n      </GraphButton>\n      <GraphButton onClick={addAudioNode(\"gain\")} icon={[\"fad\", \"volume\"]}>\n        Add Gain\n      </GraphButton>\n      <GraphButton onClick={addAudioNode(\"biquadfilter\")} icon={[\"fad\", \"filter\"]}>\n        Add Biquad Filter\n      </GraphButton>\n      <GraphButton onClick={addAudioNode(\"analyser\")} icon={[\"fad\", \"analytics\"]}>\n        Add Analyser\n      </GraphButton>\n      <GraphButton mode=\"del\" onClick={delSelected} icon={[\"fad\", \"trash-alt\"]}>\n        Remove Selected\n      </GraphButton>\n    </GraphButtons>\n  )\n}\n","/* eslint-disable react-hooks/exhaustive-deps */\n/** @jsx jsx */\nimport ReactFlow, {\n  Edge,\n  Node,\n  isEdge,\n  addEdge,\n  Elements,\n  Controls,\n  Connection,\n  Background,\n  useStoreState,\n  removeElements,\n  BackgroundVariant,\n} from \"react-flow-renderer\"\nimport { jsx, Global } from \"@emotion/core\"\nimport { useSelector, useDispatch } from \"react-redux\"\nimport { useState, useRef, useEffect, Fragment } from \"react\"\nimport { addConnect, delConnect } from \"../../features/activeSound/activeSoundSlice\"\nimport {\n  selectEditMode,\n  selectLoadElements,\n  selectDelSelected,\n  toggleDelSelected,\n  setLoadElements,\n} from \"../../features/ux/uxSlice\"\nimport { globalGraph, globalGraphEditMode, globalGraphDraggableMode } from \"./styled\"\nimport { AUDIO_CONTEXT_DESTINATION } from \"../../scripts/audio\"\nimport { getNextId, checkSize } from \"../../scripts/helpers\"\nimport { newNodePosition } from \"../../scripts/utils\"\nimport BiquadFilter from \"./nodes/BiquadFilter\"\nimport Oscillator from \"./nodes/Oscillator\"\nimport Analyser from \"./nodes/Analyser\"\nimport GraphMenu from \"./GraphMenu\"\nimport Gain from \"./nodes/Gain\"\n\nexport const audioNodeTypes = {\n  biquadfilter: BiquadFilter,\n  oscillator: Oscillator,\n  analyser: Analyser,\n  gain: Gain,\n}\n\nconst defaultNode: Node = {\n  id: AUDIO_CONTEXT_DESTINATION,\n  data: { label: \"Audio Output\" },\n  type: \"output\",\n  connectable: true,\n  selectable: false,\n  position: { x: 0, y: 0 },\n  className: \"audioNode output\",\n}\n\nexport default () => {\n  const dispatch = useDispatch()\n  const loadElements = useSelector(selectLoadElements)\n  const editMode = useSelector(selectEditMode)\n  const isDelSelected = useSelector(selectDelSelected)\n  const width = useStoreState(store => store.width, checkSize)\n  const height = useStoreState(store => store.height, checkSize)\n  const [elements, setElements] = useState<Elements>([])\n  const selected = useRef<Elements | null>(null)\n  const nextId = useRef<number>(1)\n\n  const onConnect = (connection: Edge | Connection) => {\n    if (connection.source !== null && connection.target !== null) {\n      setElements(els => addEdge(connection, els))\n      dispatch(addConnect({ source: connection.source, target: connection.target }))\n    }\n  }\n\n  useEffect(() => {\n    if (loadElements) {\n      setElements(loadElements)\n      nextId.current = getNextId(loadElements)\n      dispatch(setLoadElements(null))\n    }\n  }, [loadElements, dispatch])\n\n  useEffect(() => {\n    if (width > 0 && height > 0 && elements.length === 0) {\n      defaultNode.position = { x: width / 2, y: height / 2 }\n      setElements([defaultNode])\n    }\n  }, [width, height, elements])\n\n  useEffect(() => {\n    if (isDelSelected) {\n      delSelected()\n      dispatch(toggleDelSelected())\n    }\n  }, [isDelSelected])\n\n  const delSelected = () => {\n    if (selected.current !== null) {\n      setElements(removeElements(selected.current, elements))\n      selected.current\n        .filter(el => isEdge(el))\n        .forEach(\n          el =>\n            void dispatch(delConnect({ source: (el as Edge).source, target: (el as Edge).target }))\n        )\n      selected.current = null\n    }\n  }\n\n  const addAudioNode = (type: keyof typeof audioNodeTypes) => () =>\n    setElements([\n      ...elements,\n      {\n        id: (nextId.current++).toString(),\n        type,\n        className: \"audioNode\",\n        position: newNodePosition(width, height),\n      },\n    ])\n\n  return (\n    <Fragment>\n      <Global styles={globalGraph} />\n      {editMode ? (\n        <Global styles={globalGraphEditMode} />\n      ) : (\n        <Global styles={globalGraphDraggableMode} />\n      )}\n      <ReactFlow\n        elements={elements}\n        onConnect={onConnect}\n        nodeTypes={audioNodeTypes}\n        nodesDraggable={!editMode}\n        onSelectionChange={els => (selected.current = els)}\n        snapGrid={[16, 16]}\n        snapToGrid={true}\n        onlyRenderVisibleNodes={false}\n        connectionLineStyle={{ stroke: \"#71474e\" }}\n      >\n        <Controls showInteractive={false} />\n        <Background\n          variant={editMode ? BackgroundVariant.Dots : BackgroundVariant.Lines}\n          color=\"#364156\"\n          gap={32}\n        />\n        <GraphMenu addAudioNode={addAudioNode} delSelected={delSelected} />\n      </ReactFlow>\n    </Fragment>\n  )\n}\n","/** @jsx jsx */\nimport { jsx } from \"@emotion/core\"\nimport { useMemo, useEffect, Fragment } from \"react\"\nimport { useSelector, useDispatch } from \"react-redux\"\nimport { NodeComponentProps } from \"react-flow-renderer\"\nimport { setGain, delGain, selectGain, Gain } from \"../../../features/activeSound/activeSoundSlice\"\nimport useAudioNodeDefs from \"../../../hooks/useAudioNodeDefs\"\nimport { selectEditMode } from \"../../../features/ux/uxSlice\"\nimport AudioParamDefaults from \"../elems/AudioParamDefaults\"\nimport { AudioParamSetting } from \"../elems/AudioParamForm\"\nimport { H1, FormWrapper, NodeBody, Hr } from \"../elems/styled\"\nimport AudioParamsView from \"../elems/AudioParamsView\"\nimport HandleOutputs from \"../elems/HandleOutputs\"\nimport HandleInputs from \"../elems/HandleInputs\"\nimport AudioParams from \"../elems/AudioParams\"\n\nexport default ({ id }: NodeComponentProps) => {\n  const basic: Gain = useMemo(\n    () => ({\n      id,\n      connectIds: [],\n      params: [],\n    }),\n    [id]\n  )\n  const editMode = useSelector(selectEditMode)\n  const defs = useAudioNodeDefs(\"GainNode\")\n  const dispatch = useDispatch()\n  const gain: Gain = useSelector(selectGain)(id) || basic\n\n  useEffect(() => {\n    dispatch(setGain(gain))\n    return () => void dispatch(delGain(id))\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [])\n\n  const setParams = (params: AudioParamSetting[]) => {\n    dispatch(setGain({ ...gain, params }))\n  }\n\n  const addParam = (name?: string, defaultValue = 1) => {\n    const params = [...gain.params]\n    params.push({\n      name: name || Object.keys(defs.audioParams)[0],\n      call: \"setValueAtTime\",\n      values: [defaultValue, 0],\n    })\n    setParams(params)\n  }\n\n  return (\n    <Fragment>\n      <HandleInputs numberOfInputs={defs.numberOfInputs} />\n      <H1>Gain #{id}</H1>\n\n      <NodeBody>\n        {(editMode || gain.params.length === 0) && (\n          <AudioParamDefaults\n            audioParams={defs.audioParams}\n            addParam={addParam}\n            hideButton={!editMode}\n          />\n        )}\n        {editMode ? (\n          <Fragment>\n            {gain.params.length > 0 && (\n              <FormWrapper>\n                <Hr />\n                <AudioParams\n                  audioParams={defs.audioParams}\n                  params={gain.params}\n                  setParams={setParams}\n                />\n              </FormWrapper>\n            )}\n          </Fragment>\n        ) : (\n          <AudioParamsView params={gain.params} />\n        )}\n      </NodeBody>\n\n      <HandleOutputs numberOfOutputs={defs.numberOfOutputs} />\n    </Fragment>\n  )\n}\n","/* eslint-disable jsx-a11y/accessible-emoji */\n/** @jsx jsx */\nimport { jsx } from \"@emotion/core\"\nimport { toast } from \"react-toastify\"\nimport { useDispatch } from \"react-redux\"\nimport { toggleMenu, togglesideLeft } from \"../../features/ux/uxSlice\"\nimport { validateSound } from \"../../scripts/helpers\"\nimport { MenuPopup } from \"../../styled\"\n\nexport default () => {\n  const dispatch = useDispatch()\n\n  const loadDefaultSounds = async (name: string) => {\n    try {\n      const res = await fetch(`${window.location.pathname}/samples/${name}.json`)\n      if (res.ok) {\n        const sample = await res.json()\n        if (validateSound(sample)) {\n          localStorage.setItem(name, JSON.stringify(sample))\n          toast.success(`${name} Loaded`)\n        }\n      }\n    } catch (e) {\n      toast.error(`${name} failed to load. ${e}`)\n    }\n  }\n\n  return (\n    <MenuPopup className=\"menu\" onMouseLeave={() => dispatch(toggleMenu())}>\n      <h2>MENU</h2>\n      <ul>\n        <li>\n          Open poorly managed{\" \"}\n          <a href=\"https://github.com/SubZtep/synth/wiki\" target=\"_blank\" rel=\"noopener noreferrer\">\n            Wiki page\n          </a>\n          .\n        </li>\n        <li>\n          Preload <button onClick={() => loadDefaultSounds(\"Kick\")}>Kick</button> and{\" \"}\n          <button onClick={() => loadDefaultSounds(\"HiHat\")}>HiHat 🐛</button> sounds to its name in\n          local storage.\n        </li>\n        <li>\n          <button onClick={() => dispatch(togglesideLeft())}>Switch</button> sidebar position\n          between left and right.\n        </li>\n      </ul>\n    </MenuPopup>\n  )\n}\n","/** @jsx jsx */\nimport { jsx } from \"@emotion/core\"\nimport { Fragment, useRef } from \"react\"\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\"\nimport { selectMenu, toggleMenu } from \"../../features/ux/uxSlice\"\nimport { useSelector, useDispatch } from \"react-redux\"\nimport Menu from \"./Menu\"\n\nconst MenuOpener = () => {\n  const menu = useSelector(selectMenu)\n  const dispatch = useDispatch()\n  const timer = useRef<NodeJS.Timeout | null>(null)\n\n  return (\n    <Fragment>\n      <FontAwesomeIcon\n        className=\"menuOpener\"\n        fixedWidth\n        icon={[\"fad\", \"bars\"]}\n        size=\"2x\"\n        onMouseEnter={() => {\n          if (timer.current === null) {\n            timer.current = setTimeout(() => {\n              dispatch(toggleMenu())\n              timer.current = null\n            }, 500)\n          }\n        }}\n        onMouseLeave={() => {\n          if (timer.current !== null) {\n            clearTimeout(timer.current)\n            timer.current = null\n          }\n        }}\n      />\n      {menu && <Menu />}\n    </Fragment>\n  )\n}\n\nexport default MenuOpener\n","/** @jsx jsx */\n/* eslint-disable react-hooks/exhaustive-deps */\nimport { jsx } from \"@emotion/core\"\nimport { toast } from \"react-toastify\"\nimport { useRef, useEffect } from \"react\"\nimport { useSelector } from \"react-redux\"\nimport { audioNodes } from \"../../scripts/audio\"\nimport { selectAnalysers } from \"../../features/activeSound/activeSoundSlice\"\nimport { dpiFix } from \"../../scripts/utils\"\n\nexport default () => {\n  const analysers = useSelector(selectAnalysers)\n  const canvas = useRef<HTMLCanvasElement>(null)\n  const ctx = useRef<CanvasRenderingContext2D>()\n  const width = useRef<number>(0)\n  const height = useRef<number>(0)\n  const timer = useRef<NodeJS.Timeout | null>(null)\n\n  useEffect(() => {\n    ctx.current = canvas.current!.getContext(\"2d\") as CanvasRenderingContext2D\n    //TODO: `dpiFix()` uneffective with css width and height, remove them\n    const dimensions = dpiFix(canvas.current!)\n    width.current = dimensions.width\n    height.current = dimensions.height\n\n    return () => {\n      if (timer.current !== null) {\n        clearTimeout(timer.current)\n      }\n    }\n  }, [])\n\n  const draw = () => {\n    timer.current = null\n    ctx.current!.clearRect(0, 0, width.current, height.current)\n    analysers.forEach(analyser => {\n      const node = audioNodes.get(analyser.id) as AnalyserNode\n      if (node) {\n        ctx.current!.lineWidth = analyser.lineWidth\n        try {\n          drawWave(node, analyser.color)\n        } catch (e) {\n          toast.error(e.message)\n        }\n      }\n    })\n\n    // requestAnimationFrame(draw)\n    timer.current = setTimeout(draw, 100)\n  }\n\n  useEffect(() => {\n    if (timer.current !== null) {\n      clearTimeout(timer.current)\n    }\n    if (analysers.length > 0) {\n      draw()\n    } else {\n      ctx.current!.clearRect(0, 0, width.current, height.current)\n    }\n  }, [analysers])\n\n  const drawWave = (analyser: AnalyserNode, color: string) => {\n    const halfHeight = height.current / 2\n    ctx.current!.strokeStyle = color\n    const bufferLength = analyser.frequencyBinCount\n    const data = new Float32Array(bufferLength)\n    analyser.getFloatTimeDomainData(data)\n    let sliceWidth = width.current / bufferLength\n    let x = 0\n    let y\n    ctx.current!.beginPath()\n    ctx.current!.moveTo(0, halfHeight)\n    for (let i = 0; i < bufferLength; i++) {\n      y = halfHeight + data[i] * halfHeight\n      ctx.current!.lineTo(x, y)\n      x += sliceWidth\n    }\n    ctx.current!.lineTo(width.current, halfHeight)\n    ctx.current!.stroke()\n  }\n\n  return (\n    <div css={{ height: 120, boxShadow: \"inset 0 0 25px #101319\" }}>\n      <canvas ref={canvas} css={{ width: \"100%\", height: \"100%\" }} />\n    </div>\n  )\n}\n","/* eslint-disable react-hooks/exhaustive-deps */\n/** @jsx jsx */\nimport { jsx } from \"@emotion/core\"\nimport { toast } from \"react-toastify\"\nimport { useEffect, useRef } from \"react\"\nimport { useSelector } from \"react-redux\"\nimport * as snd from \"../../features/activeSound/activeSoundSlice\"\nimport {\n  restartAudioContext,\n  audioNodes,\n  AUDIO_CONTEXT_DESTINATION,\n  applyParams,\n  audioContext,\n} from \"../../scripts/audio\"\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\"\nimport { WidgetRows } from \"../../styled\"\n\ntype AudioSource = {\n  sourceId: string\n  audioNode?: AudioScheduledSourceNode\n  targetAudioNode: AudioNode\n}\n\nexport default () => {\n  const playFrequency = useSelector(snd.selectPlayFrequency)\n  const biquadFilter = useSelector(snd.selectBiquadFilter)\n  const oscillator = useSelector(snd.selectOscillator)\n  const analyser = useSelector(snd.selectAnalyser)\n  const gain = useSelector(snd.selectGain)\n  const biquadFilters = useSelector(snd.selectBiquadFilters)\n  const oscillators = useSelector(snd.selectOscillators)\n  const analysers = useSelector(snd.selectAnalysers)\n  const gains = useSelector(snd.selectGains)\n  const playDelay = useRef(0.1)\n  const restarting = useRef(false)\n  const latency = useRef(0)\n\n  const play = (frequency: number) => {\n    const t = audioContext.currentTime + playDelay.current\n    let audioNode\n    let produced\n\n    gains.forEach(node => {\n      audioNode = audioNodes.get(node.id)\n      if (audioNode === undefined) throw new Error(\"No Gain (for apply params)\")\n      produced = gain(node.id) as snd.Gain\n      if (produced === undefined) throw new Error(\"No produced Gain (for apply params)\")\n      applyParams(audioNode, produced.params, t)\n    })\n\n    biquadFilters.forEach(node => {\n      audioNode = audioNodes.get(node.id)\n      if (audioNode === undefined) throw new Error(\"No BiquadFilter (for apply params)\")\n      produced = biquadFilter(node.id) as snd.BiquadFilter\n      if (produced === undefined) throw new Error(\"No produced BiquadFilter (for apply params)\")\n      applyParams(audioNode, produced.params, t)\n    })\n\n    oscillators.forEach(node => {\n      const produced = oscillator(node.id) as snd.Oscillator\n      if (produced === undefined) throw new Error(\"No Oscillator (play error!)\")\n      const audioNode = audioContext.createOscillator() as OscillatorNode\n      audioNode.type = produced.type\n      audioNode.frequency.setValueAtTime(frequency, 0)\n      applyParams(audioNode, produced.params, t)\n      node.connectIds.forEach(\n        toId =>\n          void audioNode.connect(\n            toId === AUDIO_CONTEXT_DESTINATION ? audioContext.destination : audioNodes.get(toId)!\n          )\n      )\n      audioNodes.set(node.id, audioNode)\n      audioNode.start(t)\n    })\n  }\n\n  const stop = () => {\n    oscillators.forEach(node => {\n      const audioNode = audioNodes.get(node.id) as AudioScheduledSourceNode\n      if (audioNode === undefined) {\n        toast.error(`${node.id} source node is missing for stop`)\n        return\n      }\n      audioNode.stop()\n      audioNode.disconnect()\n      audioNodes.delete(node.id)\n    })\n  }\n\n  useEffect(() => {\n    if (playFrequency !== null) {\n      console.time(\"play\")\n      const t = Date.now()\n      try {\n        play(playFrequency)\n      } catch (e) {\n        toast.error(e.message)\n      }\n      console.timeEnd(\"play\")\n      latency.current = Date.now() - t\n\n      return () => stop()\n    }\n  }, [playFrequency])\n\n  const reloadAudio = async () => {\n    toast.info(\"Restart Audio Context\")\n    await restartAudioContext()\n    audioNodes.clear()\n    let produced\n    let audioNode\n\n    // Create AudioNodes\n    gains.forEach(node => {\n      produced = gain(node.id) as snd.Gain\n      if (produced === undefined) throw new Error(\"No Gain (waiting for audio graph)\")\n      audioNode = audioContext.createGain()\n      audioNodes.set(node.id, audioNode)\n    })\n    analysers.forEach(node => {\n      produced = analyser(node.id) as snd.Analyser\n      if (produced === undefined) throw new Error(\"No Analyser (waiting for audio graph)\")\n      audioNode = audioContext.createAnalyser()\n      audioNode.fftSize = produced.fftSize\n      audioNodes.set(node.id, audioNode)\n    })\n    biquadFilters.forEach(node => {\n      produced = biquadFilter(node.id) as snd.BiquadFilter\n      if (produced === undefined) throw new Error(\"No BiquadFilter (waiting for audio graph)\")\n      audioNode = audioContext.createBiquadFilter()\n      audioNode.type = produced.type\n      audioNodes.set(node.id, audioNode)\n    })\n\n    // Connect AudioNodes\n    ;[...gains, ...analysers, ...biquadFilters].forEach(({ id, connectIds }) => {\n      connectIds.forEach(toId => {\n        const fromNode = audioNodes.get(id)\n        if (!fromNode) {\n          toast.error(`${id} audio node not found for from connect`)\n          return\n        }\n        const toNode =\n          toId === AUDIO_CONTEXT_DESTINATION ? audioContext.destination : audioNodes.get(toId)\n        if (!toNode) {\n          toast.error(`${toId} audio node not found for to connect`)\n          return\n        }\n        fromNode.connect(\n          toId === AUDIO_CONTEXT_DESTINATION ? audioContext.destination : audioNodes.get(toId)!\n        )\n      })\n    })\n  }\n\n  useEffect(() => {\n    if (!restarting.current) {\n      restarting.current = true\n      ;(async () => {\n        try {\n          await reloadAudio()\n          restarting.current = false\n        } catch (e) {\n          toast.error(e.message)\n        }\n      })()\n    }\n  }, [biquadFilters, oscillators, analysers, gains])\n\n  return (\n    <WidgetRows>\n      <button onClick={() => reloadAudio()} css={{ position: \"relative\" }}>\n        <FontAwesomeIcon\n          fixedWidth\n          icon={[\"fad\", \"sync\"]}\n          size=\"lg\"\n          css={{ position: \"absolute\", top: 4, right: 6 }}\n        />\n        Force Reload Audio Context\n      </button>\n\n      <div>\n        <div>\n          <label htmlFor=\"playDelayInput\">Play delay:</label>\n          <output name=\"pd\" htmlFor=\"playDelayInput\"></output>\n        </div>\n        <input\n          id=\"playDelayInput\"\n          type=\"number\"\n          min={0}\n          max={1}\n          step={0.01}\n          defaultValue={playDelay.current}\n          onChange={event => {\n            playDelay.current = event.currentTarget.valueAsNumber\n          }}\n        />\n      </div>\n      <div>\n        <div>Setup for Play:</div>\n        <div>\n          <strong>{latency.current}ms</strong>.\n        </div>\n      </div>\n    </WidgetRows>\n  )\n}\n","import styled from \"@emotion/styled\"\nimport React, { useRef } from \"react\"\nimport { useDispatch } from \"react-redux\"\nimport { setPlayFrequency } from \"../../features/activeSound/activeSoundSlice\"\n\nconst PianoWrapper = styled.div`\n  display: flex;\n  align-items: center;\n  font-size: 3rem;\n  justify-content: center;\n  user-select: none;\n  padding-bottom: 0.5rem;\n\n  > div {\n    flex: 1;\n    position: relative;\n    height: 150px;\n    margin: 0 1px;\n    border: 1px solid #999;\n    border-radius: 1px 1px 5px 5px;\n    box-shadow: 2px 2px 5px #0006;\n    cursor: pointer;\n    background-color: #aaa;\n    &:hover {\n      background-color: #999;\n    }\n    &:active {\n      background-color: #888;\n    }\n    &::after {\n      position: absolute;\n      bottom: 0.3rem;\n      width: 100%;\n      text-align: center;\n      content: attr(data-note);\n      font: 500 1.6rem Candara;\n      color: #121212;\n    }\n  }\n\n  > div > div {\n    position: absolute;\n    top: -1px;\n    left: 70%;\n    height: 105px;\n    width: calc(60% + 2px);\n    border-radius: 1px 1px 5px 5px;\n    box-shadow: 2px 2px 5px #0006;\n    cursor: pointer;\n    z-index: 10;\n    background-color: #000;\n    &:hover {\n      background-color: #111;\n    }\n    &:active {\n      background-color: #222;\n    }\n  }\n`\n\nconst Piano = () => {\n  const dispatch = useDispatch()\n  const lastFrequency = useRef<number | null>(null)\n\n  const play = (event: React.MouseEvent<HTMLDivElement, MouseEvent>) => {\n    if (event.buttons === 1) {\n      const data = (event.target as HTMLElement).getAttribute(\"data-frequency\")\n      const frequency = data !== null ? +data : null\n      if (lastFrequency.current !== frequency) {\n        dispatch(setPlayFrequency(data !== null ? +data : null))\n        lastFrequency.current = frequency\n      }\n    }\n  }\n\n  const stop = () => {\n    if (lastFrequency.current !== null) {\n      dispatch(setPlayFrequency(null))\n      lastFrequency.current = null\n    }\n  }\n\n  return (\n    <PianoWrapper onMouseDown={play} onMouseMove={play} onMouseUp={stop} onMouseOut={stop}>\n      <div data-frequency=\"261.626\" data-note=\"C\">\n        <div data-frequency=\"277.18\" data-note=\"C#\"></div>\n      </div>\n      <div data-frequency=\"293.665\" data-note=\"D\">\n        <div data-frequency=\"311.127\"></div>\n      </div>\n      <div data-frequency=\"329.628\" data-note=\"E\"></div>\n      <div data-frequency=\"349.228\" data-note=\"F\">\n        <div data-frequency=\"369.994\"></div>\n      </div>\n      <div data-frequency=\"391.995\" data-note=\"G\">\n        <div data-frequency=\"415.305\"></div>\n      </div>\n      <div data-frequency=\"440.000\" data-note=\"A\">\n        <div data-frequency=\"466.164\"></div>\n      </div>\n      <div data-frequency=\"493.883\" data-note=\"B\"></div>\n      <div data-frequency=\"523.251\" data-note=\"C\">\n        <div data-frequency=\"554.365\"></div>\n      </div>\n      <div data-frequency=\"587.330\" data-note=\"D\">\n        <div data-frequency=\"622.254\"></div>\n      </div>\n      <div data-frequency=\"659.255\" data-note=\"E\"></div>\n      <div data-frequency=\"698.457\" data-note=\"F\">\n        <div data-frequency=\"739.989\"></div>\n      </div>\n      <div data-frequency=\"783.991\" data-note=\"G\">\n        <div data-frequency=\"830.609\"></div>\n      </div>\n      <div data-frequency=\"880.000\" data-note=\"A\">\n        <div data-frequency=\"932.328\"></div>\n      </div>\n      <div data-frequency=\"987.767\" data-note=\"B\"></div>\n      <div data-frequency=\"1046.50\" data-note=\"C\"></div>\n    </PianoWrapper>\n  )\n}\n\nexport default Piano\n","/** @jsx jsx */\nimport { jsx, css } from \"@emotion/core\"\n\nexport default () => {\n  return (\n    <div\n      className=\"brand\"\n      css={css`\n        text-align: center;\n        font-family: Tomorrow;\n        padding: 2px;\n        opacity: 0.25;\n        transition: 100ms;\n        &:hover {\n          opacity: 1;\n          transition: 3s;\n          transition-timing-function: steps(6, end);\n        }\n      `}\n    >\n      <h1 css={{ fontSize: \"2rem\", margin: 0, color: \"#f2f4f7\" }}>\n        WAA\n        <span\n          css={{ fontFamily: \"Roboto\", fontSize: \"2.2rem\", position: \"relative\", lineHeight: 0 }}\n        >\n          π\n        </span>\n        Synth\n        <span css={{ marginLeft: 4, fontSize: \"0.8rem\", color: \"#d9dbde\" }}>\n          v{process.env.REACT_APP_VERSION}\n        </span>\n      </h1>\n    </div>\n  )\n}\n","/** @jsx jsx */\nimport { jsx } from \"@emotion/core\"\nimport { toast } from \"react-toastify\"\nimport { useDispatch } from \"react-redux\"\nimport { useRef, useEffect, useState, ChangeEvent } from \"react\"\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\"\nimport { setLoadElements } from \"../../features/ux/uxSlice\"\nimport {\n  setName,\n  setGains,\n  setAnalysers,\n  setOscillators,\n  setBiquadFilters,\n} from \"../../features/activeSound/activeSoundSlice\"\nimport { validateSound } from \"../../scripts/helpers\"\nimport { IconButton } from \"../../styled\"\n\nconst retreiveNames = () =>\n  Object.keys(localStorage).filter(name => {\n    let obj\n    try {\n      obj = JSON.parse(localStorage[name])\n    } catch {\n      return false\n    }\n    return validateSound(obj)\n  })\n\nexport default () => {\n  const dispatch = useDispatch()\n  const [names, setNames] = useState<string[]>([])\n  const select = useRef<HTMLSelectElement>(null)\n\n  useEffect(() => {\n    setNames(retreiveNames())\n  }, [])\n\n  const load = (event: ChangeEvent<HTMLSelectElement>) => {\n    const name = event.currentTarget.value\n    select.current!.value = \"\"\n    const data = localStorage.getItem(name)\n    if (data) {\n      const obj = JSON.parse(data)\n      if (validateSound(obj)) {\n        console.log(\"!ANAL\", obj.analysers)\n        dispatch(setAnalysers(obj.analysers))\n        dispatch(setGains(obj.gains))\n        dispatch(setBiquadFilters(obj.biquadFilters))\n        dispatch(setOscillators(obj.oscillators))\n        dispatch(setLoadElements(obj.elements))\n        dispatch(setName(name))\n        toast.success(`Sound \"${name}\" loaded`)\n        return\n      }\n    }\n    toast.error(`Error loading \"${name}\" sound`)\n  }\n\n  return (\n    <div>\n      {/* @ts-ignore */}\n      <select as=\"select\" ref={select} onChange={load}>\n        <option value=\"\">--- Please, Select ---</option>\n        {names.map(name => (\n          <option key={name} value={name}>\n            {name}\n          </option>\n        ))}\n      </select>\n      <IconButton onClick={() => setNames(retreiveNames())}>\n        <FontAwesomeIcon icon={[\"fad\", \"folder-open\"]} fixedWidth size=\"lg\" />\n      </IconButton>\n    </div>\n  )\n}\n","/** @jsx jsx */\nimport { jsx } from \"@emotion/core\"\nimport { toast } from \"react-toastify\"\nimport { useSelector, useDispatch } from \"react-redux\"\nimport { useStoreState, Elements } from \"react-flow-renderer\"\nimport { useRef, useEffect } from \"react\"\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\"\nimport { setName, selectName, selectAudioNodes } from \"../../features/activeSound/activeSoundSlice\"\nimport { IconButton } from \"../../styled\"\n\nexport default () => {\n  const dispatch = useDispatch()\n  const name = useSelector(selectName)\n  const input = useRef<HTMLInputElement>(null)\n  const audioNodes = useSelector(selectAudioNodes)\n  const elements = useStoreState(store => store.elements)\n\n  useEffect(() => {\n    input.current!.value = name\n  }, [name])\n\n  const save = () => {\n    const elems = elements.map((element: any) => {\n      if (element.__rf !== undefined) {\n        if (element.__rf.position !== undefined) {\n          element.position = element.__rf.position\n        }\n        delete element.__rf\n      }\n      return element\n    }) as Elements\n    try {\n      localStorage.setItem(name, JSON.stringify({ elements: elems, ...audioNodes }))\n      toast.success(`Sound \"${name}\" saved`)\n    } catch (e) {\n      toast.error(e.message)\n    }\n  }\n\n  return (\n    <div>\n      <input\n        ref={input}\n        type=\"text\"\n        defaultValue={name}\n        onChange={event => dispatch(setName(event.target.value))}\n        onFocus={event => event.target.select()}\n      />\n      <IconButton onClick={save}>\n        <FontAwesomeIcon icon={[\"fad\", \"save\"]} fixedWidth size=\"lg\" />\n      </IconButton>\n    </div>\n  )\n}\n","/** @jsx jsx */\nimport { jsx } from \"@emotion/core\"\nimport { HotKeys } from \"react-hotkeys\"\nimport { useDispatch, useSelector } from \"react-redux\"\nimport { ToastContainer, toast } from \"react-toastify\"\nimport { ReactFlowProvider } from \"react-flow-renderer\"\nimport { toggleEditMode, toggleDelSelected, selectSideLeft } from \"./features/ux/uxSlice\"\nimport AudioGraph from \"./components/graph/AudioGraph\"\nimport MenuOpener from \"./components/side/MenuOpener\"\nimport Analysers2D from \"./components/side/Analysers2D\"\nimport { Main, SideBar, WidgetRows } from \"./styled\"\nimport Audio from \"./components/side/Audio\"\nimport Piano from \"./components/side/Piano\"\nimport Brand from \"./components/side/Brand\"\nimport Load from \"./components/side/Load\"\nimport Save from \"./components/side/Save\"\n\nconst keyMap = {\n  TOGGLE_EDIT_MODE: \"m\",\n  DEL_SELECTED: \"del\",\n}\n\nexport default function App() {\n  const dispatch = useDispatch()\n  const sideLeft = useSelector(selectSideLeft)\n  const handlers = {\n    TOGGLE_EDIT_MODE: (event?: KeyboardEvent) => dispatch(toggleEditMode()),\n    DEL_SELECTED: (event?: KeyboardEvent) => dispatch(toggleDelSelected()),\n  }\n\n  return (\n    <ReactFlowProvider>\n      <HotKeys keyMap={keyMap} handlers={handlers}>\n        <Main className={sideLeft ? \"rev\" : \"\"}>\n          <AudioGraph />\n          <SideBar>\n            <Brand />\n            <MenuOpener />\n            <WidgetRows>\n              <Load />\n              <Save />\n            </WidgetRows>\n            <Audio />\n            <Analysers2D />\n            <Piano />\n          </SideBar>\n        </Main>\n        <ToastContainer\n          position={sideLeft ? toast.POSITION.TOP_RIGHT : toast.POSITION.TOP_LEFT}\n          autoClose={3000}\n        />\n      </HotKeys>\n    </ReactFlowProvider>\n  )\n}\n","import ReactDOM from \"react-dom\"\nimport { Provider } from \"react-redux\"\nimport React, { Fragment } from \"react\"\nimport { Global } from \"@emotion/core\"\n// import * as serviceWorker from \"./serviceWorker\"\nimport { fal } from \"@fortawesome/pro-light-svg-icons\"\nimport { fas } from \"@fortawesome/pro-solid-svg-icons\"\nimport { fab } from \"@fortawesome/free-brands-svg-icons\"\nimport { fad } from \"@fortawesome/pro-duotone-svg-icons\"\nimport { far } from \"@fortawesome/pro-regular-svg-icons\"\nimport { library } from \"@fortawesome/fontawesome-svg-core\"\nimport \"react-toastify/dist/ReactToastify.css\"\nimport { globalStyles } from \"./styled\"\nimport store from \"./store\"\nimport App from \"./App\"\n\n//TODO: collect icons and check sizes https://fontawesome.com/how-to-use/on-the-web/using-with/react#using\nlibrary.add(fab, fad, fal, far, fas)\n\nReactDOM.render(\n  // <React.StrictMode>\n  <Fragment>\n    <Global styles={globalStyles} />\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </Fragment>,\n  // </React.StrictMode>,\n  document.getElementById(\"root\")\n)\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n// serviceWorker.unregister()\n"],"sourceRoot":""}