{"version":3,"sources":["scripts/audio.ts","components/graph/nodeform.tsx","components/graph/nodes/HandleOutputs.tsx","components/graph/nodes/HandleInputs.tsx","components/graph/nodes/Analyser.tsx","features/activeSound/activeSoundSlice.ts","features/sounds/soundsSlice.ts","features/ux/uxSlice.ts","store.ts","components/styled.tsx","hooks/useAudioParamKeys.ts","components/graph/nodes/AudioParamDefaults.tsx","components/graph/nodes/AudioParamForm.tsx","components/graph/nodes/AudioParams.tsx","components/graph/nodes/Oscillator.tsx","components/graph/nodes/Gain.tsx","components/graph/nodes/BiquadFilter.tsx","scripts/utils.ts","components/graph/buttons.tsx","components/graph/AudioGraph.tsx","components/side/AnalyserView.tsx","components/header/HeaderWrapper.tsx","components/header/Menu.tsx","components/header/MenuOpener.tsx","components/header/Brand.tsx","components/header/Name.tsx","components/header/Save.tsx","components/header/Load.tsx","components/header/Header.tsx","components/side/Piano.tsx","ErrorBoundary.ts","App.tsx","index.tsx"],"names":["audioContext","window","AudioContext","webkitAudioContext","nodes","destination","Map","connectNodes","source","target","get","connect","setNode","id","audioNode","set","delNode","node","disconnect","delete","applyParams","params","forEach","param","values","includes","call","currentTime","name","Title","styled","div","FormWrapper","Label","label","Hr","hr","AddButton","button","DelButton","numberOfOutputs","onConnect","Array","fill","map","_value","index","key","type","position","Position","Bottom","style","left","background","numberOfInputs","Top","fftSizes","memo","useRef","createAnalyser","dispatch","useDispatch","analyser","useSelector","selectAnalyser","fftSize","color","lineWidth","useEffect","current","setAnalyser","delAnalyser","HandleInputs","css","float","value","onChange","event","currentTarget","fft","min","valueAsNumber","HandleOutputs","activeSoundSlice","createSlice","initialState","playFrequency","analysers","gains","biquadFilters","oscillators","reducers","setName","state","payload","setPlayFrequency","setAnalysers","findIndex","push","filter","setGains","setGain","delGain","setBiquadFilters","setBiquadFilter","delBiquadFilter","setOscillators","setOscillator","delOscillator","selectName","activeSound","selectPlayFrequency","selectAudioNodes","find","selectAnalysers","selectGain","selectBiquadFilter","selectOscillator","actions","soundsSlice","addSound","action","description","uxSlice","menu","loadElements","toggleMenu","setLoadElements","selectMenu","ux","selectLoadElements","store","configureStore","reducer","sounds","Main","EditorWrapper","Object","keys","constructor","prototype","AudioParam","defP","audioParams","useAudioParamKeys","defaultValue","minValue","Number","MIN_SAFE_INTEGER","toFixed","maxValue","MAX_SAFE_INTEGER","paramRow","audioParamCalls","nth","setNumber","getAttribute","val","currValues","getNumber","width","data-nth","isArray","join","toString","split","setParams","AudioParamForm","newParam","currParams","undefined","paramChange","onClick","splice","delParam","types","fakeOscForData","createOscillator","oscillator","useState","setTarget","edges","useStoreState","edge","length","osc","onended","Error","oscillatorFactory","frequency","setValueAtTime","start","changeType","AudioParamDefaults","typeVal","checked","AudioParams","createGain","gain","createBiquadFilter","biquadFilter","columnCount","randomBetween","max","Math","random","newNodePosition","canvasWidth","canvasHeight","bottom","halfHeight","x","y","GraphButton","icon","children","className","fixedWidth","GraphButtons","audioNodeTypes","props","fourth","third","second","Oscillator","Gain","biquadfilter","BiquadFilter","Analyser","defaultNode","selectable","connectable","data","backgroundColor","checkSize","prev","next","NodeGraph","height","elements","setElements","selected","nextId","connection","els","addEdge","clear","nodeElems","el","isNode","setTimeout","isEdge","sort","a","b","addAudioNode","nodeTypes","onSelectionChange","connectionLineStyle","stroke","snapToGrid","snapGrid","showInteractive","variant","BackgroundVariant","Lines","gap","disconnectNodes","removeElements","canvas","ctx","getContext","dimensions","getComputedStyle","getPropertyValue","slice","dpi","devicePixelRatio","setAttribute","dpiFix","draw","clearRect","drawWave","requestAnimationFrame","strokeStyle","bufferLength","frequencyBinCount","Float32Array","getFloatTimeDomainData","sliceWidth","beginPath","moveTo","i","lineTo","ref","HeaderWrapper","menuWrapper","Menu","onMouseLeave","textAlign","lineHeight","fontSize","paddingLeft","href","rel","localStorage","setItem","JSON","stringify","Kick","HiHat","MenuOpener","timer","size","onMouseEnter","clearTimeout","Brand","display","alignItems","margin","process","Name","input","onFocus","select","audioNodes","element","__rf","names","setNames","marginRight","getItem","obj","parse","requiredKeys","validate","onMouseOver","Header","Load","Save","pianoStyle","PianoWrapper","Piano","onMouseDown","onMouseUp","data-frequency","data-note","ErrorBoundary","error","errorInfo","hasError","console","log","alert","this","setState","Component","App","AudioGraph","library","add","fab","fad","fal","far","fas","ReactDOM","render","styles","document","getElementById"],"mappings":"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","file":"static/js/main.e83d75d0.chunk.js","sourcesContent":["import { ElementId } from \"react-flow-renderer\"\nimport { AudioParamSetting } from \"../components/graph/nodes/AudioParamForm\"\n\n// @ts-ignore\nexport const audioContext = new (window.AudioContext || window.webkitAudioContext)()\n\nexport const destination = audioContext.destination\n\nexport const nodes = new Map<string, AudioNode>()\n\nexport const AUDIO_CONTEXT_DESTINATION = \"destination\"\n\nexport const connectNodes = (source: ElementId, target: ElementId) => {\n  if (target === AUDIO_CONTEXT_DESTINATION) {\n    nodes.get(source)?.connect(audioContext.destination)\n  } else {\n    const destination = nodes.get(target)\n    if (destination) nodes.get(source)?.connect(destination)\n  }\n}\n\nexport const disconnectNodes = (source: string, target: string) => {\n  if (target === AUDIO_CONTEXT_DESTINATION) {\n    nodes.get(source)?.disconnect()\n  } else {\n    const destination = nodes.get(target)\n    if (destination) nodes.get(source)?.disconnect(destination)\n  }\n}\n\nexport const setNode = (id: string, audioNode: AudioNode) => {\n  nodes.set(id, audioNode)\n}\n\nexport const delNode = (id: string) => {\n  const node = nodes.get(id)\n  node?.disconnect()\n  nodes.delete(id)\n}\n\nexport const applyParams = (node: AudioNode, params: AudioParamSetting[]) => {\n  params.forEach(param => {\n    const values = [...param.values]\n    if (\n      [\n        \"setValueAtTime\",\n        \"linearRampToValueAtTime\",\n        \"exponentialRampToValueAtTime\",\n        \"setTargetAtTime\",\n        \"setValueCurveAtTime\",\n      ].includes(param.call)\n    ) {\n      // @ts-ignore\n      values[1] += audioContext.currentTime\n    }\n    if ([\"cancelScheduledValues\", \"cancelAndHoldAtTime\"].includes(param.call)) {\n      // @ts-ignore\n      values[0] += audioContext.currentTime\n    }\n\n    // @ts-ignore\n    node[param.name][param.call](...values)\n  })\n}\n","import styled from \"@emotion/styled\"\n\nexport const Title = styled.div`\n  text-align: center;\n`\n\nexport const FormWrapper = styled.div`\n  padding: 8px;\n  margin: 8px 0;\n  background-color: #364156;\n`\n\nexport const Label = styled.label`\n  display: block;\n  font-size: 0.8rem;\n  text-transform: capitalize;\n  input[type=\"number\"] {\n    display: block;\n    margin-top: 2px;\n    background-color: rgba(255, 255, 255, 0.7);\n    border-width: 1px;\n    padding: 1px 0 1px 4px;\n  }\n  > :not(:last-child) {\n    margin-bottom: 12px;\n  }\n`\n\nexport const Hr = styled.hr`\n  margin: 10px 0 6px 0;\n  border: 0;\n  border-bottom: 2px ridge #212d40;\n`\n\nexport const AddButton = styled.button`\n  border: 0;\n  background: transparent;\n  color: #0c0;\n  font-size: 0.7rem;\n  padding: 0 8px;\n`\n\nexport const DelButton = styled.button`\n  border: 0;\n  background: transparent;\n  color: #f33;\n  font-size: 0.7rem;\n  padding: 0;\n`\n","/** @jsx jsx */\nimport { Fragment } from \"react\"\nimport { jsx } from \"@emotion/core\"\nimport { Handle, Position, OnConnectFunc } from \"react-flow-renderer\"\n\ntype Props = {\n  numberOfOutputs: number\n  onConnect?: OnConnectFunc\n}\n\nexport default ({ numberOfOutputs, onConnect }: Props) => (\n  <Fragment>\n    {new Array(numberOfOutputs).fill(0).map((_value, index) => (\n      <Handle\n        key={`output${index}`}\n        type=\"source\"\n        position={Position.Bottom}\n        style={{ left: `${(100 / (numberOfOutputs + 1)) * (index + 1)}%`, background: \"#B0BF1A\" }}\n        onConnect={onConnect}\n      />\n    ))}\n  </Fragment>\n)\n","/** @jsx jsx */\nimport { Fragment } from \"react\"\nimport { jsx } from \"@emotion/core\"\nimport { Handle, Position, OnConnectFunc } from \"react-flow-renderer\"\n\ntype Props = {\n  numberOfInputs: number\n  onConnect?: OnConnectFunc\n}\n\nexport default ({ numberOfInputs, onConnect }: Props) => (\n  <Fragment>\n    {new Array(numberOfInputs).fill(0).map((_value, index) => (\n      <Handle\n        key={`input${index}`}\n        type=\"target\"\n        position={Position.Top}\n        style={{ left: `${(100 / (numberOfInputs + 1)) * (index + 1)}%`, background: \"#fff6\" }}\n        onConnect={onConnect}\n      />\n    ))}\n  </Fragment>\n)\n","/** @jsx jsx */\nimport { jsx } from \"@emotion/core\"\nimport { useDispatch, useSelector } from \"react-redux\"\nimport { NodeComponentProps } from \"react-flow-renderer\"\nimport { memo, useRef, useEffect, Fragment } from \"react\"\nimport {\n  setAnalyser,\n  delAnalyser,\n  selectAnalyser,\n  Analyser,\n} from \"../../../features/activeSound/activeSoundSlice\"\nimport { audioContext, setNode, delNode } from \"../../../scripts/audio\"\nimport { Title, FormWrapper } from \"../nodeform\"\nimport HandleOutputs from \"./HandleOutputs\"\nimport HandleInputs from \"./HandleInputs\"\nimport { Label } from \"../nodeform\"\n\nconst fftSizes = [32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768] as const\nexport type FFTSize = typeof fftSizes[number]\n\nexport default memo(({ id }: NodeComponentProps) => {\n  const node = useRef(audioContext.createAnalyser())\n  const dispatch = useDispatch()\n  const analyser: Analyser = useSelector(selectAnalyser)(id) || {\n    id,\n    fftSize: fftSizes[6],\n    color: \"#d66853\",\n    lineWidth: 2,\n  }\n\n  useEffect(() => {\n    setNode(id, node.current)\n    dispatch(setAnalyser(analyser))\n    return () => {\n      dispatch(delAnalyser(id))\n      delNode(id)\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [])\n\n  return (\n    <Fragment>\n      <HandleInputs numberOfInputs={node.current.numberOfInputs} />\n      <Title>Analyser #{id}</Title>\n      <FormWrapper>\n        <Label>\n          FFT Size\n          <select\n            css={{ float: \"right\" }}\n            value={analyser.fftSize}\n            onChange={event =>\n              dispatch(setAnalyser({ ...analyser, fftSize: +event.currentTarget.value as FFTSize }))\n            }\n          >\n            {fftSizes.map(fft => (\n              <option key={fft} value={fft}>\n                {fft}\n              </option>\n            ))}\n          </select>\n        </Label>\n        <Label>\n          Colour\n          <input\n            css={{ float: \"right\" }}\n            type=\"color\"\n            value={analyser.color}\n            onChange={event =>\n              dispatch(setAnalyser({ ...analyser, color: event.currentTarget.value }))\n            }\n          />\n        </Label>\n        <Label>\n          Line Width\n          <input\n            type=\"number\"\n            min={1}\n            value={analyser.lineWidth}\n            onChange={event =>\n              dispatch(setAnalyser({ ...analyser, lineWidth: event.currentTarget.valueAsNumber }))\n            }\n          />\n        </Label>\n      </FormWrapper>\n      <HandleOutputs numberOfOutputs={node.current.numberOfOutputs} />\n    </Fragment>\n  )\n})\n","import { createSlice, PayloadAction } from \"@reduxjs/toolkit\"\nimport Analyser, { FFTSize } from \"../../components/graph/nodes/Analyser\"\nimport { RootState } from \"../../store\"\nimport { AudioParamSetting } from \"../../components/graph/nodes/AudioParamForm\"\n\nexport type Analyser = {\n  id: string\n  fftSize: FFTSize\n  color: string\n  lineWidth: number\n}\n\nexport type Gain = {\n  id: string\n  params: AudioParamSetting[]\n}\n\nexport type BiquadFilter = {\n  id: string\n  type: BiquadFilterType\n  params: AudioParamSetting[]\n}\n\nexport type Oscillator = {\n  id: string\n  type: OscillatorType\n  params: AudioParamSetting[]\n}\n\ntype ActiveSound = {\n  name: string\n  playFrequency: number | null\n  analysers: Analyser[]\n  gains: Gain[]\n  biquadFilters: BiquadFilter[]\n  oscillators: Oscillator[]\n}\n\nconst initialState: ActiveSound = {\n  name: \"No Name\",\n  playFrequency: null,\n  analysers: [],\n  gains: [],\n  biquadFilters: [],\n  oscillators: [],\n}\n\nconst activeSoundSlice = createSlice({\n  name: \"activeSound\",\n  initialState,\n  reducers: {\n    setName: (state: ActiveSound, { payload }: PayloadAction<string>) => {\n      state.name = payload\n    },\n    setPlayFrequency: (state: ActiveSound, { payload }: PayloadAction<number | null>) => {\n      state.playFrequency = payload\n    },\n\n    setAnalysers: (state: ActiveSound, { payload }: PayloadAction<Analyser[]>) => {\n      state.analysers = payload\n    },\n    setAnalyser: (state: ActiveSound, { payload }: PayloadAction<Analyser>) => {\n      const index = state.analysers.findIndex(node => node.id === payload.id)\n      if (index === -1) {\n        state.analysers.push(payload)\n      } else {\n        state.analysers[index] = payload\n      }\n    },\n    delAnalyser: (state: ActiveSound, { payload }: PayloadAction<string>) => {\n      state.analysers = state.analysers.filter(node => node.id !== payload)\n    },\n\n    setGains: (state: ActiveSound, { payload }: PayloadAction<Gain[]>) => {\n      state.gains = payload\n    },\n    setGain: (state: ActiveSound, { payload }: PayloadAction<Gain>) => {\n      const index = state.gains.findIndex(node => node.id === payload.id)\n      if (index === -1) {\n        state.gains.push(payload)\n      } else {\n        state.gains[index] = payload\n      }\n    },\n    delGain: (state: ActiveSound, { payload }: PayloadAction<string>) => {\n      state.gains = state.gains.filter(node => node.id !== payload)\n    },\n\n    setBiquadFilters: (state: ActiveSound, { payload }: PayloadAction<BiquadFilter[]>) => {\n      state.biquadFilters = payload\n    },\n    setBiquadFilter: (state: ActiveSound, { payload }: PayloadAction<BiquadFilter>) => {\n      const index = state.biquadFilters.findIndex(node => node.id === payload.id)\n      if (index === -1) {\n        state.biquadFilters.push(payload)\n      } else {\n        state.biquadFilters[index] = payload\n      }\n    },\n    delBiquadFilter: (state: ActiveSound, { payload }: PayloadAction<string>) => {\n      state.biquadFilters = state.biquadFilters.filter(node => node.id !== payload)\n    },\n\n    setOscillators: (state: ActiveSound, { payload }: PayloadAction<Oscillator[]>) => {\n      state.oscillators = payload\n    },\n    setOscillator: (state: ActiveSound, { payload }: PayloadAction<Oscillator>) => {\n      const index = state.oscillators.findIndex(node => node.id === payload.id)\n      if (index === -1) {\n        state.oscillators.push(payload)\n      } else {\n        state.oscillators[index] = payload\n      }\n    },\n    delOscillator: (state: ActiveSound, { payload }: PayloadAction<string>) => {\n      state.oscillators = state.oscillators.filter(node => node.id !== payload)\n    },\n  },\n})\n\nexport const selectName = ({ activeSound }: RootState) => activeSound.name\nexport const selectPlayFrequency = ({ activeSound }: RootState) => activeSound.playFrequency\nexport const selectAudioNodes = ({ activeSound }: RootState) => ({\n  analysers: activeSound.analysers,\n  gains: activeSound.gains,\n  biquadFilters: activeSound.biquadFilters,\n  oscillators: activeSound.oscillators,\n})\n\nexport const selectAnalyser = ({ activeSound }: RootState) => (id: string) =>\n  activeSound.analysers.find(node => node.id === id)\nexport const selectAnalysers = ({ activeSound }: RootState) => activeSound.analysers\n\nexport const selectGain = ({ activeSound }: RootState) => (id: string) =>\n  activeSound.gains.find(node => node.id === id)\nexport const selectGains = ({ activeSound }: RootState) => activeSound.gains\n\nexport const selectBiquadFilter = ({ activeSound }: RootState) => (id: string) =>\n  activeSound.biquadFilters.find(node => node.id === id)\nexport const selectBiquadFilters = ({ activeSound }: RootState) => activeSound.biquadFilters\n\nexport const selectOscillator = ({ activeSound }: RootState) => (id: string) =>\n  activeSound.oscillators.find(node => node.id === id)\nexport const selectOscillators = ({ activeSound }: RootState) => activeSound.oscillators\n\nexport const {\n  setName,\n  setPlayFrequency,\n  setAnalysers,\n  setAnalyser,\n  delAnalyser,\n  setGains,\n  setGain,\n  delGain,\n  setBiquadFilters,\n  setBiquadFilter,\n  delBiquadFilter,\n  setOscillators,\n  setOscillator,\n  delOscillator,\n} = activeSoundSlice.actions\nexport default activeSoundSlice.reducer\n","import { createSlice, PayloadAction } from \"@reduxjs/toolkit\"\n\ntype Sound = {\n  name: string\n  description: string\n}\n\nconst soundsSlice = createSlice({\n  name: \"sounds\",\n  initialState: [],\n  reducers: {\n    addSound(state: Sound[], action: PayloadAction<Sound>) {\n      const { name, description } = action.payload\n      state.push({ name, description })\n    },\n  },\n})\n\nexport const { addSound } = soundsSlice.actions\n\nexport default soundsSlice.reducer\n","import { createSlice, PayloadAction } from \"@reduxjs/toolkit\"\nimport { Elements } from \"react-flow-renderer\"\nimport { RootState } from \"../../store\"\n\ntype UX = {\n  menu: boolean\n  /**\n   * Load _**React-Flow** Elements_ from local storage,\n   * `const setElements = useStoreActions(actions => actions.setElements)`\n   * in Load component somehow doesn't work.\n   */\n  loadElements: Elements | null\n}\n\nconst uxSlice = createSlice({\n  name: \"ux\",\n  initialState: {\n    menu: false,\n    loadElements: null,\n  } as UX,\n  reducers: {\n    toggleMenu: state => {\n      state.menu = !state.menu\n    },\n    setLoadElements: (state: UX, { payload }: PayloadAction<Elements | null>) => {\n      state.loadElements = payload\n    },\n  },\n})\n\nexport const selectMenu = ({ ux }: RootState) => ux.menu\nexport const selectLoadElements = ({ ux }: RootState) => ux.loadElements\nexport const { toggleMenu, setLoadElements } = uxSlice.actions\nexport default uxSlice.reducer\n","import { configureStore } from \"@reduxjs/toolkit\"\nimport activeSoundSlice from \"./features/activeSound/activeSoundSlice\"\nimport soundsSlice from \"./features/sounds/soundsSlice\"\nimport uxSlice from \"./features/ux/uxSlice\"\n\nconst store = configureStore({\n  reducer: {\n    activeSound: activeSoundSlice,\n    sounds: soundsSlice,\n    ux: uxSlice,\n  },\n})\n\nexport default store\nexport type RootState = ReturnType<typeof store.getState>\n","import styled from \"@emotion/styled\"\n\nexport const Main = styled.div`\n  width: 100vw;\n  height: 100vh;\n  margin: 0;\n  padding: 0;\n  display: flex;\n  flex-direction: column;\n  > div:nth-of-type(1) {\n    flex-grow: 0;\n  }\n  > div:nth-of-type(2) {\n    flex-grow: 1;\n  }\n`\n\nexport const EditorWrapper = styled.div`\n  height: max-content;\n  display: grid;\n  grid-template-columns: auto 450px;\n  grid-template-rows: 300px 200px auto;\n  grid-template-areas:\n    \"audionodes visual\"\n    \"audionodes piano\"\n    \"audionodes .\";\n\n  > :first-of-type {\n    grid-area: audionodes;\n  }\n  > canvas {\n    grid-area: visual !important;\n  }\n  > :last-of-type {\n    grid-area: piano;\n  }\n`\n","import { useRef } from \"react\"\n\nexport default (audioNode: AudioNode) => {\n  const keys = useRef(\n    Object.keys(audioNode.constructor.prototype).filter(\n      // @ts-ignore\n      key => audioNode[key].constructor === AudioParam\n    )\n  )\n\n  return keys.current\n}\n","/** @jsx jsx */\nimport { jsx, css } from \"@emotion/core\"\nimport { Fragment } from \"react\"\nimport useAudioParamKeys from \"../../../hooks/useAudioParamKeys\"\n\nconst defP = css`\n  margin: 4px 8px;\n  font-size: 0.9rem;\n  small {\n    margin-left: 8px;\n    font-size: 0.7rem;\n  }\n`\n\ntype Props = {\n  audioNode: AudioNode\n  keys?: string[]\n}\n\nexport default ({ audioNode, keys }: Props) => {\n  const audioParams = keys || useAudioParamKeys(audioNode)\n\n  return (\n    <Fragment>\n      {audioParams.map(key => {\n        // @ts-ignore\n        const param = audioNode[key] as AudioParam\n        return (\n          <p css={defP} key={key}>\n            {key}: {param.defaultValue}\n            <small>\n              {param.minValue <= Number.MIN_SAFE_INTEGER\n                ? \"∞\"\n                : param.minValue % 1 === 0\n                ? param.minValue\n                : param.minValue.toFixed(2)}{\" \"}\n              —{\" \"}\n              {param.maxValue >= Number.MAX_SAFE_INTEGER\n                ? \"∞\"\n                : param.maxValue % 1 === 0\n                ? param.maxValue\n                : param.maxValue.toFixed(2)}\n            </small>\n          </p>\n        )\n      })}\n    </Fragment>\n  )\n}\n","/** @jsx jsx */\nimport { jsx, css } from \"@emotion/core\"\nimport { Fragment, ChangeEvent } from \"react\"\nimport useAudioParamKeys from \"../../../hooks/useAudioParamKeys\"\n\nconst paramRow = css(css`\n  width: 100%;\n  display: flex;\n  /*justify-content: space-between;*/\n  label {\n    font-size: 0.8rem;\n    input {\n      width: 80px;\n    }\n  }\n`)\n\nconst audioParamCalls = [\n  \"setValueAtTime\",\n  \"linearRampToValueAtTime\",\n  \"exponentialRampToValueAtTime\",\n  \"setTargetAtTime\",\n  \"setValueCurveAtTime\",\n  \"cancelScheduledValues\",\n  \"cancelAndHoldAtTime\",\n] as const\n\ntype Call = typeof audioParamCalls[number]\ntype CallParams = (number | number[])[]\n\nexport type AudioParamSetting = {\n  name: string\n  call: Call\n  /** `call` values in order */\n  values: CallParams\n}\n\nexport type AudioParamUpdate = {\n  name?: string\n  call?: Call\n  /** `call` values in order */\n  values?: CallParams\n}\n\ntype Props = {\n  audioNode: AudioNode\n\n  name: string\n  call: Call\n  values: CallParams\n\n  onChange: (param: AudioParamUpdate) => void\n}\n\nexport default ({ audioNode, name, call, values, onChange }: Props) => {\n  const audioParams = useAudioParamKeys(audioNode)\n\n  const setNumber = (event: ChangeEvent<HTMLInputElement>) => {\n    const nth = +event.currentTarget.getAttribute(\"data-nth\")!\n    const val = +event.currentTarget.valueAsNumber\n    const currValues = [...values]\n    currValues[nth] = val\n    onChange({ values: currValues })\n  }\n\n  const setNumbers = (event: ChangeEvent<HTMLInputElement>) => {\n    const nth = +event.currentTarget.getAttribute(\"data-nth\")!\n    const val = event.currentTarget.value.split(\",\").map(value => +value)\n    const currValues = [...values]\n    currValues[nth] = val\n    onChange({ values: currValues })\n  }\n\n  const getNumber = (nth: number) => values[nth] as number\n  const getNumbers = (nth: number) => {\n    if (Array.isArray(values[nth])) {\n      return (values[nth] as number[]).join(\",\")\n    }\n    return values[nth].toString()\n  }\n\n  return (\n    <Fragment>\n      <div css={paramRow}>\n        <label>\n          Name\n          <br />\n          <select value={name} onChange={event => onChange({ name: event.currentTarget.value })}>\n            {audioParams.map(key => (\n              <option key={key} value={key}>\n                {key}\n              </option>\n            ))}\n          </select>\n        </label>\n        <label>\n          Call\n          <br />\n          <select\n            value={call}\n            onChange={event => onChange({ call: event.currentTarget.value as Call })}\n            css={{ width: 120 }}\n          >\n            {audioParamCalls.map(call => (\n              <option key={call} value={call}>\n                {call}\n              </option>\n            ))}\n          </select>\n        </label>\n      </div>\n\n      {[\"setValueAtTime\"].includes(call) && (\n        <div css={paramRow}>\n          <label>\n            value\n            <br />\n            <input type=\"number\" value={getNumber(0)} data-nth={0} onChange={setNumber} />\n          </label>\n          <label>\n            startTime (t+)\n            <br />\n            <input type=\"number\" value={getNumber(1)} data-nth={1} onChange={setNumber} />\n          </label>\n        </div>\n      )}\n\n      {[\"linearRampToValueAtTime\", \"exponentialRampToValueAtTime\"].includes(call) && (\n        <div css={paramRow}>\n          <label>\n            value\n            <br />\n            <input type=\"number\" value={getNumber(0)} data-nth={0} onChange={setNumber} />\n          </label>\n          <label>\n            endTime (t+)\n            <br />\n            <input type=\"number\" value={getNumber(1)} data-nth={1} onChange={setNumber} />\n          </label>\n        </div>\n      )}\n\n      {[\"setTargetAtTime\"].includes(call) && (\n        <div css={paramRow}>\n          <label>\n            value\n            <br />\n            <input type=\"number\" value={getNumber(0)} data-nth={0} onChange={setNumber} />\n          </label>\n          <label>\n            startTime (t+)\n            <br />\n            <input type=\"number\" value={getNumber(1)} data-nth={1} onChange={setNumber} />\n          </label>\n          <label>\n            timeConstant\n            <br />\n            <input type=\"number\" value={getNumber(2)} data-nth={2} onChange={setNumber} />\n          </label>\n        </div>\n      )}\n\n      {[\"setValueCurveAtTime\"].includes(call) && (\n        <div css={paramRow}>\n          <label>\n            values (, sep)\n            <br />\n            <input type=\"string\" value={getNumbers(0)} data-nth={0} onChange={setNumbers} />\n          </label>\n          <label>\n            startTime (t+)\n            <br />\n            <input type=\"number\" value={getNumber(1)} data-nth={1} onChange={setNumber} />\n          </label>\n          <label>\n            duration\n            <br />\n            <input type=\"number\" value={getNumber(2)} data-nth={2} onChange={setNumber} />\n          </label>\n        </div>\n      )}\n\n      {[\"cancelScheduledValues\"].includes(call) && (\n        <div css={paramRow}>\n          <label>\n            startTime (t+)\n            <br />\n            <input type=\"number\" value={getNumber(0)} data-nth={0} onChange={setNumber} />\n          </label>\n        </div>\n      )}\n\n      {[\"cancelAndHoldAtTime\"].includes(call) && (\n        <div css={paramRow}>\n          <label>\n            cancelTime (t+)\n            <br />\n            <input type=\"number\" value={getNumber(0)} data-nth={0} onChange={setNumber} />\n          </label>\n        </div>\n      )}\n    </Fragment>\n  )\n}\n","/** @jsx jsx */\nimport { jsx } from \"@emotion/core\"\nimport { Fragment } from \"react\"\nimport AudioParamForm, { AudioParamSetting, AudioParamUpdate } from \"./AudioParamForm\"\nimport { Hr, DelButton } from \"../nodeform\"\n\ntype Props = {\n  audioNode: AudioNode\n  params: AudioParamSetting[]\n  setParams: (params: AudioParamSetting[]) => void\n}\n\nexport default ({ audioNode, params, setParams }: Props) => {\n  const paramChange = (index: number, newParam: AudioParamUpdate) => {\n    const currParams = [...params]\n    if (newParam.call !== undefined) {\n      if (\n        [\"setValueAtTime\", \"linearRampToValueAtTime\", \"exponentialRampToValueAtTime\"].includes(\n          newParam.call\n        )\n      ) {\n        newParam.values = [0, 0]\n      }\n      if ([\"setTargetAtTime\"].includes(newParam.call)) {\n        newParam.values = [0, 0, 0]\n      }\n      if ([\"setValueCurveAtTime\"].includes(newParam.call)) {\n        newParam.values = [[0], 0, 0]\n      }\n      if ([\"cancelScheduledValues\", \"cancelAndHoldAtTime\"].includes(newParam.call)) {\n        newParam.values = [0]\n      }\n    }\n    currParams[index] = { ...currParams[index], ...newParam }\n    setParams(currParams)\n  }\n\n  const delParam = (index: number) => {\n    const currParams = [...params]\n    currParams.splice(index, 1)\n    setParams(currParams)\n  }\n\n  return (\n    <Fragment>\n      {params.map((param, index) => (\n        <div key={param.name + param.call + index}>\n          {index > 0 && <Hr />}\n          <AudioParamForm\n            audioNode={audioNode}\n            {...param}\n            onChange={newParam => paramChange(index, newParam)}\n          />\n          <DelButton onClick={() => delParam(index)}>- Remove Param Update</DelButton>\n        </div>\n      ))}\n    </Fragment>\n  )\n}\n","/* eslint-disable react-hooks/exhaustive-deps */\n/** @jsx jsx */\nimport { jsx } from \"@emotion/core\"\nimport { useSelector, useDispatch } from \"react-redux\"\nimport { memo, useState, useEffect, Fragment, useRef, ChangeEvent } from \"react\"\nimport { NodeComponentProps, ElementId, useStoreState, Edge } from \"react-flow-renderer\"\nimport { audioContext, setNode, connectNodes, applyParams } from \"../../../scripts/audio\"\nimport {\n  selectPlayFrequency,\n  setOscillator,\n  delOscillator,\n  selectOscillator,\n  Oscillator,\n} from \"../../../features/activeSound/activeSoundSlice\"\nimport useAudioParamKeys from \"../../../hooks/useAudioParamKeys\"\nimport { Title, FormWrapper, Hr, AddButton } from \"../nodeform\"\nimport AudioParamDefaults from \"./AudioParamDefaults\"\nimport { AudioParamSetting } from \"./AudioParamForm\"\nimport HandleOutputs from \"./HandleOutputs\"\nimport AudioParams from \"./AudioParams\"\nimport { Label } from \"../nodeform\"\n\nconst types: OscillatorType[] = [\"sine\", \"square\", \"sawtooth\", \"triangle\"]\n\nexport default memo(({ id }: NodeComponentProps) => {\n  const fakeOscForData = useRef(audioContext.createOscillator())\n  const node = useRef<OscillatorNode | null>(null)\n  const dispatch = useDispatch()\n  const oscillator: Oscillator = useSelector(selectOscillator)(id) || {\n    id,\n    type: types[0],\n    params: [],\n  }\n  const audioParams = useAudioParamKeys(audioContext.createOscillator())\n  const [target, setTarget] = useState<ElementId | null>(null)\n  const playFrequency = useSelector(selectPlayFrequency)\n  const edges = useStoreState(store => store.edges)\n\n  const oscillatorFactory = () => {\n    const osc = audioContext.createOscillator()\n    osc.type = oscillator.type\n    osc.onended = () => {\n      throw new Error(`Oscillator #{$id} ended.`)\n    }\n    setNode(id, osc)\n    if (target !== null) {\n      connectNodes(id, target)\n    }\n    return osc\n  }\n\n  useEffect(() => {\n    return () => void dispatch(delOscillator(id))\n  }, [])\n\n  useEffect(() => {\n    const edge: Edge | undefined = edges.find(edge => edge.source === id)\n    setTarget(edge?.target ?? null)\n  }, [edges.length])\n\n  useEffect(() => {\n    if (node.current !== null) {\n      node.current?.disconnect()\n      node.current = null\n    }\n    node.current = oscillatorFactory()\n    if (playFrequency !== null) {\n      node.current.frequency.setValueAtTime(playFrequency, audioContext.currentTime)\n      applyParams(node.current, oscillator.params)\n      node.current.start()\n    }\n  }, [playFrequency])\n\n  const changeType = (event: ChangeEvent<HTMLInputElement>) => {\n    dispatch(setOscillator({ ...oscillator, type: event.currentTarget.value as OscillatorType }))\n  }\n\n  const setParams = (params: AudioParamSetting[]) => {\n    dispatch(setOscillator({ ...oscillator, params }))\n  }\n\n  const addParam = () => {\n    const params = [...oscillator.params]\n    params.push({ name: audioParams[0], call: \"setValueAtTime\", values: [1, 0] })\n    setParams(params)\n  }\n\n  return (\n    <Fragment>\n      <Title>Oscillator #{id}</Title>\n      <AudioParamDefaults audioNode={fakeOscForData.current} keys={audioParams} />\n      {audioParams.length > 0 && <AddButton onClick={addParam}>+ Add Param Update</AddButton>}\n      <FormWrapper>\n        <Label>Type</Label>\n        {types.map(typeVal => (\n          <Label key={typeVal}>\n            <input\n              type=\"radio\"\n              defaultValue={typeVal}\n              checked={oscillator.type === typeVal}\n              onChange={changeType}\n            />\n            {typeVal}\n          </Label>\n        ))}\n        {oscillator.params.length > 0 && <Hr />}\n        <AudioParams\n          audioNode={fakeOscForData.current}\n          params={oscillator.params}\n          setParams={setParams}\n        />\n      </FormWrapper>\n      <HandleOutputs numberOfOutputs={fakeOscForData.current.numberOfOutputs} />\n    </Fragment>\n  )\n})\n","/** @jsx jsx */\nimport { jsx } from \"@emotion/core\"\nimport { useSelector, useDispatch } from \"react-redux\"\nimport { NodeComponentProps } from \"react-flow-renderer\"\nimport { memo, Fragment, useEffect, useRef } from \"react\"\nimport { audioContext, setNode, delNode, applyParams } from \"../../../scripts/audio\"\nimport {\n  selectPlayFrequency,\n  setGain,\n  delGain,\n  selectGain,\n  Gain,\n} from \"../../../features/activeSound/activeSoundSlice\"\nimport useAudioParamKeys from \"../../../hooks/useAudioParamKeys\"\nimport { Title, FormWrapper, AddButton } from \"../nodeform\"\nimport AudioParamDefaults from \"./AudioParamDefaults\"\nimport { AudioParamSetting } from \"./AudioParamForm\"\nimport HandleOutputs from \"./HandleOutputs\"\nimport HandleInputs from \"./HandleInputs\"\nimport AudioParams from \"./AudioParams\"\n\nexport default memo(({ id }: NodeComponentProps) => {\n  const node = useRef(audioContext.createGain())\n  const dispatch = useDispatch()\n  const gain: Gain = useSelector(selectGain)(id) || {\n    id,\n    params: [],\n  }\n  const audioParams = useAudioParamKeys(node.current)\n  const playFrequency = useSelector(selectPlayFrequency)\n\n  useEffect(() => {\n    setNode(id, node.current)\n    dispatch(setGain(gain))\n    return () => {\n      dispatch(delGain(id))\n      delNode(id)\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [])\n\n  useEffect(() => {\n    if (playFrequency !== null) {\n      applyParams(node.current, gain.params)\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [playFrequency])\n\n  const setParams = (params: AudioParamSetting[]) => {\n    dispatch(setGain({ ...gain, params }))\n  }\n\n  const addParam = () => {\n    const params = [...gain.params]\n    params.push({ name: audioParams[0], call: \"setValueAtTime\", values: [1, 0] })\n    setParams(params)\n  }\n\n  return (\n    <Fragment>\n      <HandleInputs numberOfInputs={node.current.numberOfInputs} />\n      <Title>Gain #{id}</Title>\n      <AudioParamDefaults audioNode={node.current} keys={audioParams} />\n      {audioParams.length > 0 && <AddButton onClick={addParam}>+ Add Param Update</AddButton>}\n      {gain.params.length > 0 && (\n        <FormWrapper>\n          <AudioParams audioNode={node.current} params={gain.params} setParams={setParams} />\n        </FormWrapper>\n      )}\n      <HandleOutputs numberOfOutputs={node.current.numberOfOutputs} />\n    </Fragment>\n  )\n})\n","/** @jsx jsx */\nimport { jsx } from \"@emotion/core\"\nimport { useSelector, useDispatch } from \"react-redux\"\nimport { NodeComponentProps } from \"react-flow-renderer\"\nimport { memo, useRef, useEffect, Fragment, ChangeEvent } from \"react\"\nimport {\n  selectPlayFrequency,\n  setBiquadFilter,\n  delBiquadFilter,\n  selectBiquadFilter,\n  BiquadFilter,\n} from \"../../../features/activeSound/activeSoundSlice\"\nimport { audioContext, applyParams, setNode, delNode } from \"../../../scripts/audio\"\nimport { Title, FormWrapper, Hr, AddButton } from \"../nodeform\"\nimport useAudioParamKeys from \"../../../hooks/useAudioParamKeys\"\nimport AudioParamDefaults from \"./AudioParamDefaults\"\nimport HandleOutputs from \"./HandleOutputs\"\nimport HandleInputs from \"./HandleInputs\"\nimport AudioParams from \"./AudioParams\"\nimport { Label } from \"../nodeform\"\nimport { AudioParamSetting } from \"./AudioParamForm\"\n\nconst types: BiquadFilterType[] = [\n  \"allpass\",\n  \"bandpass\",\n  \"highpass\",\n  \"highshelf\",\n  \"lowpass\",\n  \"lowshelf\",\n  \"notch\",\n  \"peaking\",\n]\n\nexport default memo(({ id }: NodeComponentProps) => {\n  const node = useRef(audioContext.createBiquadFilter())\n  const dispatch = useDispatch()\n  const biquadFilter: BiquadFilter = useSelector(selectBiquadFilter)(id) || {\n    id,\n    type: types[0],\n    params: [],\n  }\n  const audioParams = useAudioParamKeys(node.current)\n  const playFrequency = useSelector(selectPlayFrequency)\n\n  useEffect(() => {\n    setNode(id, node.current)\n    dispatch(setBiquadFilter(biquadFilter))\n    return () => {\n      dispatch(delBiquadFilter(id))\n      delNode(id)\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [])\n\n  useEffect(() => {\n    if (playFrequency !== null) {\n      applyParams(node.current, biquadFilter.params)\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [playFrequency])\n\n  const changeType = (event: ChangeEvent<HTMLInputElement>) => {\n    dispatch(\n      setBiquadFilter({ ...biquadFilter, type: event.currentTarget.value as BiquadFilterType })\n    )\n  }\n\n  const setParams = (params: AudioParamSetting[]) => {\n    dispatch(setBiquadFilter({ ...biquadFilter, params }))\n  }\n\n  const addParam = () => {\n    const params = [...biquadFilter.params]\n    params.push({ name: audioParams[0], call: \"setValueAtTime\", values: [1, 0] })\n    setParams(params)\n  }\n\n  return (\n    <Fragment>\n      <HandleInputs numberOfInputs={node.current.numberOfInputs} />\n      <Title>Biquad Filter #{id}</Title>\n      <AudioParamDefaults audioNode={node.current} keys={audioParams} />\n      {audioParams.length > 0 && <AddButton onClick={addParam}>+ Add Param Update</AddButton>}\n      <FormWrapper>\n        <Label>Type</Label>\n        <div css={{ columnCount: 2 }}>\n          {types.map(typeVal => (\n            <Label key={typeVal}>\n              <input\n                type=\"radio\"\n                defaultValue={typeVal}\n                checked={biquadFilter.type === typeVal}\n                onChange={changeType}\n              />\n              {typeVal}\n            </Label>\n          ))}\n        </div>\n        {biquadFilter.params.length > 0 && <Hr />}\n        <AudioParams audioNode={node.current} params={biquadFilter.params} setParams={setParams} />\n      </FormWrapper>\n      <HandleOutputs numberOfOutputs={node.current.numberOfOutputs} />\n    </Fragment>\n  )\n})\n","import { XYPosition } from \"react-flow-renderer\"\n\n/**\n * Random number between:\n * @param min (included)\n * @param max (not included)\n */\nexport const randomBetween = (min: number, max: number) => Math.random() * (max - min) + min\n\n/**\n * Find appropriate position for the coming node.\n * @param canvasWidth Audio graph canvas width\n * @param canvasHeight Audio graph canvas height\n * @param bottom Place should be on the top or on the bottom\n */\nexport const newNodePosition = (\n  canvasWidth: number,\n  canvasHeight: number,\n  bottom = false\n): XYPosition => {\n  const halfHeight = canvasHeight / 2\n  return {\n    x: randomBetween(0, canvasWidth - 200),\n    y: bottom ? randomBetween(halfHeight, canvasHeight) : randomBetween(0, halfHeight),\n  }\n}\n\n/**\n * Fix canvas blur problem\n * @param canvas Canvas DOM element\n * @returns Dimensions array\n */\nexport const dpiFix = (canvas: HTMLCanvasElement) => {\n  const width = +getComputedStyle(canvas).getPropertyValue(\"width\").slice(0, -2)\n  const height = +getComputedStyle(canvas).getPropertyValue(\"height\").slice(0, -2)\n  const dpi = window.devicePixelRatio\n  canvas.setAttribute(\"width\", (width * dpi).toString())\n  canvas.setAttribute(\"height\", (height * dpi).toString())\n  return { width, height }\n}\n","/** @jsx jsx */\nimport { jsx, css } from \"@emotion/core\"\nimport styled from \"@emotion/styled\"\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\"\nimport { IconProp } from \"@fortawesome/fontawesome-svg-core\"\nimport { audioNodeTypes } from \"./AudioGraph\"\nimport { PropsWithChildren } from \"react\"\n\ntype GraphBtnProps = {\n  icon: IconProp\n  onClick: (type: keyof typeof audioNodeTypes) => void\n}\n\nexport const GraphButton = ({ icon, onClick, children }: PropsWithChildren<GraphBtnProps>) => (\n  <button\n    css={css`\n      height: 28px;\n      border-radius: 4px;\n      background-color: #212d40;\n      border-color: #212d40;\n      color: #fff;\n      display: flex;\n      align-items: center;\n      justify-content: space-between;\n      gap: 15px;\n      svg {\n        color: #ccc;\n      }\n      :hover svg {\n        color: #fff;\n      }\n    `}\n    // @ts-ignore\n    onClick={onClick}\n  >\n    <div className=\"text\">{children}</div>\n    <FontAwesomeIcon fixedWidth icon={icon} />\n  </button>\n)\n\nexport const GraphButtons = styled.div`\n  position: absolute;\n  top: 8px;\n  right: 10px;\n  z-index: 4;\n  display: flex;\n  flex-direction: column;\n  gap: 2px;\n  .text {\n    display: none;\n  }\n  &:hover .text {\n    display: block;\n  }\n`\n\nexport const GraphMutateButton = styled.button<any>`\n  position: absolute;\n  top: ${props => (props.fourth ? \"104px\" : props.third ? \"72px\" : props.second ? \"40px\" : \"8px\")};\n  right: 10px;\n  width: 160px;\n  height: 28px;\n  z-index: 4;\n  border-radius: 4px;\n  background-color: #212d40;\n  border-color: #212d40;\n  color: #fff;\n  svg {\n    float: left;\n    color: #ccc;\n  }\n`\n\nexport const NodeButton = styled.button<any>`\n  width: 100%;\n  height: 28px;\n  border-radius: 4px;\n  background-color: #212d40;\n  border-color: #212d40;\n  color: #fff;\n  svg {\n    float: left;\n    color: #ccc;\n  }\n`\n","import ReactFlow, {\n  Edge,\n  Node,\n  isEdge,\n  isNode,\n  addEdge,\n  Elements,\n  Controls,\n  Connection,\n  Background,\n  useStoreState,\n  removeElements,\n  BackgroundVariant,\n} from \"react-flow-renderer\"\nimport { useSelector, useDispatch } from \"react-redux\"\nimport React, { useState, useRef, useEffect } from \"react\"\nimport { selectLoadElements, setLoadElements } from \"../../features/ux/uxSlice\"\nimport Oscillator from \"./nodes/Oscillator\"\nimport Gain from \"./nodes/Gain\"\nimport BiquadFilter from \"./nodes/BiquadFilter\"\nimport Analyser from \"./nodes/Analyser\"\nimport { newNodePosition } from \"../../scripts/utils\"\nimport { GraphButtons, GraphButton } from \"./buttons\"\nimport {\n  nodes,\n  connectNodes,\n  disconnectNodes,\n  delNode,\n  AUDIO_CONTEXT_DESTINATION,\n} from \"../../scripts/audio\"\n\nexport const audioNodeTypes = {\n  oscillator: Oscillator,\n  gain: Gain,\n  biquadfilter: BiquadFilter,\n  analyser: Analyser,\n}\n\nconst defaultNode: Node = {\n  id: AUDIO_CONTEXT_DESTINATION,\n  type: \"output\",\n  selectable: false,\n  connectable: true,\n  data: { label: \"Audio Output\" },\n  style: {\n    backgroundColor: \"#364156\",\n    color: \"#fff\",\n  },\n  position: { x: 0, y: 0 },\n}\n\nconst checkSize = (prev: number, next: number) => prev === next\n\nconst NodeGraph = () => {\n  const dispatch = useDispatch()\n  const loadElements = useSelector(selectLoadElements)\n  const width = useStoreState(store => store.width, checkSize)\n  const height = useStoreState(store => store.height, checkSize)\n  const [elements, setElements] = useState<Elements>([])\n  const selected = useRef<Elements | null>(null)\n  const nextId = useRef<number>(1)\n\n  const onConnect = (connection: Edge | Connection) => {\n    if (connection.source !== null && connection.target !== null) {\n      connectNodes(connection.source, connection.target)\n      setElements(els => addEdge(connection, els))\n    }\n  }\n\n  useEffect(() => {\n    if (loadElements) {\n      nodes.clear()\n      const nodeElems = loadElements.filter(el => isNode(el))\n      setElements(nodeElems)\n      setTimeout(() => loadElements.filter(el => isEdge(el)).forEach(el => onConnect(el as Edge)))\n      nextId.current =\n        +nodeElems\n          .filter(el => el.id !== AUDIO_CONTEXT_DESTINATION)\n          .sort((a, b) => +b.id - +a.id)[0]?.id + 1 || 1\n      dispatch(setLoadElements(null))\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [loadElements])\n\n  useEffect(() => {\n    if (width > 0 && height > 0 && elements.length === 0) {\n      defaultNode.position = { x: width / 2, y: height / 2 }\n      setElements([defaultNode])\n    }\n  }, [width, height, elements])\n\n  const removeSelected = () => {\n    if (selected.current !== null) {\n      selected.current.forEach(el => {\n        if (el.type !== undefined) {\n          delNode(el.id)\n        } else {\n          disconnectNodes((el as Edge).source, (el as Edge).target)\n        }\n      })\n\n      setElements(removeElements(selected.current, elements))\n      selected.current = null\n    }\n  }\n\n  const addAudioNode = (type: keyof typeof audioNodeTypes) => () =>\n    setElements([\n      ...elements,\n      {\n        id: (nextId.current++).toString(),\n        type,\n        className: \"audioNode\",\n        position: newNodePosition(width, height),\n      },\n    ])\n\n  return (\n    <ReactFlow\n      elements={elements}\n      onConnect={onConnect}\n      nodeTypes={audioNodeTypes}\n      onSelectionChange={els => (selected.current = els)}\n      connectionLineStyle={{ stroke: \"#006\" }}\n      style={{ backgroundColor: \"#7d4e57\" }}\n      snapToGrid={true}\n      snapGrid={[16, 16]}\n    >\n      <Controls showInteractive={false} />\n      <Background variant={BackgroundVariant.Lines} color=\"#A16873\" gap={32} />\n\n      <GraphButtons>\n        <GraphButton onClick={addAudioNode(\"oscillator\")} icon={[\"fas\", \"wave-sine\"]}>\n          Add Oscillator\n        </GraphButton>\n        <GraphButton onClick={addAudioNode(\"gain\")} icon={[\"fas\", \"volume\"]}>\n          Add Gain\n        </GraphButton>\n        <GraphButton onClick={addAudioNode(\"biquadfilter\")} icon={[\"fas\", \"filter\"]}>\n          Add Biquad Filter\n        </GraphButton>\n        <GraphButton onClick={addAudioNode(\"analyser\")} icon={[\"fas\", \"analytics\"]}>\n          Add Analyser\n        </GraphButton>\n        <GraphButton onClick={removeSelected} icon={[\"fas\", \"trash-alt\"]}>\n          Remove Selected\n        </GraphButton>\n      </GraphButtons>\n    </ReactFlow>\n  )\n}\n\nexport default NodeGraph\n","/** @jsx jsx */\n/* eslint-disable react-hooks/exhaustive-deps */\nimport { jsx } from \"@emotion/core\"\nimport { useRef, useEffect } from \"react\"\nimport { useSelector } from \"react-redux\"\nimport { nodes } from \"../../scripts/audio\"\nimport { selectAnalysers } from \"../../features/activeSound/activeSoundSlice\"\nimport { dpiFix } from \"../../scripts/utils\"\n\nexport default () => {\n  const analysers = useSelector(selectAnalysers)\n  const canvas = useRef<HTMLCanvasElement>(null)\n  const ctx = useRef<CanvasRenderingContext2D>()\n  const width = useRef<number>(0)\n  const height = useRef<number>(0)\n\n  useEffect(() => {\n    ctx.current = canvas.current!.getContext(\"2d\") as CanvasRenderingContext2D\n    //TODO: `dpiFix()` uneffective with css width and height, remove them\n    const dimensions = dpiFix(canvas.current!)\n    width.current = dimensions.width\n    height.current = dimensions.height\n  }, [])\n\n  const draw = () => {\n    ctx.current!.clearRect(0, 0, width.current, height.current)\n    analysers.forEach(analyser => {\n      const node = nodes.get(analyser.id) as AnalyserNode\n      if (node) {\n        ctx.current!.lineWidth = analyser.lineWidth\n        drawWave(node, analyser.color)\n      }\n    })\n\n    requestAnimationFrame(draw)\n  }\n\n  useEffect(() => {\n    if (analysers.length > 0) {\n      draw()\n    }\n  }, [analysers])\n\n  const drawWave = (analyser: AnalyserNode, color = \"#ff0000\") => {\n    const halfHeight = height.current / 2\n    ctx.current!.strokeStyle = color\n    const bufferLength = analyser.frequencyBinCount\n    const data = new Float32Array(bufferLength)\n    analyser.getFloatTimeDomainData(data)\n    let sliceWidth = width.current / bufferLength\n    let x = 0\n    let y\n    ctx.current!.beginPath()\n    ctx.current!.moveTo(0, halfHeight)\n    for (let i = 0; i < bufferLength; i++) {\n      y = halfHeight + data[i] * halfHeight\n      ctx.current!.lineTo(x, y)\n      x += sliceWidth\n    }\n    ctx.current!.lineTo(width.current, halfHeight)\n    ctx.current!.stroke()\n  }\n\n  return <canvas ref={canvas} css={{ width: \"100%\", height: \"100%\", backgroundColor: \"#364156\" }} />\n}\n","import styled from \"@emotion/styled\"\n\nconst HeaderWrapper = styled.div`\n  background-color: #11151c;\n  color: #fff;\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  padding: 0 8px 0 3px;\n`\n\nexport default HeaderWrapper\n","/** @jsx jsx */\nimport { jsx, css } from \"@emotion/core\"\nimport { useDispatch } from \"react-redux\"\nimport { toggleMenu } from \"../../features/ux/uxSlice\"\nimport Kick from \"../../samples/Kick.json\"\nimport HiHat from \"../../samples/HiHat.json\"\n\nconst menuWrapper = css`\n  top: 0;\n  right: 0;\n  width: 280px;\n  position: fixed;\n  z-index: 200;\n  background-color: #000;\n  padding: 25px;\n  box-shadow: 5px 5px 15px 5px #000000;\n  a {\n    color: #66f;\n  }\n`\n\nconst Menu = () => {\n  const dispatch = useDispatch()\n\n  const loadDefaultSounds = () => {\n    localStorage.setItem(\"Kick\", JSON.stringify(Kick))\n    localStorage.setItem(\"HiHat\", JSON.stringify(HiHat))\n  }\n\n  return (\n    <div css={menuWrapper} onMouseLeave={() => dispatch(toggleMenu())}>\n      <h2 css={{ textAlign: \"center\" }}>MENU</h2>\n      <ul css={{ lineHeight: 1.6, fontSize: \"1.1rem\", paddingLeft: 25 }}>\n        <li>\n          Open poorly managed{\" \"}\n          <a href=\"https://github.com/SubZtep/synth/wiki\" target=\"_blank\" rel=\"noopener noreferrer\">\n            Wiki page\n          </a>\n          .\n        </li>\n        <li>\n          <button onClick={loadDefaultSounds}>Load default sounds</button>, will overwrite{\" \"}\n          <em>Kick</em> and <em>HiHat</em> names in local storage.\n        </li>\n      </ul>\n    </div>\n  )\n}\n\nexport default Menu\n","/** @jsx jsx */\nimport { jsx, css } from \"@emotion/core\"\nimport { Fragment, useRef } from \"react\"\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\"\nimport { selectMenu, toggleMenu } from \"../../features/ux/uxSlice\"\nimport { useSelector, useDispatch } from \"react-redux\"\nimport Menu from \"./Menu\"\n\nconst MenuOpener = () => {\n  const menu = useSelector(selectMenu)\n  const dispatch = useDispatch()\n  const timer = useRef<NodeJS.Timeout | null>(null)\n\n  return (\n    <Fragment>\n      <FontAwesomeIcon\n        icon={[\"fas\", \"bars\"]}\n        size=\"lg\"\n        css={css`\n          &:hover {\n            transform: rotate(90deg);\n            transition: 500ms;\n          }\n        `}\n        onMouseEnter={() => {\n          if (timer.current === null) {\n            timer.current = setTimeout(() => {\n              dispatch(toggleMenu())\n              timer.current = null\n            }, 500)\n          }\n        }}\n        onMouseLeave={() => {\n          if (timer.current !== null) {\n            clearTimeout(timer.current)\n            timer.current = null\n          }\n        }}\n      />\n      {menu && <Menu />}\n    </Fragment>\n  )\n}\n\nexport default MenuOpener\n","/** @jsx jsx */\nimport { jsx } from \"@emotion/core\"\n\nconst Brand = () => {\n  return (\n    <div css={{ display: \"flex\", alignItems: \"flex-end\" }}>\n      <h1 css={{ margin: 0, color: \"#f2f4f7\" }}>WAAπSynth</h1>\n      <div css={{ margin: 4, color: \"#d9dbde\" }}>v{process.env.REACT_APP_VERSION}</div>\n    </div>\n  )\n}\n\nexport default Brand\n","/** @jsx jsx */\nimport { useEffect, useRef } from \"react\"\nimport { jsx, css } from \"@emotion/core\"\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\"\nimport { selectName, setName } from \"../../features/activeSound/activeSoundSlice\"\nimport { useSelector, useDispatch } from \"react-redux\"\n\nconst Name = () => {\n  const name = useSelector(selectName)\n  const dispatch = useDispatch()\n  const input = useRef<HTMLInputElement>(null)\n\n  useEffect(() => {\n    input.current!.value = name\n  }, [name])\n\n  return (\n    <div>\n      <FontAwesomeIcon icon={[\"fal\", \"file-signature\"]} size=\"lg\" color=\"LimeGreen\" />\n      <input\n        ref={input}\n        type=\"text\"\n        defaultValue={name}\n        onChange={event => dispatch(setName(event.target.value))}\n        css={css`\n          background-color: transparent;\n          border: 1px solid #323333;\n          font-family: Tomorrow;\n          padding: 2px 4px;\n          margin-left: 8px;\n          color: #fff;\n        `}\n        onFocus={event => event.target.select()}\n      />\n    </div>\n  )\n}\n\nexport default Name\n","/** @jsx jsx */\nimport { jsx, css } from \"@emotion/core\"\nimport { useSelector } from \"react-redux\"\nimport { useStoreState, Elements } from \"react-flow-renderer\"\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\"\nimport { selectName, selectAudioNodes } from \"../../features/activeSound/activeSoundSlice\"\n\nexport default () => {\n  const elements = useStoreState(store => store.elements)\n  const name = useSelector(selectName)\n  const audioNodes = useSelector(selectAudioNodes)\n\n  const save = () => {\n    localStorage.setItem(\n      name,\n      JSON.stringify({\n        elements: elements.map((element: any) => {\n          if (element.__rf !== undefined) {\n            if (element.__rf.position !== undefined) {\n              element.position = element.__rf.position\n            }\n            delete element.__rf\n          }\n          return element\n        }) as Elements,\n        ...audioNodes,\n      })\n    )\n  }\n\n  return (\n    <FontAwesomeIcon\n      icon={[\"fal\", \"save\"]}\n      size=\"lg\"\n      onClick={save}\n      css={css`\n        cursor: pointer;\n        transition: 50ms;\n        &:hover {\n          transition: 50ms;\n          transform: scale(1.05);\n        }\n      `}\n    />\n  )\n}\n","/** @jsx jsx */\nimport { jsx, css } from \"@emotion/core\"\nimport { useDispatch } from \"react-redux\"\nimport { useRef, useState, ChangeEvent } from \"react\"\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\"\nimport {\n  setName,\n  setGains,\n  setAnalysers,\n  setBiquadFilters,\n  setOscillators,\n} from \"../../features/activeSound/activeSoundSlice\"\nimport { setLoadElements } from \"../../features/ux/uxSlice\"\n\nconst validate = (obj: any) => {\n  const requiredKeys = [\"elements\", \"analysers\", \"gains\"]\n  return Object.keys(obj).filter(key => requiredKeys.includes(key)).length === requiredKeys.length\n}\n\nexport default () => {\n  const select = useRef<HTMLSelectElement>(null)\n  const dispatch = useDispatch()\n  const [names, setNames] = useState<string[]>([])\n\n  const load = (event: ChangeEvent<HTMLSelectElement>) => {\n    const name = event.currentTarget.value\n    select.current!.value = \"\"\n    const data = localStorage.getItem(name)\n    if (data) {\n      const obj = JSON.parse(data)\n      if (validate(obj)) {\n        dispatch(setAnalysers(obj.analysers))\n        dispatch(setGains(obj.gains))\n        dispatch(setBiquadFilters(obj.biquadFilters))\n        dispatch(setOscillators(obj.oscillators))\n        dispatch(setLoadElements(obj.elements))\n        dispatch(setName(name))\n      }\n    }\n  }\n\n  return (\n    <div\n      css={css`\n        transition: 50ms;\n        display: flex;\n        &:hover {\n          select {\n            display: block;\n          }\n          svg {\n            transition: 50ms;\n            transform: scale(1.05);\n          }\n        }\n      `}\n    >\n      <select ref={select} css={{ display: \"none\", marginRight: 8 }} onChange={load}>\n        <option value=\"\">--- Please Select ---</option>\n        {names.map(name => (\n          <option key={name} value={name}>\n            {name}\n          </option>\n        ))}\n      </select>\n      <FontAwesomeIcon\n        icon={[\"fal\", \"folder-open\"]}\n        size=\"lg\"\n        onMouseOver={() => setNames(Object.keys(localStorage))}\n      />\n    </div>\n  )\n}\n","/** @jsx jsx */\nimport { jsx, css } from \"@emotion/core\"\nimport HeaderWrapper from \"./HeaderWrapper\"\nimport MenuOpener from \"./MenuOpener\"\nimport Brand from \"./Brand\"\nimport Name from \"./Name\"\nimport Save from \"./Save\"\nimport Load from \"./Load\"\n\nconst Header = () => {\n  return (\n    <HeaderWrapper>\n      <Brand />\n      <div\n        css={css`\n          display: flex;\n          gap: 18px;\n          opacity: 0.75;\n          transition: 100ms;\n          &:hover {\n            opacity: 1;\n            transition: 100ms;\n          }\n        `}\n      >\n        <Load />\n        <Name />\n        <Save />\n        <MenuOpener />\n      </div>\n    </HeaderWrapper>\n  )\n}\n\nexport default Header\n","/** @jsx jsx */\nimport { jsx, css } from \"@emotion/core\"\nimport styled from \"@emotion/styled\"\nimport { useDispatch } from \"react-redux\"\nimport { setPlayFrequency } from \"../../features/activeSound/activeSoundSlice\"\n\nconst pianoStyle = css`\n  display: flex;\n  width: 100%;\n  > div {\n    flex: 1;\n    position: relative;\n    height: 240px;\n    margin: 0 1px;\n    border: 1px solid #999;\n    border-radius: 1px 1px 5px 5px;\n    box-shadow: 2px 2px 5px #0006;\n    cursor: pointer;\n    background-color: #aaa;\n    &:hover {\n      background-color: #999;\n    }\n    &:active {\n      background-color: #888;\n    }\n    &::after {\n      position: absolute;\n      bottom: 0.8rem;\n      width: 100%;\n      text-align: center;\n      content: attr(data-note);\n      font: 500 1.72rem Candara;\n      color: #121212;\n    }\n  }\n  > div > div {\n    position: absolute;\n    top: -1px;\n    left: 70%;\n    height: 160px;\n    width: calc(60% + 2px);\n    border-radius: 1px 1px 5px 5px;\n    box-shadow: 2px 2px 5px #0006;\n    cursor: pointer;\n    z-index: 10;\n    background-color: #000;\n    &:hover {\n      background-color: #111;\n    }\n    &:active {\n      background-color: #222;\n    }\n  }\n`\n\nconst PianoWrapper = styled.div`\n  display: flex;\n  align-items: center;\n  font-size: 3rem;\n  justify-content: center;\n  background-color: #11151c;\n  color: #fff;\n`\n\nconst Piano = () => {\n  const dispatch = useDispatch()\n\n  return (\n    <PianoWrapper>\n      <div\n        css={pianoStyle}\n        onMouseDown={event => {\n          const el = event.target\n          if (el) {\n            dispatch(\n              setPlayFrequency(+((el as HTMLDivElement).getAttribute(\"data-frequency\") as string))\n            )\n          }\n        }}\n        onMouseUp={() => void dispatch(setPlayFrequency(null))}\n      >\n        <div data-frequency=\"261.626\" data-note=\"C\">\n          <div data-frequency=\"277.18\" data-note=\"C#\"></div>\n        </div>\n        <div data-frequency=\"293.665\" data-note=\"D\">\n          <div data-frequency=\"311.127\"></div>\n        </div>\n        <div data-frequency=\"329.628\" data-note=\"E\"></div>\n        <div data-frequency=\"349.228\" data-note=\"F\">\n          <div data-frequency=\"369.994\"></div>\n        </div>\n        <div data-frequency=\"391.995\" data-note=\"G\">\n          <div data-frequency=\"415.305\"></div>\n        </div>\n        <div data-frequency=\"440.000\" data-note=\"A\">\n          <div data-frequency=\"466.164\"></div>\n        </div>\n        <div data-frequency=\"493.883\" data-note=\"B\"></div>\n        <div data-frequency=\"523.251\" data-note=\"C\">\n          <div data-frequency=\"554.365\"></div>\n        </div>\n        <div data-frequency=\"587.330\" data-note=\"D\">\n          <div data-frequency=\"622.254\"></div>\n        </div>\n        <div data-frequency=\"659.255\" data-note=\"E\"></div>\n        <div data-frequency=\"698.457\" data-note=\"F\">\n          <div data-frequency=\"739.989\"></div>\n        </div>\n        <div data-frequency=\"783.991\" data-note=\"G\">\n          <div data-frequency=\"830.609\"></div>\n        </div>\n        <div data-frequency=\"880.000\" data-note=\"A\">\n          <div data-frequency=\"932.328\"></div>\n        </div>\n        <div data-frequency=\"987.767\" data-note=\"B\"></div>\n        <div data-frequency=\"1046.50\" data-note=\"C\"></div>\n      </div>\n    </PianoWrapper>\n  )\n}\n\nexport default Piano\n","import React, { Component } from \"react\"\n// import PropTypes from \"prop-types\"\n\nexport default class ErrorBoundary extends Component {\n  state = {\n    error: \"\",\n    errorInfo: \"\",\n    hasError: false,\n  }\n  static getDerivedStateFromError(error: Error) {\n    return { hasError: true, error }\n  }\n  componentDidCatch(error: Error, errorInfo: React.ErrorInfo) {\n    // eslint-disable-next-line no-console\n    console.log({ error, errorInfo })\n    alert(error)\n    this.setState({ errorInfo })\n  }\n  render() {\n    // next code block goes here\n    return this.props.children\n  }\n}\n// ErrorBoundary.propTypes = {\n//   children: PropTypes.oneOfType([PropTypes.object, PropTypes.array]).isRequired,\n// }\n","/** @jsx jsx */\nimport { jsx } from \"@emotion/core\"\nimport { ReactFlowProvider } from \"react-flow-renderer\"\nimport { Main, EditorWrapper } from \"./components/styled\"\nimport AudioGraph from \"./components/graph/AudioGraph\"\nimport Visual from \"./components/side/AnalyserView\"\nimport Header from \"./components/header/Header\"\nimport Piano from \"./components/side/Piano\"\nimport ErrorBoundary from \"./ErrorBoundary\"\n\nexport default function App() {\n  return (\n    <Main>\n      <ReactFlowProvider>\n        <Header />\n        <EditorWrapper>\n          <ErrorBoundary>\n            <AudioGraph />\n            <Visual />\n            <Piano />\n          </ErrorBoundary>\n        </EditorWrapper>\n      </ReactFlowProvider>\n    </Main>\n  )\n}\n","import ReactDOM from \"react-dom\"\nimport { Provider } from \"react-redux\"\nimport React, { Fragment } from \"react\"\nimport { Global, css } from \"@emotion/core\"\n// import * as serviceWorker from \"./serviceWorker\"\nimport { fal } from \"@fortawesome/pro-light-svg-icons\"\nimport { fas } from \"@fortawesome/pro-solid-svg-icons\"\nimport { fab } from \"@fortawesome/free-brands-svg-icons\"\nimport { fad } from \"@fortawesome/pro-duotone-svg-icons\"\nimport { far } from \"@fortawesome/pro-regular-svg-icons\"\nimport { library } from \"@fortawesome/fontawesome-svg-core\"\nimport store from \"./store\"\nimport App from \"./App\"\n\n//TODO: collect icons and check sizes https://fontawesome.com/how-to-use/on-the-web/using-with/react#using\nlibrary.add(fab, fad, fal, far, fas)\n\nReactDOM.render(\n  // <React.StrictMode>\n  <Fragment>\n    <Global\n      styles={css`\n        @import url(\"https://fonts.googleapis.com/css2?family=Tomorrow&display=swap\");\n        * {\n          box-sizing: border-box;\n        }\n        html,\n        body {\n          padding: 0;\n          margin: 0;\n          width: 100vw;\n          height: 100vh;\n          font-family: Tomorrow, sans-serif;\n          font-style: normal;\n          font-weight: 400;\n          font-size: 16px;\n          background-color: #000;\n        }\n        button {\n          font-family: Tomorrow, sans-serif;\n        }\n        .react-flow__controls-button {\n          width: 25px;\n          height: 25px;\n          opacity: 0.5;\n        }\n        .react-flow__handle {\n          width: 1rem;\n          height: 1rem;\n        }\n        .react-flow__node.audioNode {\n          border: 2px solid #212d40;\n          border-radius: 3px;\n          background-color: #212d40;\n          color: #fff;\n          padding: 10px;\n          &.selected {\n            border-color: #aebdd5;\n          }\n        }\n        .react-flow__edge {\n          .react-flow__edge-path {\n            stroke: #33c;\n          }\n          &.selected .react-flow__edge-path {\n            stroke-width: 2.5;\n            stroke: #aebdd5;\n          }\n        }\n      `}\n    />\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </Fragment>,\n  // </React.StrictMode>,\n  document.getElementById(\"root\")\n)\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n// serviceWorker.unregister()\n"],"sourceRoot":""}