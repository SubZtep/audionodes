{"version":3,"sources":["components/graph/nodeform.tsx","scripts/audio.ts","components/graph/nodes/HandleOutputs.tsx","components/graph/nodes/HandleInputs.tsx","components/graph/nodes/Analyser.tsx","features/activeSound/activeSoundSlice.ts","features/sounds/soundsSlice.ts","features/ux/uxSlice.ts","store.ts","components/misc/EditorWrapper.tsx","hooks/useAudioParamKeys.ts","components/graph/nodes/AudioParamDefaults.tsx","components/graph/nodes/AudioParamForm.tsx","components/graph/nodes/AudioParams.tsx","components/graph/nodes/Oscillator.tsx","components/graph/nodes/Gain.tsx","components/graph/nodes/BiquadFilter.tsx","scripts/utils.ts","components/graph/buttons.tsx","components/graph/AudioGraph.tsx","components/misc/Main.tsx","components/visual/AnalyserView.tsx","components/piano/Piano.tsx","components/header/HeaderWrapper.tsx","components/header/Menu.tsx","components/header/MenuOpener.tsx","components/header/Brand.tsx","components/header/Name.tsx","components/header/Save.tsx","components/header/Header.tsx","ErrorBoundary.ts","App.tsx","index.tsx"],"names":["Title","styled","div","FormWrapper","Label","label","Hr","hr","AddButton","button","DelButton","audioContext","window","AudioContext","webkitAudioContext","nodes","destination","Map","connectNodes","source","target","get","connect","addNode","id","audioNode","set","delNode","node","disconnect","delete","applyParams","params","forEach","param","values","includes","call","currentTime","name","numberOfOutputs","onConnect","Array","fill","map","_value","index","key","type","position","Position","Bottom","style","left","background","numberOfInputs","Top","fftSizes","memo","analyser","useRef","createAnalyser","useState","fftSize","setFftSize","color","setColor","lineWidth","setLineWidth","dispatch","useDispatch","useEffect","current","addAnalyser","delAnalyser","setAnalyser","HandleInputs","css","float","defaultValue","onChange","event","currentTarget","value","fft","min","valueAsNumber","HandleOutputs","activeSoundSlice","createSlice","initialState","analysers","playFrequency","reducers","setName","state","payload","push","filter","ananyser","setPlayFrequency","selectName","activeSound","selectAnalysers","selectPlayFrequency","actions","soundsSlice","addSound","action","description","uxSlice","menu","toggleMenu","selectMenu","ux","store","configureStore","reducer","sounds","EditorWrapper","Object","keys","constructor","prototype","AudioParam","defP","audioParams","useAudioParamKeys","minValue","Number","MIN_SAFE_INTEGER","toFixed","maxValue","MAX_SAFE_INTEGER","paramRow","audioParamCalls","nth","setNumber","getAttribute","val","currValues","getNumber","width","data-nth","isArray","join","toString","split","setParams","AudioParamForm","newParam","currParams","undefined","paramChange","onClick","splice","delParam","types","fakeOsc","createOscillator","setTarget","setType","useSelector","edges","useStoreState","some","edge","length","osc","onended","Error","oscillatorFactory","frequency","setValueAtTime","start","AudioParamDefaults","typeVal","checked","AudioParams","connection","gain","createGain","biquad","createBiquadFilter","randomBetween","max","Math","random","newNodePosition","canvasWidth","canvasHeight","bottom","halfHeight","x","y","GraphButton","icon","children","className","fixedWidth","GraphButtons","audioNodeTypes","props","fourth","third","second","oscillator","Oscillator","Gain","biquadfilter","BiquadFilter","Analyser","defaultNode","selectable","connectable","data","backgroundColor","checkSize","prev","next","NodeGraph","height","elements","setElements","selected","nextId","addAudioNode","els","addEdge","nodeTypes","onSelectionChange","connectionLineStyle","stroke","snapToGrid","snapGrid","showInteractive","variant","BackgroundVariant","Lines","gap","el","disconnectNodes","removeElements","Main","canvas","ctx","getContext","dimensions","getComputedStyle","getPropertyValue","slice","dpi","devicePixelRatio","setAttribute","dpiFix","draw","clearRect","drawWave","requestAnimationFrame","strokeStyle","bufferLength","frequencyBinCount","Float32Array","getFloatTimeDomainData","sliceWidth","beginPath","moveTo","i","lineTo","ref","pianoStyle","PianoWrapper","Piano","onMouseDown","onMouseUp","data-frequency","data-note","HeaderWrapper","menuWrapper","Menu","onMouseEnter","onMouseLeave","textAlign","lineHeight","fontSize","MenuOpener","size","Brand","display","alignItems","margin","process","Name","onFocus","select","Save","Header","opacity","ErrorBoundary","error","errorInfo","hasError","console","log","alert","this","setState","Component","App","AudioGraph","library","add","fab","fad","fal","far","fas","ReactDOM","render","styles","document","getElementById"],"mappings":"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","file":"static/js/main.a558dd72.chunk.js","sourcesContent":["import styled from \"@emotion/styled\"\n\nexport const Title = styled.div`\n  text-align: center;\n`\n\nexport const FormWrapper = styled.div`\n  padding: 8px;\n  margin: 8px 0;\n  background-color: #364156;\n`\n\nexport const Label = styled.label`\n  display: block;\n  font-size: 0.8rem;\n  text-transform: capitalize;\n  input[type=\"number\"] {\n    display: block;\n    margin-top: 2px;\n    background-color: rgba(255, 255, 255, 0.7);\n    border-width: 1px;\n    padding: 1px 0 1px 4px;\n  }\n  > :not(:last-child) {\n    margin-bottom: 12px;\n  }\n`\n\nexport const Hr = styled.hr`\n  margin: 10px 0 6px 0;\n  border: 0;\n  border-bottom: 2px ridge #212d40;\n`\n\nexport const AddButton = styled.button`\n  border: 0;\n  background: transparent;\n  color: #0c0;\n  font-size: 0.7rem;\n  padding: 0 8px;\n`\n\nexport const DelButton = styled.button`\n  border: 0;\n  background: transparent;\n  color: #f33;\n  font-size: 0.7rem;\n  padding: 0;\n`\n","import { ElementId } from \"react-flow-renderer\"\nimport { AudioParamSetting } from \"../components/graph/nodes/AudioParamForm\"\n\n// @ts-ignore\nexport const audioContext = new (window.AudioContext || window.webkitAudioContext)()\n\nexport const destination = audioContext.destination\n\nexport const nodes = new Map<string, AudioNode>()\n\nexport const AUDIO_CONTEXT_DESTINATION = \"destination\"\n\nexport const connectNodes = (source: ElementId, target: ElementId) => {\n  if (target === AUDIO_CONTEXT_DESTINATION) {\n    nodes.get(source)?.connect(audioContext.destination)\n  } else {\n    const destination = nodes.get(target)\n    if (destination) nodes.get(source)?.connect(destination)\n  }\n}\n\nexport const disconnectNodes = (source: string, target: string) => {\n  if (target === AUDIO_CONTEXT_DESTINATION) {\n    nodes.get(source)?.disconnect()\n  } else {\n    const destination = nodes.get(target)\n    if (destination) {\n      nodes.get(source)?.disconnect(destination)\n    }\n  }\n}\n\nexport const addNode = (id: string, audioNode: AudioNode) => {\n  nodes.set(id, audioNode)\n}\n\nexport const delNode = (id: string) => {\n  const node = nodes.get(id)\n  node?.disconnect()\n  nodes.delete(id)\n}\n\nexport const applyParams = (node: AudioNode, params: AudioParamSetting[]) => {\n  params.forEach(param => {\n    const values = [...param.values]\n    if (\n      [\n        \"setValueAtTime\",\n        \"linearRampToValueAtTime\",\n        \"exponentialRampToValueAtTime\",\n        \"setTargetAtTime\",\n        \"setValueCurveAtTime\",\n      ].includes(param.call)\n    ) {\n      // @ts-ignore\n      values[1] += audioContext.currentTime\n    }\n    if ([\"cancelScheduledValues\", \"cancelAndHoldAtTime\"].includes(param.call)) {\n      // @ts-ignore\n      values[0] += audioContext.currentTime\n    }\n\n    // @ts-ignore\n    node[param.name][param.call](...values)\n  })\n}\n","/** @jsx jsx */\nimport { Fragment } from \"react\"\nimport { jsx } from \"@emotion/core\"\nimport { Handle, Position, OnConnectFunc } from \"react-flow-renderer\"\n\ntype Props = {\n  numberOfOutputs: number\n  onConnect?: OnConnectFunc\n}\n\nexport default ({ numberOfOutputs, onConnect }: Props) => (\n  <Fragment>\n    {new Array(numberOfOutputs).fill(0).map((_value, index) => (\n      <Handle\n        key={`output${index}`}\n        type=\"source\"\n        position={Position.Bottom}\n        style={{ left: `${(100 / (numberOfOutputs + 1)) * (index + 1)}%`, background: \"#B0BF1A\" }}\n        onConnect={onConnect}\n      />\n    ))}\n  </Fragment>\n)\n","/** @jsx jsx */\nimport { Fragment } from \"react\"\nimport { jsx } from \"@emotion/core\"\nimport { Handle, Position, OnConnectFunc } from \"react-flow-renderer\"\n\ntype Props = {\n  numberOfInputs: number\n  onConnect?: OnConnectFunc\n}\n\nexport default ({ numberOfInputs, onConnect }: Props) => (\n  <Fragment>\n    {new Array(numberOfInputs).fill(0).map((_value, index) => (\n      <Handle\n        key={`input${index}`}\n        type=\"target\"\n        position={Position.Top}\n        style={{ left: `${(100 / (numberOfInputs + 1)) * (index + 1)}%`, background: \"#fff6\" }}\n        onConnect={onConnect}\n      />\n    ))}\n  </Fragment>\n)\n","/** @jsx jsx */\nimport { jsx } from \"@emotion/core\"\nimport { useDispatch } from \"react-redux\"\nimport { NodeComponentProps } from \"react-flow-renderer\"\nimport { memo, useState, useRef, useEffect, Fragment } from \"react\"\nimport { Label } from \"../nodeform\"\nimport {\n  addAnalyser,\n  setAnalyser,\n  delAnalyser,\n} from \"../../../features/activeSound/activeSoundSlice\"\nimport { audioContext, addNode, delNode } from \"../../../scripts/audio\"\nimport { Title, FormWrapper } from \"../nodeform\"\nimport HandleOutputs from \"./HandleOutputs\"\nimport HandleInputs from \"./HandleInputs\"\n\nconst fftSizes = [32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768] as const\nexport type FFTSize = typeof fftSizes[number]\n\nexport default memo(({ id }: NodeComponentProps) => {\n  const analyser = useRef(audioContext.createAnalyser())\n  const [fftSize, setFftSize] = useState<FFTSize>(fftSizes[6])\n  const [color, setColor] = useState<string>(\"#d66853\")\n  const [lineWidth, setLineWidth] = useState(2)\n  const dispatch = useDispatch()\n\n  useEffect(() => {\n    addNode(id, analyser.current)\n    dispatch(addAnalyser({ id, fftSize, color, lineWidth }))\n    return () => {\n      dispatch(delAnalyser(id))\n      delNode(id)\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [])\n\n  useEffect(() => {\n    analyser.current.fftSize = fftSize\n  }, [fftSize])\n\n  useEffect(() => {\n    dispatch(setAnalyser({ id, fftSize, color, lineWidth }))\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [id, color, lineWidth])\n\n  return (\n    <Fragment>\n      <HandleInputs numberOfInputs={analyser.current.numberOfInputs} />\n      <Title>Analyser #{id}</Title>\n      <FormWrapper>\n        <Label>\n          FFT Size\n          <select\n            css={{ float: \"right\" }}\n            defaultValue={fftSize}\n            onChange={event => setFftSize(+event.currentTarget.value as FFTSize)}\n          >\n            {fftSizes.map(fft => (\n              <option key={fft} value={fft}>\n                {fft}\n              </option>\n            ))}\n          </select>\n        </Label>\n        <Label>\n          Colour\n          <input\n            css={{ float: \"right\" }}\n            type=\"color\"\n            onChange={event => setColor(event.currentTarget.value)}\n            defaultValue={color}\n          />\n        </Label>\n        <Label>\n          Line Width\n          <input\n            type=\"number\"\n            min={1}\n            onChange={event => setLineWidth(event.currentTarget.valueAsNumber)}\n            defaultValue={lineWidth}\n          />\n        </Label>\n      </FormWrapper>\n      <HandleOutputs numberOfOutputs={analyser.current.numberOfOutputs} />\n    </Fragment>\n  )\n})\n","import { createSlice, PayloadAction } from \"@reduxjs/toolkit\"\nimport Analyser, { FFTSize } from \"../../components/graph/nodes/Analyser\"\nimport { RootState } from \"../../store\"\n\ntype Analyser = {\n  id: string\n  fftSize: FFTSize\n  color: string\n  lineWidth: number\n}\n\ntype ActiveSound = {\n  name: string\n  analysers: Analyser[]\n  playFrequency: number | null\n}\n\nconst initialState: ActiveSound = {\n  name: \"No Name\",\n  analysers: [],\n  playFrequency: null,\n}\n\nconst activeSoundSlice = createSlice({\n  name: \"activeSound\",\n  initialState,\n  reducers: {\n    setName: (state: ActiveSound, { payload }: PayloadAction<string>) => {\n      state.name = payload\n    },\n    addAnalyser: (state: ActiveSound, { payload }: PayloadAction<Analyser>) => {\n      state.analysers.push(payload)\n    },\n    setAnalyser: (state: ActiveSound, { payload }: PayloadAction<Analyser>) => {\n      state.analysers = state.analysers.map(analyser =>\n        analyser.id === payload.id ? payload : analyser\n      )\n    },\n    delAnalyser: (state: ActiveSound, { payload }: PayloadAction<string>) => {\n      state.analysers = state.analysers.filter(ananyser => ananyser.id !== payload)\n    },\n    setPlayFrequency: (state: ActiveSound, { payload }: PayloadAction<number | null>) => {\n      state.playFrequency = payload\n    },\n  },\n})\n\nexport const selectName = ({ activeSound }: RootState) => activeSound.name\nexport const selectAnalysers = ({ activeSound }: RootState) => activeSound.analysers\nexport const selectPlayFrequency = ({ activeSound }: RootState) => activeSound.playFrequency\nexport const {\n  setName,\n  addAnalyser,\n  setAnalyser,\n  delAnalyser,\n  setPlayFrequency,\n} = activeSoundSlice.actions\nexport default activeSoundSlice.reducer\n","import { createSlice, PayloadAction } from \"@reduxjs/toolkit\"\n\ntype Sound = {\n  name: string\n  description: string\n}\n\nconst soundsSlice = createSlice({\n  name: \"sounds\",\n  initialState: [],\n  reducers: {\n    addSound(state: Sound[], action: PayloadAction<Sound>) {\n      const { name, description } = action.payload\n      state.push({ name, description })\n    },\n  },\n})\n\nexport const { addSound } = soundsSlice.actions\n\nexport default soundsSlice.reducer\n","import { createSlice } from \"@reduxjs/toolkit\"\n\nconst uxSlice = createSlice({\n  name: \"ux\",\n  initialState: {\n    menu: false,\n  },\n  reducers: {\n    toggleMenu: state => {\n      state.menu = !state.menu\n    },\n  },\n})\n\nexport const selectMenu = (state: any) => state.ux.menu\nexport const { toggleMenu } = uxSlice.actions\nexport default uxSlice.reducer\n","import { configureStore } from \"@reduxjs/toolkit\"\nimport activeSoundSlice from \"./features/activeSound/activeSoundSlice\"\nimport soundsSlice from \"./features/sounds/soundsSlice\"\nimport uxSlice from \"./features/ux/uxSlice\"\n\nconst store = configureStore({\n  reducer: {\n    activeSound: activeSoundSlice,\n    sounds: soundsSlice,\n    ux: uxSlice,\n  },\n})\n\nexport default store\nexport type RootState = ReturnType<typeof store.getState>\n","import styled from \"@emotion/styled\"\n\nconst EditorWrapper = styled.div`\n  height: max-content;\n  display: grid;\n  grid-template-columns: auto 450px;\n  grid-template-rows: 300px 200px auto;\n  grid-template-areas:\n    \"audionodes visual\"\n    \"audionodes piano\"\n    \"audionodes .\";\n\n  > :first-of-type {\n    grid-area: audionodes;\n  }\n  > canvas {\n    grid-area: visual !important;\n  }\n  > :last-of-type {\n    grid-area: piano;\n  }\n`\n\nexport default EditorWrapper\n","import { useRef } from \"react\"\n\nexport default (audioNode: AudioNode) => {\n  const keys = useRef(\n    Object.keys(audioNode.constructor.prototype).filter(\n      // @ts-ignore\n      key => audioNode[key].constructor === AudioParam\n    )\n  )\n\n  return keys.current\n}\n","/** @jsx jsx */\nimport { jsx, css } from \"@emotion/core\"\nimport { Fragment } from \"react\"\nimport useAudioParamKeys from \"../../../hooks/useAudioParamKeys\"\n\nconst defP = css`\n  margin: 4px 8px;\n  font-size: 0.9rem;\n  small {\n    margin-left: 8px;\n    font-size: 0.7rem;\n  }\n`\n\ntype Props = {\n  audioNode: AudioNode\n  keys?: string[]\n}\n\nexport default ({ audioNode, keys }: Props) => {\n  const audioParams = keys || useAudioParamKeys(audioNode)\n\n  return (\n    <Fragment>\n      {audioParams.map(key => {\n        // @ts-ignore\n        const param = audioNode[key] as AudioParam\n        return (\n          <p css={defP} key={key}>\n            {key}: {param.defaultValue}\n            <small>\n              {param.minValue <= Number.MIN_SAFE_INTEGER\n                ? \"∞\"\n                : param.minValue % 1 === 0\n                ? param.minValue\n                : param.minValue.toFixed(2)}{\" \"}\n              —{\" \"}\n              {param.maxValue >= Number.MAX_SAFE_INTEGER\n                ? \"∞\"\n                : param.maxValue % 1 === 0\n                ? param.maxValue\n                : param.maxValue.toFixed(2)}\n            </small>\n          </p>\n        )\n      })}\n    </Fragment>\n  )\n}\n","/** @jsx jsx */\nimport { jsx, css } from \"@emotion/core\"\nimport { Fragment, ChangeEvent } from \"react\"\nimport useAudioParamKeys from \"../../../hooks/useAudioParamKeys\"\n\nconst paramRow = css(css`\n  width: 100%;\n  display: flex;\n  /*justify-content: space-between;*/\n  label {\n    font-size: 0.8rem;\n    input {\n      width: 80px;\n    }\n  }\n`)\n\nconst audioParamCalls = [\n  \"setValueAtTime\",\n  \"linearRampToValueAtTime\",\n  \"exponentialRampToValueAtTime\",\n  \"setTargetAtTime\",\n  \"setValueCurveAtTime\",\n  \"cancelScheduledValues\",\n  \"cancelAndHoldAtTime\",\n] as const\n\ntype Call = typeof audioParamCalls[number]\ntype CallParams = (number | number[])[]\n\nexport type AudioParamSetting = {\n  name: string\n  call: Call\n  /** `call` values in order */\n  values: CallParams\n}\n\nexport type AudioParamUpdate = {\n  name?: string\n  call?: Call\n  /** `call` values in order */\n  values?: CallParams\n}\n\ntype Props = {\n  audioNode: AudioNode\n\n  name: string\n  call: Call\n  values: CallParams\n\n  onChange: (param: AudioParamUpdate) => void\n}\n\nexport default ({ audioNode, name, call, values, onChange }: Props) => {\n  const audioParams = useAudioParamKeys(audioNode)\n\n  const setNumber = (event: ChangeEvent<HTMLInputElement>) => {\n    const nth = +event.currentTarget.getAttribute(\"data-nth\")!\n    const val = +event.currentTarget.valueAsNumber\n    const currValues = [...values]\n    currValues[nth] = val\n    onChange({ values: currValues })\n  }\n\n  const setNumbers = (event: ChangeEvent<HTMLInputElement>) => {\n    const nth = +event.currentTarget.getAttribute(\"data-nth\")!\n    const val = event.currentTarget.value.split(\",\").map(value => +value)\n    const currValues = [...values]\n    currValues[nth] = val\n    onChange({ values: currValues })\n  }\n\n  const getNumber = (nth: number) => values[nth] as number\n  const getNumbers = (nth: number) => {\n    if (Array.isArray(values[nth])) {\n      return (values[nth] as number[]).join(\",\")\n    }\n    return values[nth].toString()\n  }\n\n  return (\n    <Fragment>\n      <div css={paramRow}>\n        <label>\n          Name\n          <br />\n          <select value={name} onChange={event => onChange({ name: event.currentTarget.value })}>\n            {audioParams.map(key => (\n              <option key={key} value={key}>\n                {key}\n              </option>\n            ))}\n          </select>\n        </label>\n        <label>\n          Call\n          <br />\n          <select\n            value={call}\n            onChange={event => onChange({ call: event.currentTarget.value as Call })}\n            css={{ width: 120 }}\n          >\n            {audioParamCalls.map(call => (\n              <option key={call} value={call}>\n                {call}\n              </option>\n            ))}\n          </select>\n        </label>\n      </div>\n\n      {[\"setValueAtTime\"].includes(call) && (\n        <div css={paramRow}>\n          <label>\n            value\n            <br />\n            <input type=\"number\" value={getNumber(0)} data-nth={0} onChange={setNumber} />\n          </label>\n          <label>\n            startTime (t+)\n            <br />\n            <input type=\"number\" value={getNumber(1)} data-nth={1} onChange={setNumber} />\n          </label>\n        </div>\n      )}\n\n      {[\"linearRampToValueAtTime\", \"exponentialRampToValueAtTime\"].includes(call) && (\n        <div css={paramRow}>\n          <label>\n            value\n            <br />\n            <input type=\"number\" value={getNumber(0)} data-nth={0} onChange={setNumber} />\n          </label>\n          <label>\n            endTime (t+)\n            <br />\n            <input type=\"number\" value={getNumber(1)} data-nth={1} onChange={setNumber} />\n          </label>\n        </div>\n      )}\n\n      {[\"setTargetAtTime\"].includes(call) && (\n        <div css={paramRow}>\n          <label>\n            value\n            <br />\n            <input type=\"number\" value={getNumber(0)} data-nth={0} onChange={setNumber} />\n          </label>\n          <label>\n            startTime (t+)\n            <br />\n            <input type=\"number\" value={getNumber(1)} data-nth={1} onChange={setNumber} />\n          </label>\n          <label>\n            timeConstant\n            <br />\n            <input type=\"number\" value={getNumber(2)} data-nth={2} onChange={setNumber} />\n          </label>\n        </div>\n      )}\n\n      {[\"setValueCurveAtTime\"].includes(call) && (\n        <div css={paramRow}>\n          <label>\n            values (, sep)\n            <br />\n            <input type=\"string\" value={getNumbers(0)} data-nth={0} onChange={setNumbers} />\n          </label>\n          <label>\n            startTime (t+)\n            <br />\n            <input type=\"number\" value={getNumber(1)} data-nth={1} onChange={setNumber} />\n          </label>\n          <label>\n            duration\n            <br />\n            <input type=\"number\" value={getNumber(2)} data-nth={2} onChange={setNumber} />\n          </label>\n        </div>\n      )}\n\n      {[\"cancelScheduledValues\"].includes(call) && (\n        <div css={paramRow}>\n          <label>\n            startTime (t+)\n            <br />\n            <input type=\"number\" value={getNumber(0)} data-nth={0} onChange={setNumber} />\n          </label>\n        </div>\n      )}\n\n      {[\"cancelAndHoldAtTime\"].includes(call) && (\n        <div css={paramRow}>\n          <label>\n            cancelTime (t+)\n            <br />\n            <input type=\"number\" value={getNumber(0)} data-nth={0} onChange={setNumber} />\n          </label>\n        </div>\n      )}\n    </Fragment>\n  )\n}\n","/** @jsx jsx */\nimport { jsx } from \"@emotion/core\"\nimport { Fragment } from \"react\"\nimport AudioParamForm, { AudioParamSetting, AudioParamUpdate } from \"./AudioParamForm\"\nimport { Hr, DelButton } from \"../nodeform\"\n\ntype Props = {\n  audioNode: AudioNode\n  params: AudioParamSetting[]\n  setParams: (params: AudioParamSetting[]) => void\n}\n\nexport default ({ audioNode, params, setParams }: Props) => {\n  const paramChange = (index: number, newParam: AudioParamUpdate) => {\n    const currParams = [...params]\n    if (newParam.call !== undefined) {\n      if (\n        [\"setValueAtTime\", \"linearRampToValueAtTime\", \"exponentialRampToValueAtTime\"].includes(\n          newParam.call\n        )\n      ) {\n        newParam.values = [0, 0]\n      }\n      if ([\"setTargetAtTime\"].includes(newParam.call)) {\n        newParam.values = [0, 0, 0]\n      }\n      if ([\"setValueCurveAtTime\"].includes(newParam.call)) {\n        newParam.values = [[0], 0, 0]\n      }\n      if ([\"cancelScheduledValues\", \"cancelAndHoldAtTime\"].includes(newParam.call)) {\n        newParam.values = [0]\n      }\n    }\n    currParams[index] = { ...currParams[index], ...newParam }\n    setParams(currParams)\n  }\n\n  const delParam = (index: number) => {\n    const currParams = [...params]\n    currParams.splice(index, 1)\n    setParams(currParams)\n  }\n\n  return (\n    <Fragment>\n      {params.map((param, index) => (\n        <div key={param.name + param.call + index}>\n          {index > 0 && <Hr />}\n          <AudioParamForm\n            audioNode={audioNode}\n            {...param}\n            onChange={newParam => paramChange(index, newParam)}\n          />\n          <DelButton onClick={() => delParam(index)}>- Remove Param Update</DelButton>\n        </div>\n      ))}\n    </Fragment>\n  )\n}\n","/** @jsx jsx */\nimport { jsx } from \"@emotion/core\"\nimport { useSelector } from \"react-redux\"\nimport { memo, useState, useEffect, Fragment, useRef } from \"react\"\nimport { NodeComponentProps, ElementId, useStoreState } from \"react-flow-renderer\"\nimport { audioContext, addNode, connectNodes, applyParams } from \"../../../scripts/audio\"\nimport { selectPlayFrequency } from \"../../../features/activeSound/activeSoundSlice\"\nimport useAudioParamKeys from \"../../../hooks/useAudioParamKeys\"\nimport { Title, FormWrapper, Hr, AddButton } from \"../nodeform\"\nimport AudioParamDefaults from \"./AudioParamDefaults\"\nimport { AudioParamSetting } from \"./AudioParamForm\"\nimport HandleOutputs from \"./HandleOutputs\"\nimport AudioParams from \"./AudioParams\"\nimport { Label } from \"../nodeform\"\n\nconst types: OscillatorType[] = [\"sine\", \"square\", \"sawtooth\", \"triangle\"]\n\nexport default memo(({ id }: NodeComponentProps) => {\n  const fakeOsc = useRef(audioContext.createOscillator())\n  const node = useRef<OscillatorNode | null>(null)\n  const audioParams = useAudioParamKeys(audioContext.createOscillator())\n  const [params, setParams] = useState<AudioParamSetting[]>([])\n  const [target, setTarget] = useState<ElementId | null>(null)\n  const [type, setType] = useState(types[0])\n  const playFrequency = useSelector(selectPlayFrequency)\n  const edges = useStoreState(store => store.edges)\n\n  const oscillatorFactory = () => {\n    const osc = audioContext.createOscillator()\n    osc.type = type\n    osc.onended = () => {\n      throw new Error(`Oscillator #{$id} ended.`)\n    }\n    addNode(id, osc)\n    if (target !== null) {\n      connectNodes(id, target)\n    }\n    return osc\n  }\n\n  useEffect(() => {\n    if (!edges.some(edge => edge.source === id)) {\n      setTarget(null)\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [edges.length])\n\n  useEffect(() => {\n    if (node.current !== null) {\n      node.current?.disconnect()\n      node.current = null\n    }\n    node.current = oscillatorFactory()\n    if (playFrequency !== null) {\n      node.current.frequency.setValueAtTime(playFrequency, audioContext.currentTime)\n      applyParams(node.current, params)\n      node.current.start()\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [playFrequency])\n\n  const addParam = () => {\n    setParams([...params, { name: audioParams[0], call: \"setValueAtTime\", values: [1, 0] }])\n  }\n\n  return (\n    <Fragment>\n      <Title>Oscillator #{id}</Title>\n      <AudioParamDefaults audioNode={fakeOsc.current} keys={audioParams} />\n      {audioParams.length > 0 && <AddButton onClick={addParam}>+ Add Param Update</AddButton>}\n      <FormWrapper>\n        <Label>Type</Label>\n        {types.map(typeVal => (\n          <Label key={typeVal}>\n            <input\n              type=\"radio\"\n              defaultValue={typeVal}\n              checked={type === typeVal}\n              onChange={event => setType(event.currentTarget.value as OscillatorType)}\n            />\n            {typeVal}\n          </Label>\n        ))}\n        {params.length > 0 && <Hr />}\n        <AudioParams audioNode={fakeOsc.current} params={params} setParams={setParams} />\n      </FormWrapper>\n\n      <HandleOutputs\n        numberOfOutputs={fakeOsc.current.numberOfOutputs}\n        onConnect={connection => setTarget(connection.target)}\n      />\n    </Fragment>\n  )\n})\n","/** @jsx jsx */\nimport { jsx } from \"@emotion/core\"\nimport { useSelector } from \"react-redux\"\nimport { NodeComponentProps } from \"react-flow-renderer\"\nimport { memo, Fragment, useEffect, useRef, useState } from \"react\"\nimport { audioContext, addNode, delNode, applyParams } from \"../../../scripts/audio\"\nimport { selectPlayFrequency } from \"../../../features/activeSound/activeSoundSlice\"\nimport useAudioParamKeys from \"../../../hooks/useAudioParamKeys\"\nimport { Title, FormWrapper, AddButton } from \"../nodeform\"\nimport AudioParamDefaults from \"./AudioParamDefaults\"\nimport { AudioParamSetting } from \"./AudioParamForm\"\nimport HandleOutputs from \"./HandleOutputs\"\nimport HandleInputs from \"./HandleInputs\"\nimport AudioParams from \"./AudioParams\"\n\nexport default memo(({ id }: NodeComponentProps) => {\n  const gain = useRef(audioContext.createGain())\n  const audioParams = useAudioParamKeys(gain.current)\n  const playFrequency = useSelector(selectPlayFrequency)\n  const [params, setParams] = useState<AudioParamSetting[]>([\n    { name: \"gain\", call: \"setValueAtTime\", values: [1, 0] },\n    { name: \"gain\", call: \"exponentialRampToValueAtTime\", values: [0.01, 0.5] },\n  ])\n\n  useEffect(() => {\n    addNode(id, gain.current)\n    return () => delNode(id)\n  }, [id])\n\n  useEffect(() => {\n    if (playFrequency !== null) {\n      applyParams(gain.current, params)\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [playFrequency])\n\n  const addParam = () => {\n    setParams([...params, { name: audioParams[0], call: \"setValueAtTime\", values: [1, 0] }])\n  }\n\n  return (\n    <Fragment>\n      <HandleInputs numberOfInputs={gain.current.numberOfInputs} />\n      <Title>Gain #{id}</Title>\n      <AudioParamDefaults audioNode={gain.current} keys={audioParams} />\n      {audioParams.length > 0 && <AddButton onClick={addParam}>+ Add Param Update</AddButton>}\n      {params.length > 0 && (\n        <FormWrapper>\n          <AudioParams audioNode={gain.current} params={params} setParams={setParams} />\n        </FormWrapper>\n      )}\n      <HandleOutputs numberOfOutputs={gain.current.numberOfOutputs} />\n    </Fragment>\n  )\n})\n","/** @jsx jsx */\nimport { jsx } from \"@emotion/core\"\nimport { useSelector } from \"react-redux\"\nimport { NodeComponentProps } from \"react-flow-renderer\"\nimport { memo, useState, useRef, useEffect, Fragment } from \"react\"\nimport { selectPlayFrequency } from \"../../../features/activeSound/activeSoundSlice\"\nimport { audioContext, applyParams, addNode, delNode } from \"../../../scripts/audio\"\nimport { Title, FormWrapper, Hr, AddButton } from \"../nodeform\"\nimport useAudioParamKeys from \"../../../hooks/useAudioParamKeys\"\nimport AudioParamDefaults from \"./AudioParamDefaults\"\nimport { AudioParamSetting } from \"./AudioParamForm\"\nimport HandleOutputs from \"./HandleOutputs\"\nimport HandleInputs from \"./HandleInputs\"\nimport AudioParams from \"./AudioParams\"\nimport { Label } from \"../nodeform\"\n\nconst types: BiquadFilterType[] = [\"lowshelf\", \"highshelf\", \"peaking\"]\n\nexport default memo(({ id }: NodeComponentProps) => {\n  const biquad = useRef(audioContext.createBiquadFilter())\n  const audioParams = useAudioParamKeys(biquad.current)\n  const playFrequency = useSelector(selectPlayFrequency)\n  const [type, setType] = useState(types[0])\n  const [params, setParams] = useState<AudioParamSetting[]>([])\n\n  useEffect(() => {\n    addNode(id, biquad.current)\n    return () => delNode(id)\n  }, [id])\n\n  useEffect(() => {\n    if (playFrequency !== null) {\n      applyParams(biquad.current, params)\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [playFrequency])\n\n  useEffect(() => {\n    biquad.current.type = type\n  }, [type])\n\n  const addParam = () => {\n    setParams([...params, { name: audioParams[0], call: \"setValueAtTime\", values: [1, 0] }])\n  }\n\n  return (\n    <Fragment>\n      <HandleInputs numberOfInputs={biquad.current.numberOfInputs} />\n      <Title>Biquad Filter #{id}</Title>\n      <AudioParamDefaults audioNode={biquad.current} keys={audioParams} />\n      {audioParams.length > 0 && <AddButton onClick={addParam}>+ Add Param Update</AddButton>}\n      <FormWrapper>\n        <Label>Type</Label>\n        {types.map(typeVal => (\n          <Label key={typeVal}>\n            <input\n              type=\"radio\"\n              defaultValue={typeVal}\n              checked={type === typeVal}\n              onChange={event => setType(event.currentTarget.value as BiquadFilterType)}\n            />\n            {typeVal}\n          </Label>\n        ))}\n        {params.length > 0 && <Hr />}\n        <AudioParams audioNode={biquad.current} params={params} setParams={setParams} />\n      </FormWrapper>\n      <HandleOutputs numberOfOutputs={biquad.current.numberOfOutputs} />\n    </Fragment>\n  )\n})\n","import { XYPosition } from \"react-flow-renderer\"\n\n/**\n * Random number between:\n * @param min (included)\n * @param max (not included)\n */\nexport const randomBetween = (min: number, max: number) => Math.random() * (max - min) + min\n\n/**\n * Find appropriate position for the coming node.\n * @param canvasWidth Audio graph canvas width\n * @param canvasHeight Audio graph canvas height\n * @param bottom Place should be on the top or on the bottom\n */\nexport const newNodePosition = (\n  canvasWidth: number,\n  canvasHeight: number,\n  bottom = false\n): XYPosition => {\n  const halfHeight = canvasHeight / 2\n  return {\n    x: randomBetween(0, canvasWidth - 200),\n    y: bottom ? randomBetween(halfHeight, canvasHeight) : randomBetween(0, halfHeight),\n  }\n}\n\n/**\n * Fix canvas blur problem\n * @param canvas Canvas DOM element\n * @returns Dimensions array\n */\nexport const dpiFix = (canvas: HTMLCanvasElement) => {\n  const width = +getComputedStyle(canvas).getPropertyValue(\"width\").slice(0, -2)\n  const height = +getComputedStyle(canvas).getPropertyValue(\"height\").slice(0, -2)\n  const dpi = window.devicePixelRatio\n  canvas.setAttribute(\"width\", (width * dpi).toString())\n  canvas.setAttribute(\"height\", (height * dpi).toString())\n  return { width, height }\n}\n","/** @jsx jsx */\nimport { jsx, css } from \"@emotion/core\"\nimport styled from \"@emotion/styled\"\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\"\nimport { IconProp } from \"@fortawesome/fontawesome-svg-core\"\nimport { audioNodeTypes } from \"./AudioGraph\"\nimport { PropsWithChildren } from \"react\"\n\ntype GraphBtnProps = {\n  icon: IconProp\n  onClick: (type: keyof typeof audioNodeTypes) => void\n}\n\nexport const GraphButton = ({ icon, onClick, children }: PropsWithChildren<GraphBtnProps>) => (\n  <button\n    css={css`\n      height: 28px;\n      border-radius: 4px;\n      background-color: #212d40;\n      border-color: #212d40;\n      color: #fff;\n      display: flex;\n      align-items: center;\n      justify-content: space-between;\n      gap: 15px;\n      svg {\n        color: #ccc;\n      }\n      :hover svg {\n        color: #fff;\n      }\n    `}\n    // @ts-ignore\n    onClick={onClick}\n  >\n    <div className=\"text\">{children}</div>\n    <FontAwesomeIcon fixedWidth icon={icon} />\n  </button>\n)\n\nexport const GraphButtons = styled.div`\n  position: absolute;\n  top: 8px;\n  right: 10px;\n  z-index: 4;\n  display: flex;\n  flex-direction: column;\n  gap: 2px;\n  .text {\n    display: none;\n  }\n  &:hover .text {\n    display: block;\n  }\n`\n\nexport const GraphMutateButton = styled.button<any>`\n  position: absolute;\n  top: ${props => (props.fourth ? \"104px\" : props.third ? \"72px\" : props.second ? \"40px\" : \"8px\")};\n  right: 10px;\n  width: 160px;\n  height: 28px;\n  z-index: 4;\n  border-radius: 4px;\n  background-color: #212d40;\n  border-color: #212d40;\n  color: #fff;\n  svg {\n    float: left;\n    color: #ccc;\n  }\n`\n\nexport const NodeButton = styled.button<any>`\n  width: 100%;\n  height: 28px;\n  border-radius: 4px;\n  background-color: #212d40;\n  border-color: #212d40;\n  color: #fff;\n  svg {\n    float: left;\n    color: #ccc;\n  }\n`\n","import React, { useState, useRef, useEffect } from \"react\"\nimport ReactFlow, {\n  Edge,\n  Node,\n  addEdge,\n  Elements,\n  Controls,\n  Connection,\n  Background,\n  useStoreState,\n  removeElements,\n  BackgroundVariant,\n} from \"react-flow-renderer\"\nimport Oscillator from \"./nodes/Oscillator\"\nimport Gain from \"./nodes/Gain\"\nimport BiquadFilter from \"./nodes/BiquadFilter\"\nimport Analyser from \"./nodes/Analyser\"\nimport { newNodePosition } from \"../../scripts/utils\"\nimport { GraphButtons, GraphButton } from \"./buttons\"\nimport {\n  connectNodes,\n  disconnectNodes,\n  delNode,\n  AUDIO_CONTEXT_DESTINATION,\n} from \"../../scripts/audio\"\n\nexport const audioNodeTypes = {\n  oscillator: Oscillator,\n  gain: Gain,\n  biquadfilter: BiquadFilter,\n  analyser: Analyser,\n}\n\nconst defaultNode: Node = {\n  id: AUDIO_CONTEXT_DESTINATION,\n  type: \"output\",\n  selectable: false,\n  connectable: true,\n  data: { label: \"Audio Output\" },\n  style: {\n    backgroundColor: \"#364156\",\n    color: \"#fff\",\n  },\n  position: { x: 0, y: 0 },\n}\n\nconst checkSize = (prev: number, next: number) => prev === next\n\nconst NodeGraph = () => {\n  // const nodes = useStoreState(store => store.nodes)\n  const width = useStoreState(store => store.width, checkSize)\n  const height = useStoreState(store => store.height, checkSize)\n  const [elements, setElements] = useState<Elements>([])\n  const selected = useRef<Elements | null>(null)\n  const nextId = useRef<number>(1)\n\n  useEffect(() => {\n    if (width > 0 && height > 0 && elements.length === 0) {\n      defaultNode.position = { x: width / 2, y: height / 2 }\n      setElements([defaultNode])\n    }\n  }, [width, height, elements])\n\n  const removeSelected = () => {\n    if (selected.current !== null) {\n      selected.current.forEach(el => {\n        if (el.type !== undefined) {\n          delNode(el.id)\n        } else {\n          disconnectNodes((el as Edge).source, (el as Edge).target)\n        }\n      })\n\n      setElements(removeElements(selected.current, elements))\n      selected.current = null\n    }\n  }\n\n  const onConnect = (connection: Edge | Connection) => {\n    if (connection.source !== null && connection.target !== null) {\n      connectNodes(connection.source, connection.target)\n      setElements(els => addEdge(connection, els))\n    }\n  }\n\n  const addAudioNode = (type: keyof typeof audioNodeTypes) => () =>\n    setElements([\n      ...elements,\n      {\n        id: (nextId.current++).toString(),\n        type,\n        className: \"audioNode\",\n        position: newNodePosition(width, height),\n      },\n    ])\n\n  return (\n    <ReactFlow\n      elements={elements}\n      onConnect={onConnect}\n      nodeTypes={audioNodeTypes}\n      onSelectionChange={els => (selected.current = els)}\n      connectionLineStyle={{ stroke: \"#006\" }}\n      style={{ backgroundColor: \"#7d4e57\" }}\n      snapToGrid={true}\n      snapGrid={[16, 16]}\n    >\n      <Controls showInteractive={false} />\n      <Background variant={BackgroundVariant.Lines} color=\"#A16873\" gap={32} />\n\n      <GraphButtons>\n        <GraphButton onClick={addAudioNode(\"oscillator\")} icon={[\"fas\", \"wave-sine\"]}>\n          Add Oscillator\n        </GraphButton>\n        <GraphButton onClick={addAudioNode(\"gain\")} icon={[\"fas\", \"volume\"]}>\n          Add Gain\n        </GraphButton>\n        <GraphButton onClick={addAudioNode(\"biquadfilter\")} icon={[\"fas\", \"filter\"]}>\n          Add Biquad Filter\n        </GraphButton>\n        <GraphButton onClick={addAudioNode(\"analyser\")} icon={[\"fas\", \"analytics\"]}>\n          Add Analyser\n        </GraphButton>\n        <GraphButton onClick={removeSelected} icon={[\"fas\", \"trash-alt\"]}>\n          Remove Selected\n        </GraphButton>\n      </GraphButtons>\n    </ReactFlow>\n  )\n}\n\nexport default NodeGraph\n","import styled from \"@emotion/styled\"\n\nconst Main = styled.div`\n  width: 100vw;\n  height: 100vh;\n  margin: 0;\n  padding: 0;\n  display: flex;\n  flex-direction: column;\n  > div:nth-of-type(1) {\n    flex-grow: 0;\n  }\n  > div:nth-of-type(2) {\n    flex-grow: 1;\n  }\n`\n\nexport default Main\n","/** @jsx jsx */\n/* eslint-disable react-hooks/exhaustive-deps */\nimport { jsx } from \"@emotion/core\"\nimport { useRef, useEffect } from \"react\"\nimport { useSelector } from \"react-redux\"\nimport { nodes } from \"../../scripts/audio\"\nimport { selectAnalysers } from \"../../features/activeSound/activeSoundSlice\"\nimport { dpiFix } from \"../../scripts/utils\"\n\nexport default () => {\n  const analysers = useSelector(selectAnalysers)\n  const canvas = useRef<HTMLCanvasElement>(null)\n  const ctx = useRef<CanvasRenderingContext2D>()\n  const width = useRef<number>(0)\n  const height = useRef<number>(0)\n\n  useEffect(() => {\n    ctx.current = canvas.current!.getContext(\"2d\") as CanvasRenderingContext2D\n    //TODO: `dpiFix()` uneffective with css width and height, remove them\n    const dimensions = dpiFix(canvas.current!)\n    width.current = dimensions.width\n    height.current = dimensions.height\n  }, [])\n\n  const draw = () => {\n    ctx.current!.clearRect(0, 0, width.current, height.current)\n    analysers.forEach(analyser => {\n      const node = nodes.get(analyser.id) as AnalyserNode\n      if (node) {\n        ctx.current!.lineWidth = analyser.lineWidth\n        drawWave(node, analyser.color)\n      }\n    })\n\n    requestAnimationFrame(draw)\n  }\n\n  useEffect(() => {\n    if (analysers.length > 0) {\n      draw()\n    }\n  }, [analysers])\n\n  const drawWave = (analyser: AnalyserNode, color = \"#ff0000\") => {\n    const halfHeight = height.current / 2\n    ctx.current!.strokeStyle = color\n    const bufferLength = analyser.frequencyBinCount\n    const data = new Float32Array(bufferLength)\n    analyser.getFloatTimeDomainData(data)\n    let sliceWidth = width.current / bufferLength\n    let x = 0\n    let y\n    ctx.current!.beginPath()\n    ctx.current!.moveTo(0, halfHeight)\n    for (let i = 0; i < bufferLength; i++) {\n      y = halfHeight + data[i] * halfHeight\n      ctx.current!.lineTo(x, y)\n      x += sliceWidth\n    }\n    ctx.current!.lineTo(width.current, halfHeight)\n    ctx.current!.stroke()\n  }\n\n  return <canvas ref={canvas} css={{ width: \"100%\", height: \"100%\", backgroundColor: \"#364156\" }} />\n}\n","/** @jsx jsx */\nimport { jsx, css } from \"@emotion/core\"\nimport styled from \"@emotion/styled\"\nimport { useDispatch } from \"react-redux\"\nimport { setPlayFrequency } from \"../../features/activeSound/activeSoundSlice\"\n\nconst pianoStyle = css`\n  display: flex;\n  width: 100%;\n  > div {\n    flex: 1;\n    position: relative;\n    height: 240px;\n    margin: 0 1px;\n    border: 1px solid #999;\n    border-radius: 1px 1px 5px 5px;\n    box-shadow: 2px 2px 5px #0006;\n    cursor: pointer;\n    background-color: #aaa;\n    &:hover {\n      background-color: #999;\n    }\n    &:active {\n      background-color: #888;\n    }\n    &::after {\n      position: absolute;\n      bottom: 0.8rem;\n      width: 100%;\n      text-align: center;\n      content: attr(data-note);\n      font: 500 1.72rem Candara;\n      color: #121212;\n    }\n  }\n  > div > div {\n    position: absolute;\n    top: -1px;\n    left: 70%;\n    height: 160px;\n    width: calc(60% + 2px);\n    border-radius: 1px 1px 5px 5px;\n    box-shadow: 2px 2px 5px #0006;\n    cursor: pointer;\n    z-index: 10;\n    background-color: #000;\n    &:hover {\n      background-color: #111;\n    }\n    &:active {\n      background-color: #222;\n    }\n  }\n`\n\nconst PianoWrapper = styled.div`\n  display: flex;\n  align-items: center;\n  font-size: 3rem;\n  justify-content: center;\n  background-color: #11151c;\n  color: #fff;\n`\n\nconst Piano = () => {\n  const dispatch = useDispatch()\n\n  return (\n    <PianoWrapper>\n      <div\n        css={pianoStyle}\n        onMouseDown={event => {\n          const el = event.target\n          if (el) {\n            dispatch(\n              setPlayFrequency(+((el as HTMLDivElement).getAttribute(\"data-frequency\") as string))\n            )\n          }\n        }}\n        onMouseUp={() => void dispatch(setPlayFrequency(null))}\n      >\n        <div data-frequency=\"261.626\" data-note=\"C\">\n          <div data-frequency=\"277.18\" data-note=\"C#\"></div>\n        </div>\n        <div data-frequency=\"293.665\" data-note=\"D\">\n          <div data-frequency=\"311.127\"></div>\n        </div>\n        <div data-frequency=\"329.628\" data-note=\"E\"></div>\n        <div data-frequency=\"349.228\" data-note=\"F\">\n          <div data-frequency=\"369.994\"></div>\n        </div>\n        <div data-frequency=\"391.995\" data-note=\"G\">\n          <div data-frequency=\"415.305\"></div>\n        </div>\n        <div data-frequency=\"440.000\" data-note=\"A\">\n          <div data-frequency=\"466.164\"></div>\n        </div>\n        <div data-frequency=\"493.883\" data-note=\"B\"></div>\n        <div data-frequency=\"523.251\" data-note=\"C\">\n          <div data-frequency=\"554.365\"></div>\n        </div>\n        <div data-frequency=\"587.330\" data-note=\"D\">\n          <div data-frequency=\"622.254\"></div>\n        </div>\n        <div data-frequency=\"659.255\" data-note=\"E\"></div>\n        <div data-frequency=\"698.457\" data-note=\"F\">\n          <div data-frequency=\"739.989\"></div>\n        </div>\n        <div data-frequency=\"783.991\" data-note=\"G\">\n          <div data-frequency=\"830.609\"></div>\n        </div>\n        <div data-frequency=\"880.000\" data-note=\"A\">\n          <div data-frequency=\"932.328\"></div>\n        </div>\n        <div data-frequency=\"987.767\" data-note=\"B\"></div>\n        <div data-frequency=\"1046.50\" data-note=\"C\"></div>\n      </div>\n    </PianoWrapper>\n  )\n}\n\nexport default Piano\n","import styled from \"@emotion/styled\"\n\nconst HeaderWrapper = styled.div`\n  background-color: #11151c;\n  color: #fff;\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  padding: 0 8px 0 3px;\n`\n\nexport default HeaderWrapper\n","/** @jsx jsx */\nimport { jsx, css } from \"@emotion/core\"\nimport { useDispatch } from \"react-redux\"\nimport { toggleMenu } from \"../../features/ux/uxSlice\"\n\nconst menuWrapper = css`\n  top: 0;\n  right: 0;\n  width: 300px;\n  position: fixed;\n  z-index: 200;\n  background-color: #000;\n`\n\nconst Menu = () => {\n  const dispatch = useDispatch()\n\n  return (\n    <div\n      css={menuWrapper}\n      onMouseEnter={() => dispatch(toggleMenu())}\n      onMouseLeave={() => dispatch(toggleMenu())}\n    >\n      <h2 css={{ textAlign: \"center\" }}>MENU</h2>\n      <ul css={{ lineHeight: 1.8, fontSize: \"1.1rem\" }}>\n        <li>One</li>\n        <li>Two</li>\n        <li>Three</li>\n      </ul>\n    </div>\n  )\n}\n\nexport default Menu\n","import React from \"react\"\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\"\nimport { selectMenu, toggleMenu } from \"../../features/ux/uxSlice\"\nimport { useSelector, useDispatch } from \"react-redux\"\nimport Menu from \"./Menu\"\n\nconst MenuOpener = () => {\n  const menu = useSelector(selectMenu)\n  const dispatch = useDispatch()\n\n  return (\n    <>\n      <FontAwesomeIcon\n        icon={[\"fas\", \"bars\"]}\n        size=\"lg\"\n        onMouseEnter={() => dispatch(toggleMenu())}\n        onMouseLeave={() => dispatch(toggleMenu())}\n      />\n      {menu && <Menu />}\n    </>\n  )\n}\n\nexport default MenuOpener\n","/** @jsx jsx */\nimport { jsx } from \"@emotion/core\"\n\nconst Brand = () => {\n  return (\n    <div css={{ display: \"flex\", alignItems: \"flex-end\" }}>\n      <h1 css={{ margin: 0, color: \"#f2f4f7\" }}>WAAπSynth</h1>\n      <div css={{ margin: 4, color: \"#d9dbde\" }}>v{process.env.REACT_APP_VERSION}</div>\n    </div>\n  )\n}\n\nexport default Brand\n","/** @jsx jsx */\nimport { jsx, css } from \"@emotion/core\"\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\"\nimport { selectName, setName } from \"../../features/activeSound/activeSoundSlice\"\nimport { useSelector, useDispatch } from \"react-redux\"\n\nconst Name = () => {\n  const name = useSelector(selectName)\n  const dispatch = useDispatch()\n\n  return (\n    <div>\n      <FontAwesomeIcon icon={[\"fal\", \"file-signature\"]} size=\"lg\" />\n      <input\n        type=\"text\"\n        defaultValue={name}\n        onChange={event => dispatch(setName(event.target.value))}\n        css={css`\n          background-color: transparent;\n          border: 1px solid #323333;\n          font-family: Tomorrow;\n          padding: 2px 4px;\n          margin-left: 8px;\n          color: #fff;\n        `}\n        onFocus={event => event.target.select()}\n      />\n    </div>\n  )\n}\n\nexport default Name\n","/** @jsx jsx */\nimport { jsx } from \"@emotion/core\"\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\"\n\nconst Save = () => <FontAwesomeIcon icon={[\"fal\", \"save\"]} size=\"lg\" />\n\nexport default Save\n","/** @jsx jsx */\nimport { jsx } from \"@emotion/core\"\nimport HeaderWrapper from \"./HeaderWrapper\"\nimport MenuOpener from \"./MenuOpener\"\nimport Brand from \"./Brand\"\nimport Name from \"./Name\"\nimport Save from \"./Save\"\n\nconst Header = () => {\n  return (\n    <HeaderWrapper>\n      <Brand />\n      <div css={{ display: \"flex\", gap: 18, opacity: 0.4 }}>\n        <Name />\n        <Save />\n        <MenuOpener />\n      </div>\n    </HeaderWrapper>\n  )\n}\n\nexport default Header\n","import React, { Component } from \"react\"\n// import PropTypes from \"prop-types\"\n\nexport default class ErrorBoundary extends Component {\n  state = {\n    error: \"\",\n    errorInfo: \"\",\n    hasError: false,\n  }\n  static getDerivedStateFromError(error: Error) {\n    return { hasError: true, error }\n  }\n  componentDidCatch(error: Error, errorInfo: React.ErrorInfo) {\n    // eslint-disable-next-line no-console\n    console.log({ error, errorInfo })\n    alert(error)\n    this.setState({ errorInfo })\n  }\n  render() {\n    // next code block goes here\n    return this.props.children\n  }\n}\n// ErrorBoundary.propTypes = {\n//   children: PropTypes.oneOfType([PropTypes.object, PropTypes.array]).isRequired,\n// }\n","/** @jsx jsx */\nimport { jsx } from \"@emotion/core\"\nimport { ReactFlowProvider } from \"react-flow-renderer\"\nimport EditorWrapper from \"./components/misc/EditorWrapper\"\nimport AudioGraph from \"./components/graph/AudioGraph\"\nimport Main from \"./components/misc/Main\"\nimport Visual from \"./components/visual/AnalyserView\"\nimport Piano from \"./components/piano/Piano\"\nimport Header from \"./components/header/Header\"\nimport ErrorBoundary from \"./ErrorBoundary\"\n\nexport default function App() {\n  return (\n    <Main>\n      <Header />\n      <EditorWrapper>\n        <ErrorBoundary>\n          <ReactFlowProvider>\n            <AudioGraph />\n          </ReactFlowProvider>\n          <Visual />\n          <Piano />\n        </ErrorBoundary>\n      </EditorWrapper>\n    </Main>\n  )\n}\n","import React, { Fragment } from \"react\"\nimport ReactDOM from \"react-dom\"\nimport { Provider } from \"react-redux\"\nimport store from \"./store\"\nimport App from \"./App\"\n// import * as serviceWorker from \"./serviceWorker\"\nimport { Global, css } from \"@emotion/core\"\nimport { library } from \"@fortawesome/fontawesome-svg-core\"\nimport { fab } from \"@fortawesome/free-brands-svg-icons\"\nimport { fad } from \"@fortawesome/pro-duotone-svg-icons\"\nimport { fal } from \"@fortawesome/pro-light-svg-icons\"\nimport { far } from \"@fortawesome/pro-regular-svg-icons\"\nimport { fas } from \"@fortawesome/pro-solid-svg-icons\"\n\n//TODO: collect icons and check sizes https://fontawesome.com/how-to-use/on-the-web/using-with/react#using\nlibrary.add(fab, fad, fal, far, fas)\n\nReactDOM.render(\n  // <React.StrictMode>\n  <Fragment>\n    <Global\n      styles={css`\n        @import url(\"https://fonts.googleapis.com/css2?family=Tomorrow&display=swap\");\n        * {\n          box-sizing: border-box;\n        }\n        html,\n        body {\n          padding: 0;\n          margin: 0;\n          width: 100vw;\n          height: 100vh;\n          font-family: Tomorrow, sans-serif;\n          font-style: normal;\n          font-weight: 400;\n          font-size: 16px;\n          background-color: #000;\n        }\n        button {\n          font-family: Tomorrow, sans-serif;\n        }\n        .react-flow__controls-button {\n          width: 25px;\n          height: 25px;\n          opacity: 0.5;\n        }\n        .react-flow__handle {\n          width: 1rem;\n          height: 1rem;\n        }\n        .react-flow__node.audioNode {\n          border: 2px solid #212d40;\n          border-radius: 3px;\n          background-color: #212d40;\n          color: #fff;\n          padding: 10px;\n          &.selected {\n            border-color: #aebdd5;\n          }\n        }\n        .react-flow__edge {\n          .react-flow__edge-path {\n            stroke: #33c;\n          }\n          &.selected .react-flow__edge-path {\n            stroke-width: 2.5;\n            stroke: #aebdd5;\n          }\n        }\n      `}\n    />\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </Fragment>,\n  // </React.StrictMode>,\n  document.getElementById(\"root\")\n)\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n// serviceWorker.unregister()\n"],"sourceRoot":""}