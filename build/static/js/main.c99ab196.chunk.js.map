{"version":3,"sources":["components/elems/styled.tsx","hooks/useAudio.ts","components/elems/CloseButton.tsx","components/elems/NodeOverview.tsx","scripts/audio.ts","hooks/useFrequency.tsx","hooks/useGain.tsx","hooks/useType.tsx","hooks/useMicrophone.ts","components/Menu.tsx","components/AudioNodeList.tsx","components/Page.tsx","App.tsx","components/nodes/AnalyserNode.tsx","components/nodes/BiquadFilterNode.tsx","components/nodes/ConvolverNode.tsx","components/nodes/GainNode.tsx","components/nodes/MediaElementAudioSourceNode.tsx","components/nodes/MediaStreamAudioSourceNode.tsx","components/nodes/OscillatorNode.tsx","hooks/useDetune.tsx","index.tsx","components/nodes sync /^/.*$"],"names":["Main","styled","div","width","Section","props","attrs","id","className","children","Example","inputNodes","OscillatorNode","name","MediaElementAudioSourceNode","MediaStreamAudioSourceNode","useAudio","store","useContext","RoutingContext","reconnectAllNodes","routing","reconnectAllNodesMiddleware","setRouting","length","forEach","bundle","index","node","disconnect","from","el","type","params","start","connect","audioContext","destination","createAudioNodeBundle","nodeType","pushAfter","includes","findIndex","window","confirm","splice","Math","random","toString","createElement","require","default","key","setNode","find","removeAudioNodeBundle","filter","setParam","value","param","nodeTypes","CloseButton","onClick","css","position","top","right","title","aria-label","NodeOverview","link","style","href","textDecoration","fontSize","marginLeft","marginTop","role","AudioContext","webkitAudioContext","ctime","currentTime","useFrequency","useState","frequency","setFrequency","useEffect","setValueAtTime","min","max","onChange","event","currentTarget","valueAsNumber","useGain","step","gain","setGain","useType","types","setType","map","typeVal","checked","htmlFor","textTransform","useMicrophone","requestAudio","rejectedCallback","navigator","mediaDevices","getUserMedia","video","audio","catch","console","error","devices","a","enumerateDevices","device","kind","add","cursor","Menu","document","getElementById","remove","clickHandler","preventDefault","getAttribute","substring","requestAnimationFrame","elem","offsetTop","scrollTo","left","behavior","AudioNodeList","Page","createContext","App","Provider","maxWin","bottom","zIndex","fftSizes","i","push","pow","dataTypeList","AnalyserNode","useRef","createAnalyser","bufferLength","current","frequencyBinCount","dataArrayByte","Uint8Array","dataArrayFloat","Float32Array","canvasRef","canvasWidth","canvasHeight","maximised","setMaximised","fftSize","setFftSize","dataType","setDataType","refreshCanvasSize","clientWidth","clientHeight","height","maximise","toMax","body","classList","draw","canvasCtx","clearRect","fillStyle","lineWidth","getByteTimeDomainData","y","sliceWidth","x","beginPath","moveTo","lineTo","stroke","drawByteTimeDomainData","getFloatTimeDomainData","drawFloatTimeDomainData","getByteFrequencyData","barHeight","barWidth","fillRect","drawByteFrequencyData","getFloatFrequencyData","posX","drawFloatFrequencyData","getContext","marginRight","fft","disabled","margin","undefined","ref","BiquadFilterNode","createBiquadFilter","typeForm","frequencyForm","gainForm","ConvolverNode","GainNode","createGain","source","setSource","audioSource","setAudioSource","playable","setPlayable","createMediaElementSource","onSubmit","target","crossOrigin","onError","message","controls","src","onCanPlayThrough","supportedConstraints","getSupportedConstraints","inputs","setInputs","deviceId","setDeviceId","setStart","autoGainControl","setAutoGainControl","channelCount","setChannelCount","echoCancellation","setEchoCancellation","noiseSuppression","setNoiseSuppression","sampleRate","setSampleRate","sampleSize","setSampleSize","startStream","stream","createMediaStreamSource","alert","stopStream","mediaStream","getTracks","stop","devs","Object","keys","indexOf","fetchDevices","label","replace","ev","Array","apply","maxChannelCount","Number","call","createOscillator","detuneForm","detune","setDetune","useDetune","ReactDOM","render","StrictMode","webpackContext","req","webpackContextResolve","__webpack_require__","o","e","Error","code","resolve","module","exports"],"mappings":"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","file":"static/js/main.c99ab196.chunk.js","sourcesContent":["import React from \"react\"\nimport styled from \"@emotion/styled\"\n\nexport const Main = styled.div({ width: \"100%\" })\n\ntype Props = {\n  children: React.ReactNode\n  id?: string\n}\n\nexport const Section = (props: Props) => {\n  const attrs = {} as { [key: string]: any }\n  if (props.id) {\n    attrs.id = props.id\n  }\n  return (\n    <section className=\"component\" {...attrs}>\n      {props.children}\n    </section>\n  )\n}\n\nexport const Example = ({ children }: Props) => <div className=\"example\">{children}</div>\n","import { useContext, createElement } from \"react\"\nimport { audioContext } from \"../scripts/audio\"\nimport { RoutingContext } from \"../App\"\n\nconst inputNodes = [\n  OscillatorNode.name,\n  MediaElementAudioSourceNode.name,\n  MediaStreamAudioSourceNode.name,\n]\n\nexport type AudioNodeBundle = {\n  el: JSX.Element\n  id: string\n  params: {\n    [key: string]: any\n  }\n  node?: AudioNode\n}\n\nexport type NodeProps = {\n  id: string\n}\n\n/**\n * Audio helper functions.\n */\nexport default function useAudio() {\n  const store = useContext(RoutingContext)\n\n  const reconnectAllNodes = () => {\n    let { routing } = store\n    routing = reconnectAllNodesMiddleware(routing)\n    store.setRouting([...routing])\n  }\n\n  const reconnectAllNodesMiddleware = (routing: AudioNodeBundle[]) => {\n    if (routing.length > 0) {\n      routing.forEach((bundle, index) => {\n        if (bundle.node) {\n          bundle.node.disconnect()\n          if (index > 0) {\n            const from = routing![index - 1]\n            if (\n              !from.node ||\n              (from.el.type.name === OscillatorNode.name && from.params.start === false)\n            ) {\n              return\n            }\n            from.node.connect(bundle.node)\n          }\n        }\n      })\n      routing[routing.length - 1].node?.connect(audioContext.destination)\n    }\n    return routing\n  }\n\n  const createAudioNodeBundle = (nodeType: string) => {\n    let { routing } = store\n    let pushAfter = true\n\n    if (inputNodes.includes(nodeType)) {\n      const index = routing.findIndex(bundle => inputNodes.includes(bundle.el.type.name))\n      if (index !== -1) {\n        if (!window.confirm(`Input Node Already Exists!\\n\\nWould you like to replace it?`)) {\n          return\n        }\n        routing.splice(index, 1)\n      }\n      pushAfter = false\n    }\n\n    const id = \"k\" + Math.random().toString()\n    const node: AudioNodeBundle = {\n      el: createElement(require(`../components/nodes/${nodeType}`).default, { key: id, id }),\n      id,\n      params: {},\n    }\n    routing[pushAfter ? \"push\" : \"unshift\"](node)\n    store.setRouting([...routing])\n    return node\n  }\n\n  const setNode = (id: string, node: AudioNode) => {\n    let { routing } = store\n    routing.find(bundle => bundle.id === id)!.node = node\n    store.setRouting([...routing])\n    reconnectAllNodes()\n  }\n\n  const setParam = (id: string, key: string, value: any) => {\n    let { routing } = store\n    routing.find(node => node.id === id)!.params[key] = value\n    store.setRouting([...routing])\n  }\n\n  const param = (id: string, key: string) => store.routing.find(node => node.id === id)!.params[key]\n\n  const removeAudioNodeBundle = (id: string) => {\n    let { routing } = store\n    routing = routing.filter(bundle => bundle.id !== id)\n    routing = reconnectAllNodesMiddleware(routing)\n    store.setRouting([...routing])\n  }\n\n  const nodeTypes = () => store.routing\n\n  return {\n    audioContext,\n    createAudioNodeBundle,\n    setNode,\n    reconnectAllNodes,\n    removeAudioNodeBundle,\n    setParam,\n    param,\n    nodeTypes,\n  }\n}\n","/** @jsx jsx */\nimport { jsx } from \"@emotion/core\"\n\ntype Props = {\n  onClick?: (event: React.MouseEvent<HTMLButtonElement, MouseEvent>) => void\n}\nexport default function CloseButton({ onClick }: Props) {\n  const attrs = onClick ? { onClick } : {}\n  return (\n    <div\n      className=\"title-bar-controls\"\n      css={{ position: \"absolute\", top: 8, right: 8 }}\n      title=\"Remove Node\"\n    >\n      <button aria-label=\"Close\" {...attrs}></button>\n    </div>\n  )\n}\n","/** @jsx jsx */\nimport { jsx } from \"@emotion/core\"\nimport CloseButton from \"./CloseButton\"\nimport useAudio from \"../../hooks/useAudio\"\n\ntype Props = {\n  children?: React.ReactNode\n  /** AudioNodeBundle ID for remove node */\n  id?: string\n  link?: string\n}\n\nexport default function NodeOverview({ children, id, link }: Props) {\n  const { removeAudioNodeBundle } = useAudio()\n\n  return (\n    <blockquote style={{ position: \"relative\" }}>\n      {id && <CloseButton onClick={() => removeAudioNodeBundle(id)} />}\n      {children}\n      {link && (\n        <a\n          href={link}\n          css={{\n            textDecoration: \"none\",\n            position: \"absolute\",\n            fontSize: 13,\n            marginLeft: 3,\n            marginTop: -2,\n          }}\n          title=\"Specification\"\n        >\n          <span role=\"img\" aria-label=\"Link to Specification\">\n            🔗\n          </span>\n        </a>\n      )}\n    </blockquote>\n  )\n}\n","// @ts-ignore\nexport const audioContext = new (window.AudioContext || window.webkitAudioContext)()\n\nexport const ctime = audioContext.currentTime\nexport const destination = audioContext.destination\n","import React, { useState, useEffect } from \"react\"\nimport { ctime } from \"../scripts/audio\"\n\nexport default function useFrequency(node: AudioNode) {\n  const [frequency, setFrequency] = useState(440)\n\n  useEffect(() => {\n    // @ts-ignore\n    node.frequency.setValueAtTime(frequency, ctime)\n    // @ts-ignore\n  }, [node.frequency, frequency])\n\n  return (\n    <fieldset>\n      <label>Frequency: {frequency}</label>\n      <input\n        className=\"frequency\"\n        type=\"range\"\n        min=\"-24000\"\n        max=\"24000\"\n        value={frequency}\n        onChange={event => setFrequency(event.currentTarget.valueAsNumber)}\n      />\n    </fieldset>\n  )\n}\n","import React, { useState, useEffect } from \"react\"\nimport { ctime } from \"../scripts/audio\"\n\nexport default function useGain(node: AudioNode, min = -40, max = 40, step = 1) {\n  const [gain, setGain] = useState(1)\n\n  useEffect(() => {\n    // @ts-ignore\n    node.gain.setValueAtTime(gain, ctime)\n    // @ts-ignore\n  }, [node.gain, gain])\n\n  return (\n    <div className=\"field-row\">\n      <label>\n        Gain:\n        <br />\n        {gain}\n      </label>\n      <div className=\"is-vertical\">\n        <input\n          type=\"range\"\n          min={min}\n          max={max}\n          step={step}\n          value={gain}\n          onChange={event => setGain(event.currentTarget.valueAsNumber)}\n        />\n      </div>\n    </div>\n  )\n}\n","/** @jsx jsx */\nimport { jsx } from \"@emotion/core\"\nimport { useState, useEffect } from \"react\"\n\nexport default function useType(node: AudioNode, types: string[]) {\n  const [type, setType] = useState(types[0])\n\n  useEffect(() => {\n    // @ts-ignore\n    node.type = type\n    // @ts-ignore\n  }, [node.type, type])\n\n  return (\n    <fieldset>\n      <legend>Type</legend>\n      {types.map(typeVal => (\n        <div key={typeVal} className=\"field-row\">\n          <input\n            id={typeVal}\n            type=\"radio\"\n            value={typeVal}\n            checked={type === typeVal}\n            onChange={event => setType(event.currentTarget.value)}\n          />\n          <label htmlFor={typeVal} css={{ textTransform: \"capitalize\" }}>\n            {typeVal}\n          </label>\n        </div>\n      ))}\n    </fieldset>\n  )\n}\n","export default function useMicrophone() {\n  const requestAudio = (rejectedCallback?: (reason: any) => void) =>\n    navigator.mediaDevices\n      .getUserMedia({ video: false, audio: true })\n      .catch(rejectedCallback || console.error)\n\n  const devices = async () => {\n    const devices = await navigator.mediaDevices.enumerateDevices()\n    return devices.filter(device => device.kind === \"audioinput\")\n  }\n\n  return {\n    requestAudio,\n    devices,\n  }\n}\n","/** @jsx jsx */\nimport { css, jsx } from \"@emotion/core\"\nimport useAudio from \"../hooks/useAudio\"\nimport useMicrophone from \"../hooks/useMicrophone\"\n\nconst add = css({\n  cursor: \"cell\",\n})\n\nexport default function Menu() {\n  const { createAudioNodeBundle } = useAudio()\n  const { requestAudio } = useMicrophone()\n\n  requestAudio(() => document.getElementById(\"micmenu\")?.remove())\n\n  const clickHandler = (event: React.MouseEvent) => {\n    event.preventDefault()\n    const nodeType = event.currentTarget.getAttribute(\"href\")?.substring(1)\n    if (nodeType) {\n      const node = createAudioNodeBundle(nodeType)\n      if (node) {\n        window.requestAnimationFrame(() => {\n          const elem = document.getElementById(node.id)\n          if (elem?.offsetTop) {\n            window.scrollTo({ top: elem.offsetTop, left: 0, behavior: \"smooth\" })\n          }\n        })\n      }\n    }\n  }\n\n  return (\n    <aside>\n      <ul className=\"tree-view\">\n        <li>\n          <a href=\"#intro\">Intro</a>\n        </li>\n        <li>\n          <a href=\"#nodes\">Audio Nodes</a>\n          <ul>\n            <li>\n              Audio Source\n              <ul>\n                <li>\n                  <a href=\"#OscillatorNode\" onClick={clickHandler} css={add}>\n                    Oscillator\n                  </a>\n                </li>\n                <li>\n                  <a href=\"#MediaElementAudioSourceNode\" onClick={clickHandler} css={add}>\n                    Audio File\n                  </a>\n                </li>\n                <li id=\"micmenu\">\n                  <a href=\"#MediaStreamAudioSourceNode\" onClick={clickHandler} css={add}>\n                    Microphone\n                  </a>\n                </li>\n              </ul>\n            </li>\n            <li>\n              Effect Filters\n              <ul>\n                <li>\n                  <a href=\"#BiquadFilterNode\" onClick={clickHandler} css={add}>\n                    Biquad\n                  </a>\n                </li>\n                <li>\n                  <a href=\"#GainNode\" onClick={clickHandler} css={add}>\n                    Gain\n                  </a>\n                </li>\n                <li>\n                  <a href=\"#ConvolverNode\" onClick={clickHandler} css={add}>\n                    Convolver\n                  </a>\n                </li>\n              </ul>\n            </li>\n            <li>\n              Visualization\n              <ul>\n                <li>\n                  <a href=\"#AnalyserNode\" onClick={clickHandler} css={add}>\n                    Analyser\n                  </a>\n                </li>\n              </ul>\n            </li>\n          </ul>\n        </li>\n        <li>\n          <a href=\"#outro\">Outro</a>\n        </li>\n      </ul>\n    </aside>\n  )\n}\n","/** @jsx jsx */\nimport { Fragment } from \"react\"\nimport { jsx } from \"@emotion/core\"\nimport useAudio from \"../hooks/useAudio\"\n\nexport default function AudioNodeList() {\n  const { nodeTypes } = useAudio()\n\n  if (nodeTypes().length === 0) {\n    return (\n      <p>\n        The <code>AudioContext</code> interface inherits the nodes an create an audio routing graph.\n        <strong>Click on a node name</strong> on the left menu to add to the graph.{\" \"}\n        <span css={{ position: \"absolute\", fontSize: 21, marginLeft: 4, marginTop: -4 }}>🖯</span>\n      </p>\n    )\n  }\n\n  return <Fragment>{nodeTypes().map(node => node.el)}</Fragment>\n}\n","/** @jsx jsx */\nimport { jsx } from \"@emotion/core\"\nimport AudioNodeList from \"./AudioNodeList\"\n\nexport default function Page() {\n  return (\n    <main css={{ width: 600 }}>\n      <h1>Audio Nodes</h1>\n      <hr />\n      <p>Web Audio API — Audio Nodes Showcase</p>\n      <h2 id=\"intro\">Intro</h2>\n      <p>\n        Audio Nodes are a significant part of the <strong>Web Audio API</strong>, provide the\n        capability to process audio just like in a professional desktop application. In this page I\n        just try some of the existing nodes, surely to achieve the imagined goal the scriptable{\" \"}\n        <code>AudioWorklet</code> interface is to look forward.\n      </p>\n\n      <h2 id=\"nodes\">Audio Nodes</h2>\n\n      <AudioNodeList />\n\n      <h2 id=\"outro\">Outro</h2>\n\n      <p>\n        The main institution of this page is to getting more familiar with the{\" \"}\n        <a href=\"https://webaudio.github.io/web-audio-api/\">Web Audio API</a> and practice some{\" \"}\n        <a href=\"https://create-react-app.dev/\">React</a>. It can't be complete but can be updated\n        from time to time.{\" \"}\n        <strong>\n          <a href=\"https://github.com/SubZtep/audionodes\">Its GitHub Page</a>\n        </strong>{\" \"}\n        is open for issues, also fork it, create a pull request if you mind, license the{\" \"}\n        <a href=\"https://unlicense.org/\">Unlicense</a>.\n      </p>\n\n      <p>\n        Layout is a copycat of the amazing <a href=\"https://github.com/jdan/98.css\">98.css</a> demo\n        page. I think this oldskool design and web audio matching, both trigger similar feelings.\n      </p>\n\n      <p>\n        Thanks for checking and hope you found it moderately amusing not just wasting time. Here is{\" \"}\n        <strong>\n          <a href=\"https://twitter.com/SubZtep\">My Twitter</a>\n        </strong>{\" \"}\n        if you are into it, <i>Take Care!</i>\n      </p>\n    </main>\n  )\n}\n","import React, { createContext, useState } from \"react\"\nimport Menu from \"./components/Menu\"\nimport Page from \"./components/Page\"\nimport { AudioNodeBundle } from \"./hooks/useAudio\"\n\ntype RoutingContextType = {\n  routing: AudioNodeBundle[]\n  setRouting: (routing: AudioNodeBundle[]) => void\n}\n\nexport const RoutingContext = createContext<RoutingContextType>({\n  routing: [],\n  setRouting: () => {},\n})\n\nexport default function App() {\n  const [routing, setRouting] = useState<AudioNodeBundle[]>([])\n  return (\n    <RoutingContext.Provider value={{ routing, setRouting }}>\n      <Menu />\n      <Page />\n    </RoutingContext.Provider>\n  )\n}\n","/** @jsx jsx */\nimport { css, jsx } from \"@emotion/core\"\nimport { useRef, useEffect, useState } from \"react\"\nimport useAudio, { NodeProps } from \"../../hooks/useAudio\"\nimport { Main, Section, Example } from \"../elems/styled\"\nimport NodeOverview from \"../elems/NodeOverview\"\n\nconst maxWin = css({\n  position: \"fixed\",\n  top: 0,\n  right: 0,\n  bottom: 0,\n  left: 0,\n  zIndex: 100,\n})\n\nconst fftSizes: number[] = []\nfor (let i = 5; i < 16; i++) {\n  fftSizes.push(Math.pow(2, i))\n}\n\nconst dataTypeList = [\n  \"Time Domain (Byte)\",\n  \"Time Domain (Float)\",\n  \"Frequency (Byte)\",\n  \"Frequency (Float)\",\n]\n\nexport default function AnalyserNode({ id }: NodeProps) {\n  const { audioContext, setNode } = useAudio()\n  const node = useRef(audioContext.createAnalyser())\n  const bufferLength = useRef<number>(node.current.frequencyBinCount)\n  const dataArrayByte = useRef<Uint8Array>(new Uint8Array(bufferLength.current))\n  const dataArrayFloat = useRef<Float32Array>(new Float32Array(bufferLength.current))\n  const canvasRef = useRef<HTMLCanvasElement>(null)\n  const canvasWidth = useRef(320)\n  const canvasHeight = useRef(240)\n  const [maximised, setMaximised] = useState(false)\n  const [fftSize, setFftSize] = useState(2048)\n  /**\n   * `dataTypeList` indexes\n   * 0: getByteTimeDomainData\n   * 1: getFloatTimeDomainData\n   * 2: getByteFrequencyData\n   * 3: getFloatFrequencyData\n   */\n  const [dataType, setDataType] = useState(0)\n\n  const refreshCanvasSize = () => {\n    if (canvasRef.current) {\n      canvasWidth.current = canvasRef.current.clientWidth\n      canvasHeight.current = canvasRef.current.clientHeight\n      canvasRef.current.width = canvasWidth.current\n      canvasRef.current.height = canvasHeight.current\n    }\n  }\n\n  const maximise = (toMax: boolean) => {\n    document.body.classList[toMax ? \"add\" : \"remove\"](\"noscroll\")\n    setMaximised(toMax)\n    window.requestAnimationFrame(refreshCanvasSize)\n  }\n\n  const drawByteTimeDomainData = (canvasCtx: CanvasRenderingContext2D) => {\n    node.current.getByteTimeDomainData(dataArrayByte.current)\n    const width = canvasWidth.current\n    const height = canvasHeight.current\n    let sliceWidth = (width * 1.0) / bufferLength.current\n    let x = 0\n    let v\n    let y\n    canvasCtx.beginPath()\n    canvasCtx.moveTo(0, height / 2)\n    for (let i = 0; i < bufferLength.current; i++) {\n      v = dataArrayByte.current[i] / 128.0\n      y = (v * height) / 2\n      canvasCtx.lineTo(x, y)\n      x += sliceWidth\n    }\n    canvasCtx.lineTo(width, height / 2)\n    canvasCtx.stroke()\n  }\n\n  const drawFloatTimeDomainData = (canvasCtx: CanvasRenderingContext2D) => {\n    node.current.getFloatTimeDomainData(dataArrayFloat.current)\n    const width = canvasWidth.current\n    const height = canvasHeight.current\n    let sliceWidth = (width * 1.0) / bufferLength.current\n    let x = 0\n    let v\n    let y\n    canvasCtx.beginPath()\n    canvasCtx.moveTo(0, height / 2)\n    for (let i = 0; i < bufferLength.current; i++) {\n      v = dataArrayFloat.current[i] * 200.0\n      y = height / 2 + v\n      canvasCtx.lineTo(x, y)\n      x += sliceWidth\n    }\n    canvasCtx.lineTo(width, height / 2)\n    canvasCtx.stroke()\n  }\n\n  const drawByteFrequencyData = (canvasCtx: CanvasRenderingContext2D) => {\n    node.current.getByteFrequencyData(dataArrayByte.current)\n    const width = canvasWidth.current\n    const height = canvasHeight.current\n    let barWidth = (width / bufferLength.current) * 2.5\n    let barHeight\n    let x = 0\n    for (let i = 0; i < bufferLength.current; i++) {\n      barHeight = dataArrayByte.current[i]\n      canvasCtx.fillRect(x, height - barHeight / 2, barWidth, barHeight / 2)\n      x += barWidth + 1\n    }\n  }\n\n  const drawFloatFrequencyData = (canvasCtx: CanvasRenderingContext2D) => {\n    node.current.getFloatFrequencyData(dataArrayFloat.current)\n    const width = canvasWidth.current\n    const height = canvasHeight.current\n    let barWidth = (width / bufferLength.current) * 2.5\n    let barHeight\n    let posX = 0\n    for (let i = 0; i < bufferLength.current; i++) {\n      barHeight = (dataArrayFloat.current[i] + 140) * 2\n      canvasCtx.fillRect(posX, height - barHeight / 2, barWidth, barHeight / 2)\n      posX += barWidth + 1\n    }\n  }\n\n  const draw = (canvasCtx: CanvasRenderingContext2D) => {\n    canvasCtx.clearRect(0, 0, canvasWidth.current, canvasHeight.current)\n    canvasCtx.fillStyle = \"#333\"\n    canvasCtx.lineWidth = 2\n\n    switch (dataType) {\n      case 0:\n        drawByteTimeDomainData(canvasCtx)\n        break\n      case 1:\n        drawFloatTimeDomainData(canvasCtx)\n        break\n      case 2:\n        drawByteFrequencyData(canvasCtx)\n        break\n      case 3:\n        drawFloatFrequencyData(canvasCtx)\n        break\n    }\n\n    if (canvasRef.current) {\n      requestAnimationFrame(() => {\n        draw(canvasCtx)\n      })\n    }\n  }\n\n  useEffect(() => {\n    setNode(id, node.current)\n  }, [])\n\n  useEffect(() => {\n    const canvasCtx = canvasRef.current?.getContext(\"2d\")\n    if (canvasCtx) {\n      refreshCanvasSize()\n      draw(canvasCtx)\n    }\n  }, [canvasRef, draw])\n\n  useEffect(() => {\n    node.current.fftSize = fftSize\n    bufferLength.current = node.current.frequencyBinCount\n    dataArrayByte.current = new Uint8Array(bufferLength.current)\n    dataArrayFloat.current = new Float32Array(bufferLength.current)\n  }, [fftSize, node.current.fftSize, node.current.frequencyBinCount])\n\n  return (\n    <Section id={id}>\n      <h3>Analyser</h3>\n\n      <Main>\n        <NodeOverview id={id} link=\"https://developer.mozilla.org/en-US/docs/Web/API/AnalyserNode\">\n          The <code>AnalyserNode</code> interface represents a node able to provide real-time\n          frequency and time-domain analysis information, for the purposes of data analysis and\n          visualization.\n        </NodeOverview>\n\n        <Example>\n          <fieldset>\n            <label css={{ marginRight: 4 }}>Fft size:</label>\n            <select value={fftSize} onChange={event => setFftSize(+event.currentTarget.value)}>\n              {fftSizes.map(fft => (\n                <option key={fft} value={fft}>\n                  {fft}\n                </option>\n              ))}\n            </select>\n          </fieldset>\n          <fieldset>\n            <legend>Data Type:</legend>\n            {dataTypeList.map((type, index) => (\n              <div key={index} className=\"field-row\">\n                <input\n                  id={`data${index}`}\n                  type=\"radio\"\n                  checked={dataType === index}\n                  onChange={event => setDataType(index)}\n                />\n                <label htmlFor={`data${index}`}>{type}</label>\n              </div>\n            ))}\n          </fieldset>\n        </Example>\n\n        <div className=\"window\" css={maximised ? maxWin : \"\"}>\n          <div className=\"title-bar\">\n            <div className=\"title-bar-text\">A Window With Stuff In It</div>\n            <div className=\"title-bar-controls\">\n              <button\n                aria-label=\"Minimize\"\n                onClick={() => maximise(false)}\n                disabled={!maximised}\n              ></button>\n              <button\n                aria-label=\"Maximize\"\n                onClick={() => maximise(true)}\n                disabled={maximised}\n              ></button>\n              {/* <button aria-label=\"Close\"></button> */}\n            </div>\n          </div>\n          <div\n            className=\"window-body\"\n            css={{ height: \"calc(100% - 36px)\", margin: maximised ? 0 : undefined }}\n          >\n            <canvas ref={canvasRef} css={{ width: \"100%\", height: \"100%\" }} />\n          </div>\n        </div>\n      </Main>\n    </Section>\n  )\n}\n","/** @jsx jsx */\nimport { jsx } from \"@emotion/core\"\nimport { useRef, useEffect } from \"react\"\nimport useAudio, { NodeProps } from \"../../hooks/useAudio\"\nimport { Section, Main, Example } from \"../elems/styled\"\nimport useFrequency from \"../../hooks/useFrequency\"\nimport NodeOverview from \"../elems/NodeOverview\"\nimport useGain from \"../../hooks/useGain\"\nimport useType from \"../../hooks/useType\"\n\nexport default function BiquadFilterNode({ id }: NodeProps) {\n  const { audioContext, setNode } = useAudio()\n  const node = useRef(audioContext.createBiquadFilter())\n  const typeForm = useType(node.current, [\"lowshelf\", \"highshelf\", \"peaking\"])\n  const frequencyForm = useFrequency(node.current)\n  const gainForm = useGain(node.current)\n\n  useEffect(() => {\n    setNode(id, node.current)\n  }, [])\n\n  return (\n    <Section id={id}>\n      <h3>Biquad</h3>\n\n      <Main>\n        <NodeOverview\n          id={id}\n          link=\"https://developer.mozilla.org/en-US/docs/Web/API/BiquadFilterNode\"\n        >\n          The <code>BiquadFilterNode</code> interface a simple low-order filter. It can represent\n          different kinds of filters, tone control devices, and graphic equalizers.\n        </NodeOverview>\n\n        <Example>\n          {typeForm}\n          {frequencyForm}\n          {gainForm}\n        </Example>\n      </Main>\n    </Section>\n  )\n}\n","/** @jsx jsx */\nimport { jsx } from \"@emotion/core\"\nimport { useEffect, useRef } from \"react\"\nimport useAudio, { NodeProps } from \"../../hooks/useAudio\"\nimport NodeOverview from \"../elems/NodeOverview\"\nimport { Section, Main } from \"../elems/styled\"\n\nexport default function ConvolverNode({ id }: NodeProps) {\n  const { audioContext, setNode } = useAudio()\n  const node = useRef(audioContext.createBiquadFilter())\n\n  useEffect(() => {\n    setNode(id, node.current)\n  }, [])\n\n  return (\n    <Section id={id}>\n      <h3>Convolver</h3>\n      <Main>\n        <NodeOverview id={id} link=\"https://developer.mozilla.org/en-US/docs/Web/API/ConvolverNode\">\n          The <code>ConvolverNode</code> interface performs a Linear Convolution on a given\n          AudioBuffer, often used to achieve a reverb effect.\n        </NodeOverview>\n      </Main>\n    </Section>\n  )\n}\n","import React, { useRef, useEffect } from \"react\"\nimport useAudio, { NodeProps } from \"../../hooks/useAudio\"\nimport { Section, Main, Example } from \"../elems/styled\"\nimport NodeOverview from \"../elems/NodeOverview\"\nimport useGain from \"../../hooks/useGain\"\n\nexport default function GainNode({ id }: NodeProps) {\n  const { audioContext, setNode } = useAudio()\n  const node = useRef(audioContext.createGain())\n  const gainForm = useGain(node.current, -1, 1, 0.1)\n\n  useEffect(() => {\n    setNode(id, node.current)\n  }, [])\n\n  return (\n    <Section id={id}>\n      <h3>Gain</h3>\n      <Main>\n        <NodeOverview id={id} link=\"https://developer.mozilla.org/en-US/docs/Web/API/GainNode\">\n          The GainNode interface represents a change in volume.\n        </NodeOverview>\n        <Example>{gainForm}</Example>\n      </Main>\n    </Section>\n  )\n}\n","/** @jsx jsx */\nimport { jsx } from \"@emotion/core\"\nimport { useRef, useEffect, useState } from \"react\"\nimport useAudio, { NodeProps } from \"../../hooks/useAudio\"\nimport { Section, Main, Example } from \"../elems/styled\"\nimport NodeOverview from \"../elems/NodeOverview\"\n\nexport default function MediaElementAudioSourceNode({ id }: NodeProps) {\n  const { audioContext, setNode } = useAudio()\n  const node = useRef<MediaElementAudioSourceNode>()\n  const audio = useRef<HTMLMediaElement>(null)\n  const [source, setSource] = useState(\"http://ccmixter.org/content/doxent/doxent_-_Haze.mp3\")\n  const [audioSource, setAudioSource] = useState(source)\n  const [playable, setPlayable] = useState(false)\n\n  useEffect(() => {\n    if (playable && audio.current) {\n      node.current = audioContext.createMediaElementSource(audio.current)\n      setNode(id, node.current)\n    }\n  }, [playable])\n\n  return (\n    <Section id={id}>\n      <h3>Media</h3>\n      <Main>\n        <NodeOverview\n          id={id}\n          link=\"https://developer.mozilla.org/en-US/docs/Web/API/MediaElementAudioSourceNode\"\n        >\n          The <code>MediaElementAudioSourceNode</code> interface represents an audio source\n          consisting of an HTML5 element.\n        </NodeOverview>\n        <p>Use any public audio file with anonymys access enabled. Press ENTER to load.</p>\n        <Example>\n          <form\n            onSubmit={event => {\n              event.preventDefault()\n              setAudioSource(source)\n            }}\n          >\n            <div className=\"field-row-stacked\">\n              <label>Source</label>\n              <input type=\"text\" value={source} onChange={value => setSource(value.target.value)} />\n            </div>\n          </form>\n        </Example>\n        <p>Use the player below.</p>\n        <Example>\n          <audio\n            crossOrigin=\"anonymus\"\n            onError={event => {\n              if (\n                // @ts-ignore\n                window.confirm((event.target.error as MediaError).message + `\\n\\nClear Source?`)\n              ) {\n                setSource(\"\")\n              }\n            }}\n            ref={audio}\n            controls\n            src={audioSource}\n            onCanPlayThrough={event => {\n              setPlayable(true)\n            }}\n          />\n        </Example>\n      </Main>\n    </Section>\n  )\n}\n","/** @jsx jsx */\nimport { jsx } from \"@emotion/core\"\nimport { useEffect, useState, useRef } from \"react\"\nimport useAudio, { NodeProps } from \"../../hooks/useAudio\"\nimport { Section, Main, Example } from \"../elems/styled\"\nimport useMicrophone from \"../../hooks/useMicrophone\"\nimport NodeOverview from \"../elems/NodeOverview\"\n\nexport default function MediaStreamAudioSourceNode({ id }: NodeProps) {\n  const { audioContext, setNode } = useAudio()\n  const supportedConstraints = useRef(navigator.mediaDevices.getSupportedConstraints())\n\n  const node = useRef<MediaStreamAudioSourceNode>()\n  const { devices } = useMicrophone()\n  const [inputs, setInputs] = useState<MediaDeviceInfo[]>([])\n  const [deviceId, setDeviceId] = useState(\"default\")\n  const [start, setStart] = useState(false)\n\n  const [autoGainControl, setAutoGainControl] = useState(false)\n  const [channelCount, setChannelCount] = useState(1)\n  const [echoCancellation, setEchoCancellation] = useState(false)\n  const [noiseSuppression, setNoiseSuppression] = useState(false)\n  const [sampleRate, setSampleRate] = useState(44100)\n  const [sampleSize, setSampleSize] = useState(8)\n\n  const startStream = async () => {\n    try {\n      const audio: MediaTrackConstraints = {\n        deviceId,\n        autoGainControl,\n        channelCount,\n        echoCancellation,\n        noiseSuppression,\n        sampleRate,\n        sampleSize,\n      }\n      const stream = await navigator.mediaDevices.getUserMedia({ video: false, audio })\n      node.current = audioContext.createMediaStreamSource(stream)\n      setNode(id, node.current)\n    } catch (err) {\n      alert(err)\n    }\n  }\n\n  const stopStream = () => {\n    node.current?.mediaStream.getTracks().forEach(stream => stream.stop())\n    node.current?.disconnect()\n  }\n\n  useEffect(() => {\n    const fetchDevices = async () => {\n      const devs = await devices()\n      setInputs(devs)\n      if (Object.keys(devs).indexOf(\"default\") === -1) {\n        setDeviceId(devs.length > 0 ? devs[0].deviceId : \"\")\n      }\n    }\n    fetchDevices()\n\n    return () => stopStream()\n  }, [])\n\n  useEffect(() => {\n    if (start) {\n      startStream()\n    } else {\n      stopStream()\n    }\n  }, [start])\n\n  return (\n    <Section id={id}>\n      <h3>Stream</h3>\n      <Main>\n        <NodeOverview\n          id={id}\n          link=\"https://developer.mozilla.org/en-US/docs/Web/API/MediaStreamAudioSourceNode\"\n        >\n          The <code>MediaStreamAudioSourceNode</code> interface is operates as an audio source whose\n          media is received from a microphone or from a remote peer on a WebRTC call.\n        </NodeOverview>\n        <Example>\n          <button className={start ? \"active\" : undefined} onClick={() => setStart(true)}>\n            Start\n          </button>\n          <button css={{ marginLeft: 6 }} onClick={() => setStart(false)}>\n            Stop\n          </button>\n        </Example>\n        <div className=\"example\">\n          <div className=\"field-row-stacked\" css={{ width: 300 }}>\n            <label>Audio Input:</label>\n            <select\n              value={deviceId}\n              onChange={event => setDeviceId(event.currentTarget.value)}\n              disabled={start}\n            >\n              {inputs.map(device => (\n                <option key={device.deviceId} value={device.deviceId}>\n                  {device.label.replace(/\\s(\\(\\w+:\\w+\\))/, \"\")}\n                </option>\n              ))}\n            </select>\n          </div>\n        </div>\n        <div className=\"example\">\n          {supportedConstraints.current[\"autoGainControl\"] && (\n            <div className=\"field-row\">\n              <input\n                type=\"checkbox\"\n                id={`${id}_autoGainControl`}\n                checked={autoGainControl}\n                onChange={() => setAutoGainControl(!autoGainControl)}\n                disabled={start}\n              />\n              <label htmlFor={`${id}_autoGainControl`}>Auto Gain Control</label>\n            </div>\n          )}\n          {supportedConstraints.current[\"channelCount\"] && (\n            <div className=\"field-row\">\n              <select\n                value={channelCount}\n                onChange={ev => setChannelCount(+ev.target.value)}\n                id={`${id}_channelCount`}\n                disabled={start}\n              >\n                // @ts-ignore\n                {Array.apply(null, { length: audioContext.destination.maxChannelCount })\n                  .map(Number.call, Number)\n                  .map((i: number) => (\n                    <option key={i} value={i + 1}>\n                      {i + 1}\n                      {i === 0 ? \" - Mono\" : i === 1 ? \" - Stereo\" : \"\"}\n                    </option>\n                  ))}\n              </select>\n              <label htmlFor={`${id}_channelCount`}>Channel Count</label>\n            </div>\n          )}\n          {supportedConstraints.current[\"echoCancellation\"] && (\n            <div className=\"field-row\">\n              <input\n                type=\"checkbox\"\n                id={`${id}_echoCancellation`}\n                checked={echoCancellation}\n                onChange={() => setEchoCancellation(!echoCancellation)}\n                disabled={start}\n              />\n              <label htmlFor={`${id}_echoCancellation`}>Echo Cancellation</label>\n            </div>\n          )}\n          {supportedConstraints.current[\"noiseSuppression\"] && (\n            <div className=\"field-row\">\n              <input\n                type=\"checkbox\"\n                id={`${id}_noiseSuppression`}\n                checked={noiseSuppression}\n                onChange={() => setNoiseSuppression(!noiseSuppression)}\n                disabled={start}\n              />\n              <label htmlFor={`${id}_noiseSuppression`}>Noise Suppression</label>\n            </div>\n          )}\n          {supportedConstraints.current[\"sampleRate\"] && (\n            <div className=\"field-row\">\n              <select\n                id={`${id}_sampleRate`}\n                value={sampleRate}\n                onChange={ev => setSampleRate(+ev.target.value)}\n                disabled={start}\n              >\n                {[44100, 48000, 88200, 96000, 192000].map(i => (\n                  <option key={i} value={i}>\n                    {i} Hz\n                  </option>\n                ))}\n              </select>\n              <label htmlFor={`${id}_sampleRate`}>Sample Rate</label>\n            </div>\n          )}\n          {supportedConstraints.current[\"sampleSize\"] && (\n            <div className=\"field-row\">\n              <select\n                id={`${id}_sampleSize`}\n                value={sampleSize}\n                onChange={ev => setSampleSize(+ev.target.value)}\n                disabled={start}\n              >\n                {[8, 16, 24, 32].map(i => (\n                  <option key={i} value={i}>\n                    {i} bit\n                  </option>\n                ))}\n              </select>\n              <label htmlFor={`${id}_sampleSize`}>Sample Size</label>\n            </div>\n          )}\n        </div>\n      </Main>\n    </Section>\n  )\n}\n","/** @jsx jsx */\nimport { jsx } from \"@emotion/core\"\nimport { useState, useEffect, useRef } from \"react\"\nimport useAudio, { NodeProps } from \"../../hooks/useAudio\"\nimport { Section, Main, Example } from \"../elems/styled\"\nimport useFrequency from \"../../hooks/useFrequency\"\nimport NodeOverview from \"../elems/NodeOverview\"\nimport useDetune from \"../../hooks/useDetune\"\nimport useType from \"../../hooks/useType\"\n\nexport default function OscillatorNode({ id }: NodeProps) {\n  const { audioContext, setNode, reconnectAllNodes, setParam } = useAudio()\n  const node = useRef(audioContext.createOscillator())\n  const frequencyForm = useFrequency(node.current)\n  const detuneForm = useDetune(node.current)\n  const typeForm = useType(node.current, [\"sine\", \"square\", \"sawtooth\", \"triangle\"])\n  const [start, setStart] = useState(false)\n\n  useEffect(() => {\n    node.current.start()\n    setNode(id, node.current)\n    node.current.disconnect()\n    return () => node.current.disconnect()\n  }, [])\n\n  useEffect(() => {\n    setParam(id, \"start\", start)\n    if (start) {\n      reconnectAllNodes()\n    } else {\n      node.current.disconnect()\n    }\n  }, [start])\n\n  return (\n    <Section id={id}>\n      <h3>Oscillator</h3>\n      <Main>\n        <NodeOverview\n          id={id}\n          link=\"https://developer.mozilla.org/en-US/docs/Web/API/OscillatorNode\"\n        >\n          The <code>OscillatorNode</code> interface represents a periodic waveform, such as a sine\n          wave. Causes a specified frequency of a given wave to be created—in effect, a constant\n          tone.\n        </NodeOverview>\n\n        <Example>\n          <button className={start ? \"active\" : undefined} onClick={() => setStart(true)}>\n            Start\n          </button>\n          <button css={{ marginLeft: 6 }} onClick={() => setStart(false)}>\n            Stop\n          </button>\n        </Example>\n\n        <Example>\n          {frequencyForm}\n          {detuneForm}\n          {typeForm}\n        </Example>\n      </Main>\n    </Section>\n  )\n}\n","import React, { useState, useEffect } from \"react\"\nimport { ctime } from \"../scripts/audio\"\n\nexport default function useDetune(node: AudioNode) {\n  const [detune, setDetune] = useState(0)\n\n  useEffect(() => {\n    // @ts-ignore\n    node.detune.setValueAtTime(detune, ctime)\n    // @ts-ignore\n  }, [node.detune, detune])\n\n  return (\n    <fieldset>\n      <label>Detune: {detune}</label>\n      <input\n        className=\"detune\"\n        type=\"range\"\n        min={-10000}\n        max={10000}\n        value={detune}\n        onChange={event => setDetune(event.currentTarget.valueAsNumber)}\n      />\n    </fieldset>\n  )\n}\n","import React from \"react\"\nimport ReactDOM from \"react-dom\"\nimport App from \"./App\"\n// import * as serviceWorker from \"./serviceWorker\"\nimport \"../node_modules/98.css/dist/98.css\"\nimport \"../node_modules/98.css/dist/docs.css\"\nimport \"../node_modules/98.css/dist/vs.css\"\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n)\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n// serviceWorker.unregister()\n","var map = {\n\t\"./AnalyserNode\": 21,\n\t\"./AnalyserNode.tsx\": 21,\n\t\"./BiquadFilterNode\": 22,\n\t\"./BiquadFilterNode.tsx\": 22,\n\t\"./ConvolverNode\": 23,\n\t\"./ConvolverNode.tsx\": 23,\n\t\"./GainNode\": 24,\n\t\"./GainNode.tsx\": 24,\n\t\"./MediaElementAudioSourceNode\": 25,\n\t\"./MediaElementAudioSourceNode.tsx\": 25,\n\t\"./MediaStreamAudioSourceNode\": 26,\n\t\"./MediaStreamAudioSourceNode.tsx\": 26,\n\t\"./OscillatorNode\": 27,\n\t\"./OscillatorNode.tsx\": 27\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 38;"],"sourceRoot":""}