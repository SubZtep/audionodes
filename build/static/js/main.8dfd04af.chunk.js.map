{"version":3,"sources":["features/sounds/soundsSlice.ts","features/ux/uxSlice.ts","store.ts","components/misc/EditorWrapper.tsx","scripts/audio.ts","hooks/useOscillatorNode.tsx","components/graph/nodeform.tsx","components/graph/nodes/Oscillator.tsx","hooks/useGainNode.tsx","components/graph/nodes/Gain.tsx","hooks/useBiquadFilterNode.tsx","components/graph/nodes/BiquadFilter.tsx","scripts/utils.ts","components/graph/buttons.tsx","hooks/useAudioNodes.tsx","types.ts","components/graph/AudioGraph.tsx","components/misc/Main.tsx","components/visual/Visual.tsx","components/piano/Piano.tsx","components/header/HeaderWrapper.tsx","components/header/Menu.tsx","components/header/MenuOpener.tsx","components/header/Header.tsx","App.tsx","index.tsx"],"names":["soundsSlice","createSlice","name","initialState","reducers","addSound","state","action","payload","description","push","actions","uxSlice","menu","toggleMenu","selectMenu","ux","configureStore","reducer","sounds","EditorWrapper","styled","div","audioContext","window","AudioContext","webkitAudioContext","ctime","currentTime","nodes","destination","Map","useOscillatorNode","id","frequency","detune","type","useState","ready","setReady","useEffect","osc","createOscillator","start","set","get","setValueAtTime","Title","FormWrapper","Label","label","Hr","hr","types","memo","setFrequency","setDetune","setType","disabled","min","max","value","onChange","event","currentTarget","valueAsNumber","className","map","typeVal","key","checked","position","Position","Bottom","style","background","useGainNode","gain","createGain","setGain","Top","step","useBiquadFilterNode","createBiquadFilter","randomBetween","Math","random","newNodePosition","canvasWidth","canvasHeight","bottom","halfHeight","x","y","GraphMutateButton","button","props","fourth","third","second","useAudioNodes","delNode","node","disconnect","delete","connectNodes","source","target","connect","disconnectNodes","defaultNode","selectable","connectable","data","backgroundColor","color","checkSize","prev","next","NodeGraph","width","useStoreState","store","height","elements","setElements","selected","useRef","length","onConnect","connection","els","addEdge","onSelectionChange","current","nodeTypes","oscillator","Oscillator","Gain","biquadfilter","BiquadFilter","connectionLineStyle","stroke","snapToGrid","snapGrid","showInteractive","variant","BackgroundVariant","Lines","gap","onClick","toString","icon","forEach","el","undefined","removeElements","Main","Visual","css","Piano","HeaderWrapper","menuWrapper","Menu","dispatch","useDispatch","onMouseEnter","onMouseLeave","textAlign","lineHeight","fontSize","MenuOpener","useSelector","size","Header","margin","process","App","AudioGraph","library","add","fab","fad","fal","far","fas","ReactDOM","render","styles","document","getElementById"],"mappings":"sMAOMA,EAAcC,YAAY,CAC9BC,KAAM,SACNC,aAAc,GACdC,SAAU,CACRC,SADQ,SACCC,EAAgBC,GAA+B,IAAD,EACvBA,EAAOC,QAA7BN,EAD6C,EAC7CA,KAAMO,EADuC,EACvCA,YACdH,EAAMI,KAAK,CAAER,OAAMO,oBAOVT,GAFaA,EAAYW,QAAzBN,SAEAL,EAAf,SClBMY,EAAUX,YAAY,CAC1BC,KAAM,KACNC,aAAc,CACZU,MAAM,GAERT,SAAU,CACRU,WAAY,SAAAR,GACVA,EAAMO,MAAQP,EAAMO,SAKbE,EAAa,SAACT,GAAD,OAAgBA,EAAMU,GAAGH,MACpCC,EAAeF,EAAQD,QAAvBG,WACAF,IAAf,QCZeK,cAAe,CAC5BC,QAAS,CACPC,OAAQnB,EACRgB,GAAIJ,K,kbCLR,IAoBeQ,EApBOC,IAAOC,IAAV,K,uBCDNC,EAAe,IAAKC,OAAOC,cAAgBD,OAAOE,oBAElDC,EAAQJ,EAAaK,YAGrBC,GAFcN,EAAaO,YAEnB,IAAIC,KCwBVC,EA3BW,SAACC,EAAYC,EAAmBC,EAAgBC,GAA0B,IAAD,EACvEC,oBAAS,GAD8D,mBAC1FC,EAD0F,KACnFC,EADmF,KAsBjG,OAnBAC,qBAAU,WACR,IAAMC,EAAMlB,EAAamB,mBACzBD,EAAIE,QACJd,EAAMe,IAAIX,EAAIQ,GACdF,GAAS,KACR,CAACN,IAEJO,qBAAU,WACNX,EAAMgB,IAAIZ,GAAuBC,UAAUY,eAAeZ,EAAWP,KACtE,CAACM,EAAIC,IAERM,qBAAU,WACNX,EAAMgB,IAAIZ,GAAuBE,OAAOW,eAAeX,EAAQR,KAChE,CAACM,EAAIE,IAERK,qBAAU,WACNX,EAAMgB,IAAIZ,GAAuBG,KAAOA,IACzC,CAACH,EAAIG,IAED,CACLE,U,owBCxBG,IAAMS,EAAQ1B,IAAOC,IAAV,KAIL0B,EAAc3B,IAAOC,IAAV,KAOX2B,EAAQ5B,IAAO6B,MAAV,KAgBLC,EAAK9B,IAAO+B,GAAV,KCrBTC,EAA0B,CAAC,OAAQ,SAAU,WAAY,YAEhDC,kBAAK,YAAiC,IAA9BrB,EAA6B,EAA7BA,GAA6B,EAChBI,mBAAS,KADO,mBAC3CH,EAD2C,KAChCqB,EADgC,OAEtBlB,mBAAS,GAFa,mBAE3CF,EAF2C,KAEnCqB,EAFmC,OAG1BnB,mBAASgB,EAAM,IAHW,mBAG3CjB,EAH2C,KAGrCqB,EAHqC,KAI1CnB,EAAUN,EAAkBC,EAAIC,EAAWC,EAAQC,GAAnDE,MAER,OACE,YAAC,WAAD,KACE,YAACS,EAAD,oBAAoBd,GACpB,YAACe,EAAD,KACE,YAACC,EAAD,mCAEE,qBACES,UAAWpB,EACXF,KAAK,SACLuB,IAAI,SACJC,IAAI,QACJC,MAAO3B,EACP4B,SAAU,SAAAC,GAAK,OAAIR,EAAaQ,EAAMC,cAAcC,mBAGxD,YAACd,EAAD,MACA,YAACF,EAAD,gCAEE,qBACEiB,UAAU,SACV9B,KAAK,SACLuB,KAAM,IACNC,IAAK,IACLC,MAAO1B,EACP2B,SAAU,SAAAC,GAAK,OAAIP,EAAUO,EAAMC,cAAcC,mBAGrD,YAACd,EAAD,MACA,YAACF,EAAD,aACCI,EAAMc,KAAI,SAAAC,GAAO,OAChB,YAACnB,EAAD,CAAOoB,IAAKD,GACV,qBACEhC,KAAK,QACLyB,MAAOO,EACPE,QAASlC,IAASgC,EAClBN,SAAU,SAAAC,GAAK,OAAIN,EAAQM,EAAMC,cAAcH,UAEhDO,OAIP,YAAC,IAAD,CAAQhC,KAAK,SAASmC,SAAUC,IAASC,OAAQC,MAAO,CAAEC,WAAY,iBCrC7DC,EAjBK,SAAC3C,EAAY4C,GAAkB,IAAD,EACtBxC,oBAAS,GADa,mBACzCC,EADyC,KAClCC,EADkC,KAYhD,OATAC,qBAAU,WACRX,EAAMe,IAAIX,EAAIV,EAAauD,cAC3BvC,GAAS,KACR,CAACN,IAEJO,qBAAU,WACNX,EAAMgB,IAAIZ,GAAiB4C,KAAK/B,eAAe+B,EAAMlD,KACtD,CAACM,EAAI4C,IAED,CACLvC,UCRWgB,kBAAK,YAAiC,IAA9BrB,EAA6B,EAA7BA,GAA6B,EAC1BI,mBAAS,GADiB,mBAC3CwC,EAD2C,KACrCE,EADqC,KAE1CzC,EAAUsC,EAAY3C,EAAI4C,GAA1BvC,MAER,OACE,YAAC,WAAD,KACE,YAAC,IAAD,CAAQF,KAAK,SAASmC,SAAUC,IAASQ,IAAKN,MAAO,CAAEC,WAAY,WACnE,YAAC5B,EAAD,cAAcd,GACd,YAACe,EAAD,KACE,YAACC,EAAD,6BAEE,qBACES,UAAWpB,EACXF,KAAK,SACLuB,IAAK,EACLC,IAAK,EACLqB,KAAM,GACNpB,MAAOgB,EACPf,SAAU,SAAAC,GAAK,OAAIgB,EAAQhB,EAAMC,cAAcC,oBAIrD,YAAC,IAAD,CAAQ7B,KAAK,SAASmC,SAAUC,IAASC,OAAQC,MAAO,CAAEC,WAAY,iBCG7DO,EA9Ba,SAC1BjD,EACAG,EACAF,EACA2C,GACI,IAAD,EACuBxC,oBAAS,GADhC,mBACIC,EADJ,KACWC,EADX,KAoBH,OAjBAC,qBAAU,WACRX,EAAMe,IAAIX,EAAIV,EAAa4D,sBAC3B5C,GAAS,KACR,CAACN,IAEJO,qBAAU,WACNX,EAAMgB,IAAIZ,GAAyBG,KAAOA,IAC3C,CAACH,EAAIG,IAERI,qBAAU,WACNX,EAAMgB,IAAIZ,GAAyBC,UAAUY,eAAeZ,EAAWP,KACxE,CAACM,EAAIC,IAERM,qBAAU,WACNX,EAAMgB,IAAIZ,GAAyB4C,KAAK/B,eAAe+B,EAAMlD,KAC9D,CAACM,EAAI4C,IAED,CACLvC,UCrBEe,EAA4B,CAAC,WAAY,YAAa,WAE7CC,kBAAK,YAAiC,IAA9BrB,EAA6B,EAA7BA,GAA6B,EAC1BI,mBAASgB,EAAM,IADW,mBAC3CjB,EAD2C,KACrCqB,EADqC,OAEhBpB,mBAAS,KAFO,mBAE3CH,EAF2C,KAEhCqB,EAFgC,OAG1BlB,mBAAS,GAHiB,mBAG3CwC,EAH2C,KAGrCE,EAHqC,KAI1CzC,EAAU4C,EAAoBjD,EAAIG,EAAMF,EAAW2C,GAAnDvC,MAER,OACE,YAAC,WAAD,KACE,YAAC,IAAD,CAAQF,KAAK,SAASmC,SAAUC,IAASQ,IAAKN,MAAO,CAAEC,WAAY,WACnE,YAAC5B,EAAD,uBAAuBd,GACvB,YAACe,EAAD,KACE,YAACC,EAAD,aACCI,EAAMc,KAAI,SAAAC,GAAO,OAChB,YAACnB,EAAD,CAAOoB,IAAKD,GACV,qBACEhC,KAAK,QACLyB,MAAOO,EACPE,QAASlC,IAASgC,EAClBN,SAAU,SAAAC,GAAK,OAAIN,EAAQM,EAAMC,cAAcH,UAEhDO,MAGL,uBACA,YAACnB,EAAD,mCAEE,qBACES,UAAWpB,EACXF,KAAK,SACLuB,IAAI,SACJC,IAAI,QACJC,MAAO3B,EACP4B,SAAU,SAAAC,GAAK,OAAIR,EAAaQ,EAAMC,cAAcC,mBAGxD,YAACd,EAAD,MACA,YAACF,EAAD,4BAEE,qBACES,UAAWpB,EACXF,KAAK,SACLuB,KAAM,GACNC,IAAK,GACLC,MAAOgB,EACPf,SAAU,SAAAC,GAAK,OAAIgB,EAAQhB,EAAMC,cAAcC,oBAIrD,YAAC,IAAD,CAAQ7B,KAAK,SAASmC,SAAUC,IAASC,OAAQC,MAAO,CAAEC,WAAY,iBCnD/DS,EAAgB,SAACzB,EAAaC,GAAd,OAA8ByB,KAAKC,UAAY1B,EAAMD,GAAOA,GAQ5E4B,EAAkB,SAC7BC,EACAC,GAEgB,IADhBC,EACe,wDACTC,EAAaF,EAAe,EAClC,MAAO,CACLG,EAAGR,EAAc,EAAGI,EAAc,KAClCK,EAAGH,EAASN,EAAcO,EAAYF,GAAgBL,EAAc,EAAGO,K,sjBCrBpE,IAAMG,EAAoBzE,IAAO0E,OAAV,KAErB,SAAAC,GAAK,OAAKA,EAAMC,OAAS,QAAUD,EAAME,MAAQ,OAASF,EAAMG,OAAS,OAAS,SC+B5EC,GDjBW/E,IAAO0E,OAAV,KCfD,WAyBpB,MAAO,CACLM,QAPc,SAACpE,GACf,IAAMqE,EAAOzE,EAAMgB,IAAIZ,GACnB,OAAJqE,QAAI,IAAJA,KAAMC,aACN1E,EAAM2E,OAAOvE,IAKbwE,aA1BmB,SAACC,EAAgBC,GACpC,GCLqC,gBDKjCA,EAAsC,CAAC,IAAD,EACxC,UAAA9E,EAAMgB,IAAI6D,UAAV,SAAmBE,QAAQrF,EAAaO,iBACnC,CAAC,IAAD,EACCA,EAAcD,EAAMgB,IAAI8D,GAC1B7E,IAAa,UAAAD,EAAMgB,IAAI6D,UAAV,SAAmBE,QAAQ9E,MAsB9C+E,gBAlBsB,SAACH,EAAgBC,GACvC,GCdqC,gBDcjCA,EAAsC,CAAC,IAAD,EACxC,UAAA9E,EAAMgB,IAAI6D,UAAV,SAAmBH,iBACd,CAAC,IAAD,EACCzE,EAAcD,EAAMgB,IAAI8D,GAC1B7E,IAAa,UAAAD,EAAMgB,IAAI6D,UAAV,SAAmBH,WAAWzE,SEI/CgF,EAAoB,CACxB7E,GDvBuC,cCwBvCG,KAAM,SACN2E,YAAY,EACZC,aAAa,EACbC,KAAM,CAAE/D,MAAO,gBACfwB,MAAO,CACLwC,gBAAiB,UACjBC,MAAO,QAET5C,SAAU,CAAEqB,EAAG,EAAGC,EAAG,IAGjBuB,EAAY,SAACC,EAAcC,GAAf,OAAgCD,IAASC,GA8G5CC,EA5GG,WAAO,IAAD,EAC6BnB,IAA3CK,EADc,EACdA,aAAcI,EADA,EACAA,gBAAiBR,EADjB,EACiBA,QAEjCmB,EAAQC,aAAc,SAAAC,GAAK,OAAIA,EAAMF,QAAOJ,GAC5CO,EAASF,aAAc,SAAAC,GAAK,OAAIA,EAAMC,SAAQP,GAJ9B,EAKU/E,mBAAmB,IAL7B,mBAKfuF,EALe,KAKLC,EALK,KAMhBC,EAAWC,iBAAwB,MAEzCvF,qBAAU,WACJgF,EAAQ,GAAKG,EAAS,GAAyB,IAApBC,EAASI,SACtClB,EAAYvC,SAAW,CAAEqB,EAAG4B,EAAQ,EAAG3B,EAAG8B,EAAS,GACnDE,EAAY,CAACf,OAEd,CAACU,EAAOG,EAAQC,IAyDnB,OACE,kBAAC,IAAD,CACEA,SAAUA,EACVK,UA3Cc,SAACC,GACS,OAAtBA,EAAWxB,QAAyC,OAAtBwB,EAAWvB,SAC3CF,EAAayB,EAAWxB,OAAQwB,EAAWvB,QAC3CkB,GAAY,SAAAM,GAAG,OAAIC,YAAQF,EAAYC,QAyCvCE,kBAAmB,SAAAF,GAAG,OAAKL,EAASQ,QAAUH,GAC9CI,UAAW,CACTC,WAAYC,EACZ5D,KAAM6D,EACNC,aAAcC,GAEhBC,oBAAqB,CAAEC,OAAQ,QAC/BC,YAAY,EACZC,SAAU,CAAC,GAAI,IACftE,MAAO,CAAEwC,gBAAiB,YAE1B,kBAAC,IAAD,CAAU+B,iBAAiB,IAC3B,kBAAC,IAAD,CAAYC,QAASC,IAAkBC,MAAOjC,MAAM,UAAUkC,IAAK,KAEnE,kBAACvD,EAAD,CAAmBwD,QAnDD,kBACpBzB,EAAY,GAAD,mBACND,GADM,CAET,CACE3F,IAAK2F,EAASI,OAAS,GAAGuB,WAC1BnH,KAAM,aACN8B,UAAW,YACXK,SAAUgB,EAAgBiC,EAAOG,SA6CjC,kBAAC,IAAD,CAAiB6B,KAAM,CAAC,MAAO,eADjC,kBAIA,kBAAC1D,EAAD,CAAmBK,QAAM,EAACmD,QA5Cd,kBACdzB,EAAY,GAAD,mBACND,GADM,CAET,CACE3F,IAAK2F,EAASI,OAAS,GAAGuB,WAC1BnH,KAAM,OACN8B,UAAW,YACXK,SAAUgB,EAAgBiC,EAAOG,SAsCjC,kBAAC,IAAD,CAAiB6B,KAAM,CAAC,MAAO,YADjC,YAIA,kBAAC1D,EAAD,CAAmBI,OAAK,EAACoD,QArCL,kBACtBzB,EAAY,GAAD,mBACND,GADM,CAET,CACE3F,IAAK2F,EAASI,OAAS,GAAGuB,WAC1BnH,KAAM,eACN8B,UAAW,YACXK,SAAUgB,EAAgBiC,EAAOG,SA+BjC,kBAAC,IAAD,CAAiB6B,KAAM,CAAC,MAAO,YADjC,qBAIA,kBAAC1D,EAAD,CAAmBG,QAAM,EAACqD,QArFP,WACI,OAArBxB,EAASQ,UACXR,EAASQ,QAAQmB,SAAQ,SAAAC,QACPC,IAAZD,EAAGtH,KACLiE,EAAQqD,EAAGzH,IAEX4E,EAAiB6C,EAAYhD,OAASgD,EAAY/C,WAItDkB,EAAY+B,YAAe9B,EAASQ,QAASV,IAC7CE,EAASQ,QAAU,QA2EjB,kBAAC,IAAD,CAAiBkB,KAAM,CAAC,MAAO,eADjC,qB,wRCvIN,IAeeK,GAfFxI,IAAOC,IAAV,K,8PCCV,IAiBewI,GAjBA,WACb,OACE,mBACEC,IAAKA,YAAF,OADL,W,2PCFJ,IAiBeC,GAjBD,WACZ,OACE,mBACED,IAAKA,YAAF,OADL,U,6NCHJ,IASeE,GATO5I,IAAOC,IAAV,M,kLCGnB,IAAM4I,GAAcH,YAAH,MA4BFI,GAnBF,WACX,IAAMC,EAAWC,cAEjB,OACE,mBACEN,IAAKG,GACLI,aAAc,kBAAMF,EAAStJ,MAC7ByJ,aAAc,kBAAMH,EAAStJ,OAE7B,kBAAIiJ,IAAK,CAAES,UAAW,WAAtB,QACA,kBAAIT,IAAK,CAAEU,WAAY,IAAKC,SAAU,WACpC,6BACA,6BACA,kCCJOC,GAjBI,WACjB,IAAM9J,EAAO+J,YAAY7J,GACnBqJ,EAAWC,cAEjB,OACE,oCACE,kBAAC,IAAD,CACEb,KAAM,CAAC,MAAO,QACdqB,KAAK,KACLP,aAAc,kBAAMF,EAAStJ,MAC7ByJ,aAAc,kBAAMH,EAAStJ,QAE9BD,GAAQ,kBAAC,GAAD,QCJAiK,GATA,WACb,OACE,YAAC,GAAD,KACE,kBAAIf,IAAK,CAAEgB,OAAQ,EAAG5D,MAAO,YAA7B,kBAAqD6D,SACrD,YAAC,GAAD,QCCS,SAASC,KACtB,OACE,YAAC,GAAD,KACE,YAAC,GAAD,MACA,YAAC,EAAD,KACE,YAAC,IAAD,KACE,YAACC,EAAD,OAEF,YAAC,GAAD,MACA,YAAC,GAAD,Q,0vCCJRC,KAAQC,IAAIC,KAAKC,KAAKC,KAAKC,KAAKC,MAEhCC,IAASC,OAEP,kBAAC,WAAD,KACE,kBAAC,IAAD,CACEC,OAAQ7B,YAAF,QA6CR,kBAAC,IAAD,CAAUrC,MAAOA,GACf,kBAACuD,GAAD,QAIJY,SAASC,eAAe,W","file":"static/js/main.8dfd04af.chunk.js","sourcesContent":["import { createSlice, PayloadAction } from \"@reduxjs/toolkit\"\n\ntype Sound = {\n  name: string\n  description: string\n}\n\nconst soundsSlice = createSlice({\n  name: \"sounds\",\n  initialState: [],\n  reducers: {\n    addSound(state: Sound[], action: PayloadAction<Sound>) {\n      const { name, description } = action.payload\n      state.push({ name, description })\n    },\n  },\n})\n\nexport const { addSound } = soundsSlice.actions\n\nexport default soundsSlice.reducer\n","import { createSlice } from \"@reduxjs/toolkit\"\n\nconst uxSlice = createSlice({\n  name: \"ux\",\n  initialState: {\n    menu: false,\n  },\n  reducers: {\n    toggleMenu: state => {\n      state.menu = !state.menu\n    },\n  },\n})\n\nexport const selectMenu = (state: any) => state.ux.menu\nexport const { toggleMenu } = uxSlice.actions\nexport default uxSlice.reducer\n","import { configureStore } from \"@reduxjs/toolkit\"\nimport soundsSlice from \"./features/sounds/soundsSlice\"\nimport uxSlice from \"./features/ux/uxSlice\"\n\nexport default configureStore({\n  reducer: {\n    sounds: soundsSlice,\n    ux: uxSlice,\n  },\n})\n","import styled from \"@emotion/styled\"\n\nconst EditorWrapper = styled.div`\n  height: max-content;\n  display: grid;\n  grid-template-columns: auto 40%;\n  grid-template-rows: auto;\n  grid-template-areas:\n    \"audionodes visual\"\n    \"audionodes piano\";\n\n  > :nth-of-type(1) {\n    grid-area: audionodes;\n  }\n  > :nth-of-type(2) {\n    grid-area: visual;\n  }\n  > :nth-of-type(3) {\n    grid-area: piano;\n  }\n`\n\nexport default EditorWrapper\n","// @ts-ignore\nexport const audioContext = new (window.AudioContext || window.webkitAudioContext)()\n\nexport const ctime = audioContext.currentTime\nexport const destination = audioContext.destination\n\nexport const nodes = new Map<string, AudioNode>()\n","import { useState, useEffect } from \"react\"\nimport { audioContext, nodes, ctime } from \"../scripts/audio\"\n\nconst useOscillatorNode = (id: string, frequency: number, detune: number, type: OscillatorType) => {\n  const [ready, setReady] = useState(false)\n\n  useEffect(() => {\n    const osc = audioContext.createOscillator()\n    osc.start()\n    nodes.set(id, osc)\n    setReady(true)\n  }, [id])\n\n  useEffect(() => {\n    ;(nodes.get(id) as OscillatorNode).frequency.setValueAtTime(frequency, ctime)\n  }, [id, frequency])\n\n  useEffect(() => {\n    ;(nodes.get(id) as OscillatorNode).detune.setValueAtTime(detune, ctime)\n  }, [id, detune])\n\n  useEffect(() => {\n    ;(nodes.get(id) as OscillatorNode).type = type\n  }, [id, type])\n\n  return {\n    ready,\n  }\n}\n\nexport default useOscillatorNode\n","import styled from \"@emotion/styled\"\n\nexport const Title = styled.div`\n  text-align: center;\n`\n\nexport const FormWrapper = styled.div`\n  padding: 8px;\n  margin: 8px 0;\n  background-color: #364156;\n  cursor: default;\n`\n\nexport const Label = styled.label`\n  display: block;\n  font-size: 0.8rem;\n  text-transform: capitalize;\n  input[type=\"number\"] {\n    display: block;\n    margin-top: 2px;\n    background-color: rgba(255, 255, 255, 0.7);\n    border-width: 1px;\n    padding: 1px 0 1px 4px;\n  }\n  > :not(:last-child) {\n    margin-bottom: 12px;\n  }\n`\n\nexport const Hr = styled.hr`\n  margin: 10px 0 6px 0;\n  border: 0;\n  border-bottom: 2px ridge #212d40;\n`\n","/** @jsx jsx */\nimport { jsx } from \"@emotion/core\"\nimport { memo, useState, Fragment } from \"react\"\nimport { Handle, Position, NodeComponentProps } from \"react-flow-renderer\"\nimport useOscillatorNode from \"../../../hooks/useOscillatorNode\"\nimport { Title, FormWrapper, Hr } from \"../nodeform\"\nimport { Label } from \"../nodeform\"\n\nconst types: OscillatorType[] = [\"sine\", \"square\", \"sawtooth\", \"triangle\"]\n\nexport default memo(({ id }: NodeComponentProps) => {\n  const [frequency, setFrequency] = useState(440)\n  const [detune, setDetune] = useState(0)\n  const [type, setType] = useState(types[0])\n  const { ready } = useOscillatorNode(id, frequency, detune, type)\n\n  return (\n    <Fragment>\n      <Title>Oscillator #{id}</Title>\n      <FormWrapper>\n        <Label>\n          Frequency (-24k — 24k)\n          <input\n            disabled={!ready}\n            type=\"number\"\n            min=\"-24000\"\n            max=\"24000\"\n            value={frequency}\n            onChange={event => setFrequency(event.currentTarget.valueAsNumber)}\n          />\n        </Label>\n        <Hr />\n        <Label>\n          Detune (-10k — 10k)\n          <input\n            className=\"detune\"\n            type=\"number\"\n            min={-10000}\n            max={10000}\n            value={detune}\n            onChange={event => setDetune(event.currentTarget.valueAsNumber)}\n          />\n        </Label>\n        <Hr />\n        <Label>Type</Label>\n        {types.map(typeVal => (\n          <Label key={typeVal}>\n            <input\n              type=\"radio\"\n              value={typeVal}\n              checked={type === typeVal}\n              onChange={event => setType(event.currentTarget.value as OscillatorType)}\n            />\n            {typeVal}\n          </Label>\n        ))}\n      </FormWrapper>\n      <Handle type=\"source\" position={Position.Bottom} style={{ background: \"#B0BF1A\" }} />\n    </Fragment>\n  )\n})\n","import { useState, useEffect } from \"react\"\nimport { audioContext, nodes, ctime } from \"../scripts/audio\"\n\nconst useGainNode = (id: string, gain: number) => {\n  const [ready, setReady] = useState(false)\n\n  useEffect(() => {\n    nodes.set(id, audioContext.createGain())\n    setReady(true)\n  }, [id])\n\n  useEffect(() => {\n    ;(nodes.get(id) as GainNode).gain.setValueAtTime(gain, ctime)\n  }, [id, gain])\n\n  return {\n    ready,\n  }\n}\n\nexport default useGainNode\n","/** @jsx jsx */\nimport { jsx } from \"@emotion/core\"\nimport { memo, useState, Fragment } from \"react\"\nimport { Handle, Position, NodeComponentProps } from \"react-flow-renderer\"\nimport useGainNode from \"../../../hooks/useGainNode\"\nimport { Title, FormWrapper } from \"../nodeform\"\nimport { Label } from \"../nodeform\"\n\nexport default memo(({ id }: NodeComponentProps) => {\n  const [gain, setGain] = useState(1)\n  const { ready } = useGainNode(id, gain)\n\n  return (\n    <Fragment>\n      <Handle type=\"target\" position={Position.Top} style={{ background: \"#fff6\" }} />\n      <Title>Gain #{id}</Title>\n      <FormWrapper>\n        <Label>\n          Gain (0.0 — 1.0)\n          <input\n            disabled={!ready}\n            type=\"number\"\n            min={0}\n            max={1}\n            step={0.1}\n            value={gain}\n            onChange={event => setGain(event.currentTarget.valueAsNumber)}\n          />\n        </Label>\n      </FormWrapper>\n      <Handle type=\"source\" position={Position.Bottom} style={{ background: \"#B0BF1A\" }} />\n    </Fragment>\n  )\n})\n","import { useState, useEffect } from \"react\"\nimport { audioContext, nodes, ctime } from \"../scripts/audio\"\n\nconst useBiquadFilterNode = (\n  id: string,\n  type: BiquadFilterType,\n  frequency: number,\n  gain: number\n) => {\n  const [ready, setReady] = useState(false)\n\n  useEffect(() => {\n    nodes.set(id, audioContext.createBiquadFilter())\n    setReady(true)\n  }, [id])\n\n  useEffect(() => {\n    ;(nodes.get(id) as BiquadFilterNode).type = type\n  }, [id, type])\n\n  useEffect(() => {\n    ;(nodes.get(id) as BiquadFilterNode).frequency.setValueAtTime(frequency, ctime)\n  }, [id, frequency])\n\n  useEffect(() => {\n    ;(nodes.get(id) as BiquadFilterNode).gain.setValueAtTime(gain, ctime)\n  }, [id, gain])\n\n  return {\n    ready,\n  }\n}\n\nexport default useBiquadFilterNode\n","/** @jsx jsx */\nimport { jsx } from \"@emotion/core\"\nimport { memo, useState, Fragment } from \"react\"\nimport { Handle, Position, NodeComponentProps } from \"react-flow-renderer\"\nimport useBiquadFilterNode from \"../../../hooks/useBiquadFilterNode\"\nimport { Title, FormWrapper, Hr } from \"../nodeform\"\nimport { Label } from \"../nodeform\"\n\nconst types: BiquadFilterType[] = [\"lowshelf\", \"highshelf\", \"peaking\"]\n\nexport default memo(({ id }: NodeComponentProps) => {\n  const [type, setType] = useState(types[0])\n  const [frequency, setFrequency] = useState(440)\n  const [gain, setGain] = useState(0)\n  const { ready } = useBiquadFilterNode(id, type, frequency, gain)\n\n  return (\n    <Fragment>\n      <Handle type=\"target\" position={Position.Top} style={{ background: \"#fff6\" }} />\n      <Title>Biquad Filter #{id}</Title>\n      <FormWrapper>\n        <Label>Type</Label>\n        {types.map(typeVal => (\n          <Label key={typeVal}>\n            <input\n              type=\"radio\"\n              value={typeVal}\n              checked={type === typeVal}\n              onChange={event => setType(event.currentTarget.value as BiquadFilterType)}\n            />\n            {typeVal}\n          </Label>\n        ))}\n        <hr />\n        <Label>\n          Frequency (-24k — 24k)\n          <input\n            disabled={!ready}\n            type=\"number\"\n            min=\"-24000\"\n            max=\"24000\"\n            value={frequency}\n            onChange={event => setFrequency(event.currentTarget.valueAsNumber)}\n          />\n        </Label>\n        <Hr />\n        <Label>\n          Gain (-40 — 40)\n          <input\n            disabled={!ready}\n            type=\"number\"\n            min={-40}\n            max={40}\n            value={gain}\n            onChange={event => setGain(event.currentTarget.valueAsNumber)}\n          />\n        </Label>\n      </FormWrapper>\n      <Handle type=\"source\" position={Position.Bottom} style={{ background: \"#B0BF1A\" }} />\n    </Fragment>\n  )\n})\n","import { XYPosition } from \"react-flow-renderer\"\n\n/**\n * Random number between:\n * @param min (included)\n * @param max (not included)\n */\nexport const randomBetween = (min: number, max: number) => Math.random() * (max - min) + min\n\n/**\n * Find appropriate position for the coming node.\n * @param canvasWidth Audio graph canvas width\n * @param canvasHeight Audio graph canvas height\n * @param bottom Place should be on the top or on the bottom\n */\nexport const newNodePosition = (\n  canvasWidth: number,\n  canvasHeight: number,\n  bottom = false\n): XYPosition => {\n  const halfHeight = canvasHeight / 2\n  return {\n    x: randomBetween(0, canvasWidth - 200),\n    y: bottom ? randomBetween(halfHeight, canvasHeight) : randomBetween(0, halfHeight),\n  }\n}\n","import styled from \"@emotion/styled\"\n\nexport const GraphMutateButton = styled.button<any>`\n  position: absolute;\n  top: ${props => (props.fourth ? \"104px\" : props.third ? \"72px\" : props.second ? \"40px\" : \"8px\")};\n  right: 10px;\n  width: 160px;\n  height: 28px;\n  z-index: 4;\n  border-radius: 4px;\n  background-color: #212d40;\n  border-color: #212d40;\n  color: #fff;\n  svg {\n    float: left;\n    color: #ccc;\n  }\n`\nexport const NodeButton = styled.button<any>`\n  width: 100%;\n  height: 28px;\n  border-radius: 4px;\n  background-color: #212d40;\n  border-color: #212d40;\n  color: #fff;\n  svg {\n    float: left;\n    color: #ccc;\n  }\n`\n","import { audioContext, nodes } from \"../scripts/audio\"\nimport { AUDIO_CONTEXT_DESTINATION } from \"../types\"\n\nconst useAudioNodes = () => {\n  const connectNodes = (source: string, target: string) => {\n    if (target === AUDIO_CONTEXT_DESTINATION) {\n      nodes.get(source)?.connect(audioContext.destination)\n    } else {\n      const destination = nodes.get(target)\n      if (destination) nodes.get(source)?.connect(destination)\n    }\n  }\n\n  const disconnectNodes = (source: string, target: string) => {\n    if (target === AUDIO_CONTEXT_DESTINATION) {\n      nodes.get(source)?.disconnect()\n    } else {\n      const destination = nodes.get(target)\n      if (destination) nodes.get(source)?.disconnect(destination)\n    }\n  }\n\n  const delNode = (id: string) => {\n    const node = nodes.get(id)\n    node?.disconnect()\n    nodes.delete(id)\n  }\n\n  return {\n    delNode,\n    connectNodes,\n    disconnectNodes,\n  }\n}\n\nexport default useAudioNodes\n","export const AUDIO_CONTEXT_DESTINATION = \"destination\"\n","import { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\"\nimport React, { useState, useRef, useEffect } from \"react\"\nimport ReactFlow, {\n  Edge,\n  Node,\n  addEdge,\n  Elements,\n  Controls,\n  Connection,\n  Background,\n  useStoreState,\n  removeElements,\n  BackgroundVariant,\n} from \"react-flow-renderer\"\nimport Oscillator from \"./nodes/Oscillator\"\nimport Gain from \"./nodes/Gain\"\nimport BiquadFilter from \"./nodes/BiquadFilter\"\nimport { newNodePosition } from \"../../scripts/utils\"\nimport { GraphMutateButton } from \"./buttons\"\nimport { AUDIO_CONTEXT_DESTINATION } from \"../../types\"\nimport useAudioNodes from \"../../hooks/useAudioNodes\"\n\nconst defaultNode: Node = {\n  id: AUDIO_CONTEXT_DESTINATION,\n  type: \"output\",\n  selectable: false,\n  connectable: true,\n  data: { label: \"Audio Output\" },\n  style: {\n    backgroundColor: \"#364156\",\n    color: \"#fff\",\n  },\n  position: { x: 0, y: 0 },\n}\n\nconst checkSize = (prev: number, next: number) => prev === next\n\nconst NodeGraph = () => {\n  const { connectNodes, disconnectNodes, delNode } = useAudioNodes()\n  // const nodes = useStoreState(store => store.nodes)\n  const width = useStoreState(store => store.width, checkSize)\n  const height = useStoreState(store => store.height, checkSize)\n  const [elements, setElements] = useState<Elements>([])\n  const selected = useRef<Elements | null>(null)\n\n  useEffect(() => {\n    if (width > 0 && height > 0 && elements.length === 0) {\n      defaultNode.position = { x: width / 2, y: height / 2 }\n      setElements([defaultNode])\n    }\n  }, [width, height, elements])\n\n  const removeSelected = () => {\n    if (selected.current !== null) {\n      selected.current.forEach(el => {\n        if (el.type !== undefined) {\n          delNode(el.id)\n        } else {\n          disconnectNodes((el as Edge).source, (el as Edge).target)\n        }\n      })\n\n      setElements(removeElements(selected.current, elements))\n      selected.current = null\n    }\n  }\n\n  const onConnect = (connection: Edge | Connection) => {\n    if (connection.source !== null && connection.target !== null) {\n      connectNodes(connection.source, connection.target)\n      setElements(els => addEdge(connection, els))\n    }\n  }\n\n  const addOscillator = () =>\n    setElements([\n      ...elements,\n      {\n        id: (elements.length + 1).toString(),\n        type: \"oscillator\",\n        className: \"audioNode\",\n        position: newNodePosition(width, height),\n      },\n    ])\n\n  const addGain = () =>\n    setElements([\n      ...elements,\n      {\n        id: (elements.length + 1).toString(),\n        type: \"gain\",\n        className: \"audioNode\",\n        position: newNodePosition(width, height),\n      },\n    ])\n\n  const addBiquadFilter = () =>\n    setElements([\n      ...elements,\n      {\n        id: (elements.length + 1).toString(),\n        type: \"biquadfilter\",\n        className: \"audioNode\",\n        position: newNodePosition(width, height),\n      },\n    ])\n\n  return (\n    <ReactFlow\n      elements={elements}\n      onConnect={onConnect}\n      onSelectionChange={els => (selected.current = els)}\n      nodeTypes={{\n        oscillator: Oscillator,\n        gain: Gain,\n        biquadfilter: BiquadFilter,\n      }}\n      connectionLineStyle={{ stroke: \"#006\" }}\n      snapToGrid={true}\n      snapGrid={[16, 16]}\n      style={{ backgroundColor: \"#7d4e57\" }}\n    >\n      <Controls showInteractive={false} />\n      <Background variant={BackgroundVariant.Lines} color=\"#A16873\" gap={32} />\n\n      <GraphMutateButton onClick={addOscillator}>\n        <FontAwesomeIcon icon={[\"fas\", \"wave-sine\"]} />\n        Add Oscillator\n      </GraphMutateButton>\n      <GraphMutateButton second onClick={addGain}>\n        <FontAwesomeIcon icon={[\"fas\", \"volume\"]} />\n        Add Gain\n      </GraphMutateButton>\n      <GraphMutateButton third onClick={addBiquadFilter}>\n        <FontAwesomeIcon icon={[\"fas\", \"filter\"]} />\n        Add Biquad Filter\n      </GraphMutateButton>\n      <GraphMutateButton fourth onClick={removeSelected}>\n        <FontAwesomeIcon icon={[\"fas\", \"trash-alt\"]} />\n        Remove Selected\n      </GraphMutateButton>\n    </ReactFlow>\n  )\n}\n\nexport default NodeGraph\n","import styled from \"@emotion/styled\"\n\nconst Main = styled.div`\n  width: 100vw;\n  height: 100vh;\n  margin: 0;\n  padding: 0;\n  display: flex;\n  flex-direction: column;\n  > div:nth-of-type(1) {\n    flex-grow: 0;\n  }\n  > div:nth-of-type(2) {\n    flex-grow: 1;\n  }\n`\n\nexport default Main\n","/** @jsx jsx */\nimport { jsx, css } from \"@emotion/core\"\n\nconst Visual = () => {\n  return (\n    <div\n      css={css`\n        display: flex;\n        align-items: center;\n        font-size: 3rem;\n        justify-content: center;\n        background-color: #364156;\n        color: #d66853;\n      `}\n    >\n      VISUAL\n    </div>\n  )\n}\n\nexport default Visual\n","/** @jsx jsx */\nimport { jsx, css } from \"@emotion/core\"\n\nconst Piano = () => {\n  return (\n    <div\n      css={css`\n        display: flex;\n        align-items: center;\n        font-size: 3rem;\n        justify-content: center;\n        background-color: #11151c;\n        color: #fff;\n      `}\n    >\n      PIANO\n    </div>\n  )\n}\n\nexport default Piano\n","import styled from \"@emotion/styled\"\n\nconst HeaderWrapper = styled.div`\n  background-color: #11151c;\n  color: #fff;\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  padding: 0 8px 0 3px;\n`\n\nexport default HeaderWrapper\n","/** @jsx jsx */\nimport { jsx, css } from \"@emotion/core\"\nimport { useDispatch } from \"react-redux\"\nimport { toggleMenu } from \"../../features/ux/uxSlice\"\n\nconst menuWrapper = css`\n  top: 0;\n  right: 0;\n  width: 300px;\n  position: fixed;\n  z-index: 200;\n  background-color: #000;\n`\n\nconst Menu = () => {\n  const dispatch = useDispatch()\n\n  return (\n    <div\n      css={menuWrapper}\n      onMouseEnter={() => dispatch(toggleMenu())}\n      onMouseLeave={() => dispatch(toggleMenu())}\n    >\n      <h2 css={{ textAlign: \"center\" }}>MENU</h2>\n      <ul css={{ lineHeight: 1.8, fontSize: \"1.1rem\" }}>\n        <li>One</li>\n        <li>Two</li>\n        <li>Three</li>\n      </ul>\n    </div>\n  )\n}\n\nexport default Menu\n","import React from \"react\"\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\"\nimport { selectMenu, toggleMenu } from \"../../features/ux/uxSlice\"\nimport { useSelector, useDispatch } from \"react-redux\"\nimport Menu from \"./Menu\"\n\nconst MenuOpener = () => {\n  const menu = useSelector(selectMenu)\n  const dispatch = useDispatch()\n\n  return (\n    <>\n      <FontAwesomeIcon\n        icon={[\"fas\", \"bars\"]}\n        size=\"lg\"\n        onMouseEnter={() => dispatch(toggleMenu())}\n        onMouseLeave={() => dispatch(toggleMenu())}\n      />\n      {menu && <Menu />}\n    </>\n  )\n}\n\nexport default MenuOpener\n","/** @jsx jsx */\nimport { jsx } from \"@emotion/core\"\nimport HeaderWrapper from \"./HeaderWrapper\"\nimport MenuOpener from \"./MenuOpener\"\n\nconst Header = () => {\n  return (\n    <HeaderWrapper>\n      <h1 css={{ margin: 0, color: \"#f2f4f7\" }}>WAAπSynth {process.env.REACT_APP_VERSION}</h1>\n      <MenuOpener />\n    </HeaderWrapper>\n  )\n}\n\nexport default Header\n","/** @jsx jsx */\nimport { jsx } from \"@emotion/core\"\nimport { ReactFlowProvider } from \"react-flow-renderer\"\nimport EditorWrapper from \"./components/misc/EditorWrapper\"\nimport AudioGraph from \"./components/graph/AudioGraph\"\nimport Main from \"./components/misc/Main\"\nimport Visual from \"./components/visual/Visual\"\nimport Piano from \"./components/piano/Piano\"\nimport Header from \"./components/header/Header\"\n\nexport default function App() {\n  return (\n    <Main>\n      <Header />\n      <EditorWrapper>\n        <ReactFlowProvider>\n          <AudioGraph />\n        </ReactFlowProvider>\n        <Visual />\n        <Piano />\n      </EditorWrapper>\n    </Main>\n  )\n}\n","import React, { Fragment } from \"react\"\nimport ReactDOM from \"react-dom\"\nimport { Provider } from \"react-redux\"\nimport store from \"./store\"\nimport App from \"./App\"\n// import * as serviceWorker from \"./serviceWorker\"\nimport { Global, css } from \"@emotion/core\"\nimport { library } from \"@fortawesome/fontawesome-svg-core\"\nimport { fab } from \"@fortawesome/free-brands-svg-icons\"\nimport { fad } from \"@fortawesome/pro-duotone-svg-icons\"\nimport { fal } from \"@fortawesome/pro-light-svg-icons\"\nimport { far } from \"@fortawesome/pro-regular-svg-icons\"\nimport { fas } from \"@fortawesome/pro-solid-svg-icons\"\n\n//TODO: collect icons and check sizes https://fontawesome.com/how-to-use/on-the-web/using-with/react#using\nlibrary.add(fab, fad, fal, far, fas)\n\nReactDOM.render(\n  // <React.StrictMode>\n  <Fragment>\n    <Global\n      styles={css`\n        @import url(\"https://fonts.googleapis.com/css2?family=Tomorrow&display=swap\");\n        * {\n          box-sizing: border-box;\n        }\n        html,\n        body {\n          padding: 0;\n          margin: 0;\n          width: 100vw;\n          height: 100vh;\n          font-family: Tomorrow, sans-serif;\n          font-style: normal;\n          font-weight: 400;\n          font-size: 16px;\n        }\n        button {\n          font-family: Tomorrow, sans-serif;\n        }\n        .react-flow__controls-button {\n          width: 25px;\n          height: 25px;\n          opacity: 0.5;\n        }\n        .react-flow__node.audioNode {\n          border: 2px solid #212d40;\n          border-radius: 3px;\n          background-color: #212d40;\n          color: #fff;\n          padding: 10px;\n          &.selected {\n            border-color: #aebdd5;\n          }\n        }\n        .react-flow__edge {\n          .react-flow__edge-path {\n            stroke: #33c;\n          }\n          &.selected .react-flow__edge-path {\n            stroke-width: 2.5;\n            stroke: #aebdd5;\n          }\n        }\n      `}\n    />\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </Fragment>,\n  // </React.StrictMode>,\n  document.getElementById(\"root\")\n)\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n// serviceWorker.unregister()\n"],"sourceRoot":""}